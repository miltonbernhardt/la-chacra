{"version":3,"sources":["components/Toast.js","Images.js","resources/paths.js","components/ErrorPage.js","pages/Error/ForbiddenPage.js","pages/Error/NotFoundPage.js","components/Input.js","resources/fields.js","resources/messages.js","resources/validations.js","services/RestServices.js","services/use-auth.js","pages/LoginPage.js","components/CustomToolbar.js","components/Drawer.js","components/Loading.js","components/PageTableButtonPane.js","components/Select.js","pages/Clientes/DialogAltaCliente.js","pages/Clientes/DialogBajaCliente.js","pages/Clientes/GridClientes.js","pages/Clientes/Clientes.js","components/PageFormTable.js","pages/Expedicion/DialogEliminarExpedicion.js","pages/Expedicion/ScanDialog.js","pages/Expedicion/FormExpedicion.js","pages/Expedicion/GridExpedicion.js","pages/Expedicion/CargarExpedicion.js","pages/HomePage.js","pages/Lotes/DialogEliminarLote.js","pages/Lotes/FormLote.js","pages/Lotes/GridLotes.js","pages/Lotes/CargarLote.js","pages/Mantenimiento/MantenimientoCard.js","pages/Mantenimiento/MantenimientoCardList.js","pages/Mantenimiento/Mantenimiento.js","pages/Precios/FormPrecios.js","pages/Precios/GridPrecios.js","pages/Precios/CargarPrecios.js","pages/Quesos/DialogCargarQueso.js","pages/Quesos/DialogEliminarQueso.js","pages/Quesos/GridQuesos.js","pages/Quesos/CargarQuesos.js","pages/Remito/GridRemito.js","pages/Remito/RemitoForm.js","pages/Remito/EmitirRemito.js","pages/Rendimiento/RendimientoCard.js","components/Title.js","components/Chart.js","pages/Rendimiento/RendimientoChart.js","pages/Rendimiento/RendimientoQuesoCard.js","pages/Rendimiento/RendimientoSearch.js","pages/Rendimiento/Rendimiento.js","pages/StockEmbalaje/StockEmbalajeCard.js","pages/StockEmbalaje/StockEmbalaje.js","pages/StockProductos/StockProductoDialog.js","pages/StockProductos/StockCard.js","pages/StockProductos/StockProductos.js","pages/Ventas/ChartVentas.js","pages/Ventas/GridVentas.js","pages/Ventas/SearchVentas.js","pages/Ventas/SelectVentasByQueso.js","pages/Ventas/VentasByQueso.js","pages/Ventas/VerVentas.js","pages/VerLitrosProducidos/ChartLitros.js","pages/VerLitrosProducidos/GridLitros.js","pages/VerLitrosProducidos/SelectLitrosByQueso.js","pages/VerLitrosProducidos/LitrosByQueso.js","pages/VerLitrosProducidos/SearchLitros.js","pages/VerLitrosProducidos/VerLitrosElaborados.js","pages/VerProduccion/EditLoteDialog.js","pages/VerProduccion/FormProduccion.js","pages/VerProduccion/GridProduccion.js","pages/VerProduccion/VerProduccion.js","pages/VerTrazabilidad/FormTrazabilidad.js","pages/VerTrazabilidad/GridTrazabilidad.js","pages/VerTrazabilidad/VerTrazabilidad.js","components/Routes.js","pages/MainPage.js","pages/PrivateRoute.js","resources/theme.js","index.js"],"names":["Toast","containerStyle","bottom","right","position","toastOptions","iconTheme","primary","style","width","fontSize","color","boxShadow","success","duration","background","error","LoginIcon","src","height","margin","HomeIcon","CheeseImage","marginBottom","marginTop","marginLeft","marginRight","CheeseAngryImage","CowDeadImage","CowSadImage","ErrorImage","imageNumber","Math","floor","random","PickedImage","home","login","forbidden","notFound","cargarExpedicion","cargarLotes","cargarPrecios","cargarQuesos","clientes","emitirRemito","mantenimiento","rendimiento","stockEmbalaje","stockProductos","verLitros","verProduccion","verTrazabilidad","verVentas","WhiteTypography","withStyles","root","Typography","ErrorPage","title","description","React","document","body","backgroundColor","Container","CssBaseline","Box","sx","display","flexDirection","justifyContent","alignItems","component","variant","gutterBottom","Link","fontStyle","onClick","window","location","href","pathHome","ForbiddenPage","NotFoundPage","Input","forwardRef","ref","id","label","value","type","required","sm","useState","val","setVal","err","serErr","setValAndUpdate","useEffect","useImperativeHandle","setValue","Object","validate","errors","functionsMsg","isValid","some","func","msg","set","Grid","item","xs","TextField","name","fullWidth","InputLabelProps","shrink","onChange","e","target","backID","backFechaElaboracion","backCantHormas","backCantCajas","backLitrosLeche","backNumeroTina","backPeso","backCodigoQueso","backIdQueso","backCodigo","backNomenclatura","backTipoQueso","backLoteCultivo","backLoteColorante","backLoteCalcio","backLoteCuajo","backCuit","backRazonSocial","backDomicilio","backCodPostal","backLocalidad","backProvincia","backPais","backTransporte","backSenasaUta","backEmail","backTelefono","backCelular","backIdTipoCliente","backIdCliente","backIdLote","backPesoExpedicion","backCantidad","backImporte","backFechaExpedicion","backPrecio","backColor","backFechaHasta","backStockLote","backFechaRemito","backImporteTotal","backUsername","backPassword","fechaElaboracion","cantHormas","cantCajas","litrosLeche","numeroTina","peso","queso","loteCultivo","loteColorante","loteCalcio","loteCuajo","codigo","nomenclatura","tipoQueso","cuit","razonSocial","domicilio","codPostal","localidad","provincia","pais","transporte","senasaUta","email","telefono","celular","idTipoCliente","precio","cliente","numeroLote","cantidad","pesoExpedicion","importe","fechaExpedicion","fechaDesde","fechaHasta","fechaRemito","importeTotal","cantidadMeses","backCantidadMeses","username","password","toastValidationErrors","Map","toast","dismiss","console","log","mapFields","fields","backendFields","forEach","field","realField","get","valEmptyFecha","valOlderDate","valZeroValue","valEmptyField","errorProductNotSelected","minorToOne","biggerThanThousand","empty","emptySelect","selectedVal","olderDate","currentDate","Date","today","getFullYear","getMonth","getDate","validator","isBefore","env","process","RAIZ_URL","API_LOTE","API_QUESO","API_CLIENTE","API_PRECIO","API_EXPEDICION","API_REMITO","headers","getNewHeader","signinApi","a","URL","axios","post","then","response","data","message","Error","catch","processResponseError2","signupApi","signoutApi","processResponseError","permisos","status","processStatusCode2","entries","statusCode","pathname","paths","localStorage","removeItem","postLote","lote","POST","putLote","PUT","deleteLote","DELETE","getLote","GET","getLotesBetweenDates","getLotesByQuesoWithStock","codigoQueso","getRendimientoByDia","getRendimientoByQueso","getLitros","getAllQuesos","postQueso","putQueso","deleteQueso","getAllTipoClientes","getAllClientes","postCliente","putCliente","deleteCliente","getAllPrecios","postPrecio","putPrecio","postExpedicion","expedicion","putExpedicion","deleteExpedicion","getExpedicionesByLote","idLote","getRemito","idCliente","fecha","postRemito","getVentas","postfixUrl","method","debug","request","info","processSuccessResponseWithMessage","put","delete","processStatusCode","authContext","createContext","ProvideAuth","children","auth","authorizations","setAuthorizations","getItem","isLogged","setIsLogged","permissions","finally","signin","setItem","signup","user","signout","useProvideAuth","Provider","useAuth","useContext","loginForm","LoginPage","refUsername","createRef","refPassword","useLocation","from","state","push","to","maxWidth","container","spacing","mt","Button","mb","event","preventDefault","current","validation","size","CustomToolbar","drawerOpen","handleDrawerOpen","Toolbar","IconButton","edge","mr","noWrap","flexGrow","DrawerHeader","styled","theme","padding","mixins","toolbar","contrastText","DrawerButton","path","action","icon","ListItem","button","ListItemIcon","ListItemText","HomeSection","closeDrawer","Divider","List","LoadUpSection","enableCargarLotes","Array","isArray","includes","enableCargarExpedicion","enableEmitirRemitos","undefined","BusinessSection","enableCargarQuesos","enableCargarPrecios","enableCargarClientes","StatsSection","enableVerProduccion","enableVerLitros","enableStockProductos","enableRendimiento","enableVerVentas","BackgroundSection","enableStockEmbalaje","enableMantenimiento","enableTrazabilidad","LogoutSection","logout","Drawer","drawerWidth","open","handleDrawerClose","history","useHistory","flexShrink","boxSizing","anchor","direction","Loading","CircularProgress","PageTableButtonPane","buttons","grid","paddingRight","minHeight","borderRadius","paddingBottom","ButtonGroup","Select","options","disabled","filter","o","pop","Autocomplete","autoHighlight","getOptionLabel","option","renderOption","props","renderInput","params","isOptionEqualToValue","clienteInicial","fax","DialogAltaCliente","onClose","onSubmit","isEditing","tiposCliente","clienteForm","setClienteForm","refSelectCliente","refRazonSocial","refCuit","refDomicilio","refCodPostal","refLocalidad","refProvincia","refPais","refTransporte","refSenasaUta","refEmail","refTelefono","refFax","refCelular","dialogTitle","useMemo","titleCliente","labelSubmit","Dialog","scroll","DialogTitle","DialogContent","paddingLeft","DialogActions","values","DialogBajaCliente","contentEditable","GridClientes","setSelection","columns","headerName","flex","minWidth","rows","autoHeight","rowHeight","pageSize","rowsPerPageOptions","onCellClick","CargarClientes","setCliente","listaClientes","setListaClientes","tiposClientes","setTiposClientes","isLoadingClientes","setLoadingClientes","isLoadingTipoClientes","setLoadingTipoClientes","setEditing","fetchClientes","useCallback","c","setOpenDialogAlta","onDelete","onCloseDialog","openDialogAlta","openDialogBaja","setOpenDialogBaja","valoresTiposClientes","map","tipo","PageFormTable","form","table","titleTable","titleForm","mdForm","lgForm","md","lg","DialogEliminarExpedicion","DialogContentText","ScanDialog","listaLecturas","setListaLecturas","setPesoExpedicion","refCantidad","refFechaExpedicion","handleError","alert","handleCargar","length","at","handleCancelar","onScan","scan","charAt","substring","result1","result2","result3","parseFloat","round","onError","Stack","newList","handleDeleteRow","FormExpedicion","handleSubmit","handleDelete","expedicionForm","setExpedicionForm","setFechaExpedicion","openScanDialog","setOpenScanDialog","firstScan","setFirstScan","refIdLote","refPeso","submitScan","handleFirstScan","handleScanError","closeScanDialog","labelCargar","colorCargar","alignSelf","GridExpedicion","expediciones","valueFormatter","valueFormatted","expedicionInicial","CargarExpedicion","setExpedicion","listaExpediciones","setListaExpediciones","openDialogEliminar","setOpenDialogEliminar","submitDelete","handleSelect","cancelDelete","clientesFormatted","expedicionesFormatted","HomePage","DialogEliminarLote","FormLote","quesos","cancelEditing","isEditingLote","loteForm","setLoteForm","fechaProduccion","setFechaProduccion","refSelectQueso","refLitros","refNumTina","refCantHormas","refFecha","refCantCajas","refLoteCultivo","refLoteColorante","refLoteCalcio","refLoteCuajo","GridLotes","produccion","q","onCellDoubleClick","loteInicial","CargarProduccion","setLote","listaLotes","setListaLotes","listaQuesos","setListaQuesos","setEditingLote","eliminarDialog","setEliminarDialog","isLoading","setLoading","fetchQuesos","updateStateLote","attribute","eliminarLote","handleEliminar","cancelEliminar","quesosAutocomplete","loteSubmit","MantenimientoCard","Card","CardActionArea","CardHeader","avatar","Avatar","equipo","CardContent","textAlign","alignContent","MantenimientoCardList","overflowY","maxHeight","py","innerHeight","card","Mantenimiento","multiline","precioInicial","valor","idQueso","FormPrecios","precioForm","setPrecioForm","refPrecio","useRef","GridPrecios","precios","CargarPrecios","setPrecio","listaPrecios","setListaPrecios","listaTipoClientes","setListaTipoClientes","isLoadingPrecios","setLoadingPrecios","isLoadingQuesos","setLoadingQuesos","fetchPrecios","p","tiposClienteAutocomplete","preciosFormatted","t","quesoInicial","DialogCargarQueso","isCargarQueso","isEditarQueso","quesoForm","setQuesoForm","refCodigo","refTipoQueso","refNomenclatura","refColor","DialogEliminarQueso","onBorrar","renderCell","Chip","GridQuesos","CargarQuesos","setQueso","setIsCargarQueso","setIsEditarQueso","isOpenEliminarProducto","setOpenEliminarProducto","listaAux","closeEliminarDialog","quesoSubmit","GridRemito","hideFooterPagination","RemitoForm","onCargar","onEmitir","emitible","refFechaRemito","handleEmitir","startIcon","EmitirRemito","setImporteTotal","listaItems","setListaItems","setEmitible","itemsRemito","focus","itemsFormatted","i","RendimientoCard","titulo","descripcion","bgcolor","red","Title","Chart","yLabel","xDataKey","dataKey","dataKey1","dataKey2","legend","dot","domain","useTheme","ResponsiveContainer","LineChart","top","left","XAxis","stroke","palette","text","secondary","typography","body2","YAxis","Label","angle","textAnchor","fill","body1","Tooltip","Legend","Line","isAnimationActive","RendimientoChart","xLabel","Paper","RendimientoQuesoCard","RendimientoSearch","fechaInicial","meses","onSearch","refMeses","handleSearch","toDate","Rendimiento","listaRendimientos","setListaRendimientos","rendimientosQuesos","setRendimientosQuesos","isLoadingRendimientos","setLoadingRendimientos","isLoadingRendimientoQueso","setLoadingRendimientoQueso","fetchRendimientos","setDate","year","month","date","padTo2Digits","num","toString","padStart","rendimientoPromedio","sum","ultimoRendimientoPromedio","ultimaSemana","slice","listaByQuesoFormatted","rendimientoMultilineFormatted","semana1","semana2","index","dia","rendimientoFormatted","dataArray","ceil","xl","StockEmbalajeCard","stock","productos","StockEmbalaje","StockProductoDialog","stockLote","StockCard","isStockDialogOpen","setStockDialogOpen","handleCardAction","closeDialog","StockProductos","ChartVentas","GridVentas","columnsQueso","SearchVentas","SelectVentasByQueso","VentasByQueso","listaVentas","quesosSelect","dataKeysInit","dataKeys","setDataKeys","handleChange","newKeys","VerVentas","setListaVentas","isLoadingVentas","setLoadingVentas","fetchVentas","ventasFormatted","ventasAsList","ventas","v","ventasAsProps","fromEntries","total","quesosFormatted","ventasMultilineFormatted","ChartLitros","GridLitros","SelectLitrosByQueso","LitrosByQueso","listaLitros","SearchLitros","VerLitrosElaborados","setListaLitros","isLoadingLitros","setLoadingLitros","fetchLitros","litrosFormatted","litrosAsList","litrosElaborados","litrosAsProps","litrosMultilineFormatted","EditLoteDialog","deleteEnabled","setDeleteEnabled","Switch","checked","evt","FormProduccion","onBuscar","initialDate","refFechaDesde","refFechaHasta","GridProduccion","sortComparator","v1","v2","VerProduccion","handleBuscar","fetchLotes","l","listaLotesFormatted","colorStock","sizeForm","FormTrazabilidad","GridTrazabilidad","VerTrazabilidad","ToNotFoundPage","Ruta","exact","Routes","AppBar","MuiAppBar","shouldForwardProp","prop","transition","transitions","create","easing","sharp","leavingScreen","easeOut","enteringScreen","MainContainer","MainPage","setDrawerOpen","PrivateRoute","rest","render","common","black","white","paper","default","light","main","dark","hint","Theme","createTheme","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.34e0f31f.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Toaster } from \"react-hot-toast\";\n\nexport const Toast = () => {\n    return (\n        <Toaster\n            containerStyle={{\n                bottom: 30,\n                right: 10,\n            }}\n            position=\"bottom-right\"\n            toastOptions={{\n                iconTheme: {\n                    primary: 'black',\n                },\n                style: {\n                    width: '100%',\n                    fontSize: '0.85em',\n                    color: 'white',\n                    boxShadow: '2px 2px 5px #b2b2b2'\n                },\n                success: {\n                    duration: 5000,\n                    style: {\n                        background: '#2e7d32',\n                    },\n                },\n                error: {\n                    duration: 5000,\n                    style: {\n                        background: '#e57373',\n                    },\n                },\n            }}\n        />\n    )\n}","import * as React from \"react\";\n\nexport const LoginIcon = () => {\n    return <img\n        src=\"/images/Logo.svg\"\n        height=\"400px\"\n        width=\"400px\"\n        style={{\n            margin: \"-60px\"\n        }}\n    />\n}\n\nexport const HomeIcon = () => {\n    return <img\n        src=\"/images/Logo.svg\"\n        height=\"100%\"\n        width=\"100%\"\n    />\n}\n\nconst CheeseImage = () => {\n    return <img\n        src=\"/images/cheese.png\"\n        height=\"350px\"\n        width=\"350px\"\n        style={{\n            marginBottom: \"-10px\", marginTop: \"-60px\", marginLeft: \"30px\", marginRight: \"-30px\"\n        }}\n    />\n}\n\nconst CheeseAngryImage = () => {\n    return <img\n        src=\"/images/cheese-angry.png\"\n        height=\"450px\"\n        width=\"450px\"\n        style={{\n            marginBottom: \"-90px\", marginTop: \"-80px\"\n        }}\n    />\n}\n\nconst CowDeadImage = () => {\n    return <img\n        src=\"/images/cow-dead.png\"\n        height=\"250px\"\n        width=\"250px\"\n        style={{\n            marginBottom: \"30px\"\n        }}\n    />\n}\n\nconst CowSadImage = () => {\n    return <img\n        src=\"/images/cow-sad.png\"\n        height=\"300px\"\n        width=\"300px\"\n        style={{\n            marginTop: \"-30px\", marginBottom: \"5px\"\n        }}\n    />\n}\n\nexport const ErrorImage = () => {\n    const imageNumber = Math.floor(Math.random() * 4);\n    const PickedImage = () => {\n        switch (imageNumber) {\n            case 0:\n                return <CheeseImage/>\n            case 1:\n                return <CheeseAngryImage/>\n            case 2:\n                return <CowDeadImage/>\n            default:\n                return <CowSadImage/>\n        }\n    }\n\n    return <PickedImage/>\n}\n\n\n","export const home = \"/\"\nexport const login = \"/login\"\nexport const forbidden = \"/prohibido\"\nexport const notFound = \"/no-encontrado\"\n\nexport const cargarExpedicion = \"/cargar/expedicion\"\nexport const cargarLotes = \"/cargar/lotes\"\nexport const cargarPrecios = \"/cargar/precios\"\nexport const cargarQuesos = \"/cargar/quesos\"\nexport const clientes = \"/clientes\"\nexport const emitirRemito = \"/emitir/remito\"\nexport const mantenimiento = \"/mantenimiento\"\nexport const rendimiento = \"/rendimiento\"\nexport const stockEmbalaje = \"/stock/embalaje\"\nexport const stockProductos = \"/stock/productos\"\nexport const verLitros = \"/ver/litros\"\nexport const verProduccion = \"/ver/produccion\"\nexport const verTrazabilidad = \"/ver/trazabilidad\"\nexport const verVentas = \"/ver/ventas\"","import { withStyles } from '@material-ui/core/styles'\nimport { Box, Container, CssBaseline, Link, Typography } from '@mui/material';\nimport * as React from 'react';\nimport { ErrorImage } from \"../Images\";\nimport { home as pathHome } from \"../resources/paths\";\n\nexport const WhiteTypography = withStyles({\n    root: {\n        color: \"#FFFFFF\"\n    }\n})(Typography);\n\nexport const ErrorPage = ({ error = '', title, description }) => {\n    const goToHome = () => window.location.href = pathHome\n\n    React.useEffect(() => {\n        document.body.style.backgroundColor = '#be2929'\n    }, [])\n\n    return (\n        <Container>\n            <CssBaseline/>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '98vh'\n                }}\n            >\n                <ErrorImage/>\n                <WhiteTypography component=\"div\" variant=\"h5\">\n                    ERROR {error}\n                </WhiteTypography>\n                <WhiteTypography component=\"div\" variant=\"h4\">\n                    {title}\n                </WhiteTypography>\n                <WhiteTypography component=\"div\" variant=\"subtitle1\" gutterBottom>\n                    {description}\n                </WhiteTypography>\n                <Link\n                    fontStyle='italic'\n                    variant=\"text\"\n                    color=\"#fff\"\n                    sx={{\n                        marginTop: '15px',\n                        color: '#fff'\n                    }}\n                    onClick={goToHome}\n                >\n                    Volver al inicio\n                </Link>\n            </Box>\n        </Container>\n    )\n}","import * as React from 'react';\nimport { ErrorPage } from \"../../components/ErrorPage\";\n\nexport const ForbiddenPage = () => {\n    return <ErrorPage\n        error={403}\n        title='ACCESO DENEGADO'\n        description='No posee acceso a la página deseada'\n    />\n}","import * as React from 'react';\nimport { ErrorPage } from \"../../components/ErrorPage\";\n\nexport const NotFoundPage = () => {\n    return <ErrorPage\n        error={404}\n        title='PÁGINA NO ENCONTRADA'\n        description='Tal vez la página que está buscando se eliminó o ingresó la URL incorrecta'\n    />\n}\n\n","import { Grid, TextField } from \"@mui/material\";\nimport * as React from 'react';\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\n\n// todo: buscar crear la funcion de que  si un input es el ultimo input de un form, que envie el form - crear function submit\nexport const Input = forwardRef(({ id, label, value, type = \"number\", required = false, sm }, ref) => {\n    const [val, setVal] = useState(value)\n    const [err, serErr] = useState(false)\n\n    const setFieldError = () => serErr(true);\n    const setValAndUpdate = (value) => {\n        setVal(value)\n        serErr(false)\n    }\n\n    useEffect(() => setValAndUpdate(value), [value]);\n\n    useImperativeHandle(ref, () => ({\n        value: () => val,\n        setValue: (body) => {\n            if (body != null && body instanceof Object)\n                body[id] = val\n        },\n        /* parameters;\n            - map de errores: se debe inicializar previamente\n            - object: valores a hacer submit\n            - array de funciones de validación y los mensajes asociados a la incorrecta validación\n         */\n        validate: (errors, body, functionsMsg) => {\n            let isValid = true\n            functionsMsg.some(({ func, msg }) => {\n                if (func(val)) {\n                    errors.set(id, msg)\n                    isValid = false\n                    setFieldError()\n                    return false\n                }\n            });\n            if (isValid && body != null && body instanceof Object)\n                body[id] = val\n        }\n    }));\n\n    return <Grid item xs={12} sm={sm ? sm : null}>\n        <TextField\n            id={id}\n            name={id}\n            label={label}\n            fullWidth\n            type={type}\n            variant=\"outlined\"\n            value={val}\n            InputLabelProps={\n                type === \"date\" ? { shrink: true } : {}\n            }\n            error={err}\n            onChange={e => setValAndUpdate(e.target.value)}\n            required={required}\n            ref={ref}\n        />\n    </Grid>;\n})","import toast from 'react-hot-toast';\nimport * as React from 'react';\n\nexport const backID = \"id\"\nexport const backFechaElaboracion = \"fechaElaboracion\"\nexport const backCantHormas = \"cantHormas\"\nexport const backCantCajas = \"cantCajas\"\nexport const backLitrosLeche = \"litrosLeche\"\nexport const backNumeroTina = \"numeroTina\"\nexport const backPeso = \"peso\"\nexport const backCodigoQueso = \"codigoQueso\"\nexport const backIdQueso = \"idQueso\"\nexport const backCodigo = \"codigo\"\nexport const backNomenclatura = \"nomenclatura\"\nexport const backTipoQueso = \"tipoQueso\"\nexport const backLoteCultivo = \"loteCultivo\"\nexport const backLoteColorante = \"loteColorante\"\nexport const backLoteCalcio = \"loteCalcio\"\nexport const backLoteCuajo = \"loteCuajo\"\nexport const backCuit = \"cuit\"\nexport const backRazonSocial = \"razonSocial\"\nexport const backDomicilio = \"domicilio\"\nexport const backCodPostal = \"codPostal\"\nexport const backLocalidad = \"localidad\"\nexport const backProvincia = \"provincia\"\nexport const backPais = \"pais\"\nexport const backTransporte = \"transporte\"\nexport const backSenasaUta = \"senasaUta\"\nexport const backEmail = \"email\"\nexport const backTelefono = \"telefono\"\nexport const backFax = \"fax\"\nexport const backCelular = \"celuluar\"\nexport const backIdTipoCliente = \"idTipoCliente\"\nexport const backIdCliente = \"idCliente\"\nexport const backIdLote = \"idLote\"\nexport const backPesoExpedicion = \"peso\"\nexport const backCantidad = \"cantidad\"\nexport const backImporte = \"importe\"\nexport const backFechaExpedicion = \"fechaExpedicion\"\nexport const backPrecio = \"valor\"\nexport const backColor = \"color\"\nexport const backFechaDesde = \"fromDate\"\nexport const backFechaHasta = \"toDate\"\nexport const backStockLote = \"stockLote\"\nexport const backRendimientoLote = \"rendimiento\"\nexport const backFechaRemito = \"fecha\"\nexport const backImporteTotal = \"importeTotal\"\nexport const backUsername = \"username\"\nexport const backPassword = \"password\"\n\nexport const ID = \"ID\"\n\n// produccion\nexport const fechaElaboracion = \"Fecha de producción\"\nexport const cantHormas = \"Cantidad de hormas\"\nexport const cantCajas = \"Cantidad de cajas\"\nexport const litrosLeche = \"Litros procesados\"\nexport const numeroTina = \"Tina\"\nexport const peso = \"Peso del lote\"\nexport const queso = \"Tipo de queso\"\nexport const loteCultivo = \"Lote cultivo\"\nexport const loteColorante = \"Lote colorante\"\nexport const loteCalcio = \"Lote calcio\"\nexport const loteCuajo = \"Lote cuajo\"\n\n// producto\nexport const codigo = \"Código\"\nexport const nomenclatura = \"Nomenclatura\"\nexport const tipoQueso = \"Tipo de queso\"\nexport const color = \"Color\"\n\n// cliente\nexport const cuit = \"CUIT\"\nexport const razonSocial = \"Razon Social\"\nexport const domicilio = \"Domicilio\"\nexport const codPostal = \"Código Postal\"\nexport const localidad = \"Localidad\"\nexport const provincia = \"Provincia\"\nexport const pais = \"Pais\"\nexport const transporte = \"Transporte\"\nexport const senasaUta = \"Senasa/UTA\"\nexport const email = \"E-mail\"\nexport const telefono = \"Teléfono\"\nexport const fax = \"Fax\"\nexport const celular = \"Celular\"\nexport const idTipoCliente = \"Tipo de cliente\"\n\n// precio\nexport const precio = \"Precio\"\n\n// expedicion\nexport const cliente = \"Cliente\"\nexport const numeroLote = \"Número de lote\"\nexport const cantidad = \"Cantidad\"\nexport const pesoExpedicion = \"Peso\"\nexport const importe = \"Importe\"\nexport const fechaExpedicion = \"Fecha de expedición\"\n\n// consulta produccion\nexport const fechaDesde = \"Desde\"\nexport const fechaHasta = \"Hasta\"\n\n// remito\nexport const fechaRemito = \"Fecha de remito\"\nexport const importeTotal = \"Importe total\"\n\n// rendimiento\nexport const cantidadMeses = \"Cantidad de meses\"\nexport const backCantidadMeses = \"cantidadMeses\"\n\n//login\nexport const username = \"Nombre de usuario\"\nexport const password = \"Contraseña\"\n\nconst backendFields = () => {\n    const fields = new Map()\n    fields.set(backID, ID)\n    fields.set(backFechaElaboracion, fechaElaboracion)\n    fields.set(backCantHormas, cantHormas)\n    fields.set(backCantCajas, cantCajas)\n    fields.set(backLitrosLeche, litrosLeche)\n    fields.set(backNumeroTina, numeroTina)\n    fields.set(backPeso, peso)\n    fields.set(backCodigoQueso, queso)\n    fields.set(backIdQueso, queso)\n    fields.set(backCodigo, codigo)\n    fields.set(backNomenclatura, nomenclatura)\n    fields.set(backTipoQueso, tipoQueso)\n    fields.set(backLoteCultivo, loteCultivo)\n    fields.set(backLoteColorante, loteColorante)\n    fields.set(backLoteCalcio, loteCalcio)\n    fields.set(backLoteCuajo, loteCuajo)\n    fields.set(backCuit, cuit)\n    fields.set(backRazonSocial, razonSocial)\n    fields.set(backDomicilio, domicilio)\n    fields.set(backCodPostal, codPostal)\n    fields.set(backLocalidad, localidad)\n    fields.set(backProvincia, provincia)\n    fields.set(backPais, pais)\n    fields.set(backTransporte, transporte)\n    fields.set(backSenasaUta, senasaUta)\n    fields.set(backEmail, email)\n    fields.set(backTelefono, telefono)\n    fields.set(backFax, fax)\n    fields.set(backCelular, celular)\n    fields.set(backIdTipoCliente, idTipoCliente)\n    fields.set(backPrecio, precio)\n    fields.set(backIdCliente, cliente)\n    fields.set(backIdLote, numeroLote)\n    fields.set(backPesoExpedicion, pesoExpedicion)\n    fields.set(backCantidad, cantidad)\n    fields.set(backImporte, importe)\n    fields.set(backFechaExpedicion, fechaExpedicion)\n    fields.set(backColor, color)\n    fields.set(backFechaDesde, fechaDesde)\n    fields.set(backFechaHasta, fechaHasta)\n    fields.set(backFechaRemito, fechaRemito)\n    fields.set(backImporteTotal, importeTotal)\n    fields.set(backCantidadMeses, cantidadMeses)\n    fields.set(backUsername, username)\n    fields.set(backPassword, password)\n    return fields\n}\n\nexport const toastValidationErrors = (errors) => {\n    if (errors == null && !errors instanceof Map)\n        return\n    toast.dismiss()\n    console.log({errors})\n    let mapFields = backendFields()\n    errors.forEach(function (msg, field) {\n        console.log({msg})\n        console.log({field})\n        let realField = mapFields.get(field)\n        console.log({realField})\n        realField = realField ?? field\n        toast.error(<>\n            <div style={{ width: \"100%\" }}><b>{realField}</b>: {msg}</div>\n        </>)\n    })\n}\n\n\n","export const valEmptyFecha = \"debe elegirse una fecha\"\nexport const valOlderDate = \"no debe ser posterior al día de hoy\"\nexport const valZeroValue = \"no puede ser menor a 1\"\nexport const valBiggerThanThousand = \"debe ser menor a 1000\"\nexport const valEmptyField = \"no puede estar vacío\"\nexport const errorProductNotSelected = \"No se ha seleccionado un producto\"\n","import validator from \"validator\";\n\nexport const minorToOne = (val) => val < 1\nexport const biggerThanThousand = (val) => val > 999\nexport const empty = (val) => val === ''\nexport const emptySelect = (selectedVal) => !selectedVal || !selectedVal.value || selectedVal.value === ''\nexport const olderDate = (val) => {\n    const currentDate = new Date();\n    const today = `${currentDate.getFullYear()}-${currentDate.getMonth() + 1}-${currentDate.getDate()}`;\n    return validator.isBefore(today, val)\n}\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { toastValidationErrors } from \"../resources/fields\";\nimport * as paths from \"../resources/paths\";\n\nconsole.log({ env: process.env })\n// const PORT = '8000'\n// const DOMAIN = 'elias.local'\n// const RAIZ_URL = `http://${DOMAIN}:${PORT}`;\nconst RAIZ_URL = `http://192.168.88.246:8000`;\n\nconst API_LOTE = '/api/v1/lotes/'\nconst API_QUESO = '/api/v1/quesos/'\nconst API_CLIENTE = '/api/v1/clientes/'\nconst API_TIPO_CLIENTE = '/api/v1/tipos_cliente/'\nconst API_PRECIO = '/api/v1/precios/'\nconst API_EXPEDICION = '/api/v1/expediciones/'\nconst API_REMITO = '/api/v1/remitos'\nconst API_VENTAS = '/api/v1/ventas/'\nconst API_LOGIN = '/api/v1/login'\nconst API_LOGOUT = '/logout'\nconst API_PERMISOS = '/api/v1/permisos'\n\nconst headers = {\n    'Access-Control-Allow-Origin': \"*\",\n    'Access-Control-Allow-Methods': \"GET, POST, PATCH, PUT, DELETE, OPTIONS\",\n    'Access-Control-Allow-Headers': \"Origin, X-Requested-With, Content-Type, Accept\"\n}\n\nconst getNewHeader = () => {\n    return { ...headers }\n}\n\nexport const signinApi = async ({ username, password }) => {\n    const URL = `${RAIZ_URL}${API_LOGIN}`;\n    return await axios.post(URL, { username, password }, getNewHeader())\n        .then(response => {\n            if (!response.data.message)\n                throw new Error()\n            return response\n        })\n        .catch(err => processResponseError2(err))\n}\n\nexport const signupApi = async ({ username, password }) => {\n    //todo signUp\n}\n\nexport const signoutApi = async () => {\n    const URL = `${RAIZ_URL}${API_LOGOUT}`;\n    return await axios.post(URL, {}, { headers: getNewHeader() })\n        .then(response => response)\n        .catch(err => processResponseError(err))\n}\n\nexport const permisos = async () => {\n    const URL = `${RAIZ_URL}${API_PERMISOS}`;\n    console.log(URL)\n    return await axios.get(URL, { headers: getNewHeader() })\n        .then(response => {\n            console.log(response)\n        })\n        .catch(err => processResponseError(err))\n}\n\n//TODO: refactor\nconst processResponseError2 = (err) => {\n    if (err.response) {\n        const { data, status } = err.response\n        console.error({ data, status })\n\n        if (status === 401 || status === 403)\n            processStatusCode2(status)\n        if (data[\"errors\"])\n            toastValidationErrors(new Map(Object.entries(data.errors)))\n        else {\n            toast.dismiss()\n            toast.error(data.message)\n        }\n    } else {\n        console.error(err.message)\n        toast.dismiss()\n        toast.error(err.message)\n    }\n    throw new Error(err)\n}\n\n//TODO: refactor\nconst processStatusCode2 = (statusCode) => {\n    switch (statusCode) {\n        case 401:\n            if (window.location.pathname !== paths.login) {\n                localStorage.removeItem(\"username\");\n                window.location.pathname = paths.login\n            }\n            break\n        case 403:\n            window.location.href = paths.forbidden\n            break\n    }\n}\n\n\n// --- LOTE METHODS ---\nexport const postLote = async (lote) => await POST(`${API_LOTE}`, lote);\nexport const putLote = async (lote) => await PUT(`${API_LOTE}`, lote);\nexport const deleteLote = async (id) => await DELETE(`${API_LOTE}${id}`);\nexport const getLote = async (id) => await GET(`${API_LOTE}${id}`);\nexport const getLotesBetweenDates = async (fechaDesde, fechaHasta) => await GET(`${API_LOTE}produccion?fecha_desde=${fechaDesde}&fecha_hasta=${fechaHasta}`);\nexport const getLotesByQuesoWithStock = async (codigoQueso) => await GET(`${API_LOTE}queso?codigoQueso=${codigoQueso}`);\nexport const getRendimientoByDia = async (fechaDesde, fechaHasta) => await GET(`${API_LOTE}rendimiento/dia?fecha_desde=${fechaDesde}&fecha_hasta=${fechaHasta}`);\nexport const getRendimientoByQueso = async (fechaDesde, fechaHasta) => await GET(`${API_LOTE}rendimiento/queso?fecha_desde=${fechaDesde}&fecha_hasta=${fechaHasta}`);\nexport const getLitros = async (fechaDesde, fechaHasta) => await GET(`${API_LOTE}litros_elaborados?fecha_desde=${fechaDesde}&fecha_hasta=${fechaHasta}`);\n\n// --- QUESO METHODS ---\nexport const getAllQuesos = async () => await GET(`${API_QUESO}`);\nexport const postQueso = async (queso) => await POST(`${API_QUESO}`, queso);\nexport const putQueso = async (queso) => await PUT(`${API_QUESO}`, queso);\nexport const deleteQueso = async (codigo) => await DELETE(`${API_QUESO}${codigo}`);\n\n// --- TIPO CLIENTE METHODS ---\nexport const getAllTipoClientes = async () => await GET(`${API_TIPO_CLIENTE}`);\n\n// --- CLIENTE METHODS ---\nexport const getAllClientes = async () => await GET(`${API_CLIENTE}`);\nexport const postCliente = async (cliente) => await POST(`${API_CLIENTE}`, cliente);\nexport const putCliente = async (cliente) => await PUT(`${API_CLIENTE}`, cliente);\nexport const deleteCliente = async (id) => await DELETE(`${API_CLIENTE}${id}`);\n\n// --- PRECIO METHODS ---\nexport const getAllPrecios = async () => await GET(`${API_PRECIO}`);\nexport const postPrecio = async (precio) => await POST(`${API_PRECIO}`, precio);\nexport const putPrecio = async (precio) => await PUT(`${API_PRECIO}`, precio);\n\n// --- EXPEDICION METHODS ---\nexport const getAllExpediciones = async () => await GET(`${API_EXPEDICION}`);\nexport const postExpedicion = async (expedicion) => await POST(`${API_EXPEDICION}`, expedicion);\nexport const putExpedicion = async (expedicion) => await PUT(`${API_EXPEDICION}`, expedicion);\nexport const deleteExpedicion = async (id) => await DELETE(`${API_EXPEDICION}${id}`);\nexport const getExpedicionesByLote = async (idLote) => await GET(`${API_EXPEDICION}lote?idLote=${idLote}`);\n\n// --- REMITO METHODS ---\nexport const getRemito = async (idCliente, fecha) => await GET(`${API_REMITO}/generate?id_cliente=${idCliente}&fecha=${fecha}`);\nexport const postRemito = async (idCliente, fecha) => await POST(`${API_REMITO}?id_cliente=${idCliente}&fecha=${fecha}`);\n\n// --- VENTAS METHODS ---\nexport const getVentas = async (fechaDesde, fechaHasta) => await GET(`${API_VENTAS}?fecha_desde=${fechaDesde}&fecha_hasta=${fechaHasta}`);\n\n// --- GENERAL METHODS ---\nconst GET = async (postfixUrl) => {\n    const URL = `${RAIZ_URL}${postfixUrl}`;\n    const method = `GET ${URL}`\n    console.debug({ request: method })\n\n    return await axios.get(URL, { headers: getNewHeader() })\n        .then(response => {\n            const { data } = response\n            console.info({ response: data })\n            return { data: data.data }\n        })\n        .catch(err => processResponseError(err))\n}\n\nconst POST = async (postfixUrl, data) => {\n    const URL = `${RAIZ_URL}${postfixUrl}`;\n    const method = `POST ${URL}`;\n    console.debug({ request: method, data })\n\n    return await axios.post(URL, data, { headers: getNewHeader() })\n        .then(response => processSuccessResponseWithMessage(response))\n        .catch(err => processResponseError(err))\n}\n\nconst PUT = async (postfixUrl, data) => {\n    const URL = `${RAIZ_URL}${postfixUrl}`;\n    const method = `PUT ${URL}`\n    console.debug({ request: method, data })\n\n    return await axios.put(URL, data, { headers: getNewHeader() })\n        .then(response => processSuccessResponseWithMessage(response))\n        .catch(err => processResponseError(err))\n}\n\nconst DELETE = async (postfixUrl) => {\n    const URL = `${RAIZ_URL}${postfixUrl}`;\n    const method = `DELETE ${URL}`\n    console.debug({ request: method })\n\n    return await axios.delete(URL, { headers: getNewHeader() })\n        .then(response => processSuccessResponseWithMessage(response))\n        .catch(err => processResponseError(err))\n}\n\nconst processSuccessResponseWithMessage = (response) => {\n    const { data } = response\n    console.info({ response: data })\n    toast.dismiss()\n    toast.success(data.message);\n    return { data: data.data }\n}\n\nconst processResponseError = (err) => {\n    if (err.response) {\n        const { data, status } = err.response\n        console.error({ data, status })\n\n        if (status === 401 || status === 403)\n            processStatusCode(status)\n        else {\n            if (data[\"errors\"])\n                toastValidationErrors(new Map(Object.entries(data.errors)))\n            else {\n                toast.dismiss()\n                toast.error(data.message)\n            }\n        }\n    } else {\n        console.error(err.message)\n        toast.dismiss()\n        toast.error(err.message)\n    }\n    throw new Error(err)\n}\n\nconst processStatusCode = (statusCode) => {\n    switch (statusCode) {\n        case 401:\n            if (window.location.pathname !== paths.login) {\n                localStorage.removeItem(\"username\");\n                window.location.pathname = paths.login\n            }\n            break\n        case 403:\n            window.location.href = paths.forbidden\n            break\n    }\n}","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { permisos, signinApi, signoutApi, signupApi } from \"./RestServices\";\n\nconst authContext = createContext();\n\nexport function ProvideAuth({ children }) {\n    const auth = useProvideAuth(null);\n    return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\nexport const useAuth = () => {\n    return useContext(authContext);\n};\n\nfunction useProvideAuth() {\n    const [authorizations, setAuthorizations] = useState([])\n    const [isLogged, setIsLogged] = useState(localStorage.getItem(\"username\") !== null)\n\n    useEffect(() => {\n        if (isLogged)\n            permissions()\n    }, [isLogged])\n\n    const signin = ({ username, password }) => {\n        const response = signinApi({ username, password })\n            .then(response => {\n                localStorage.setItem(\"username\", username)\n                setIsLogged(true)\n                return response\n            })\n            .catch(e => {\n                console.error({ e })\n                return e\n            });\n        return response.finally()\n    }\n\n    const signup = ({ username, password }) => {\n        return signupApi({ username, password })\n            .then((response) => {\n                return response.user;\n            })\n            .catch(e => console.error({ e }));\n    };\n\n    const signout = () => {\n        return signoutApi()\n            .then(response => {\n                localStorage.removeItem(\"username\")\n                setIsLogged(false)\n                return response\n            })\n            .catch(e => console.error({ e }));\n    };\n\n    const permissions = () => {\n        const response = permisos()\n            .then((data) => {\n                console.debug({ data })\n                setAuthorizations(data.data);\n            })\n            .catch(e => console.error({ e }))\n\n        return response.finally()\n    };\n\n    return {\n        authorizations,\n        isLogged,\n        permissions,\n        signin,\n        signup,\n        signout\n    };\n}\n","import { Button, Container, CssBaseline, Grid, Typography } from '@mui/material';\nimport * as React from 'react';\nimport { createRef } from 'react';\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport { Input } from \"../components/Input\";\nimport { LoginIcon } from \"../Images\";\nimport * as field from \"../resources/fields\";\nimport { toastValidationErrors } from \"../resources/fields\";\nimport * as message from \"../resources/messages\";\nimport * as paths from \"../resources/paths\";\nimport * as validation from \"../resources/validations\";\nimport { useAuth } from \"../services/use-auth\";\n\nconst loginForm = {\n    username: '',\n    password: ''\n}\n\nexport const LoginPage = () => {\n    const refUsername = createRef()\n    const refPassword = createRef()\n\n    const location = useLocation();\n    const auth = useAuth();\n\n    const [isLogged, setIsLogged] = React.useState(false)\n\n    const { from } = location.state || { from: { pathname: paths.home } };\n\n    React.useEffect(() => {\n        setIsLogged(auth.isLogged)\n    }, [auth.isLogged]);\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const errors = new Map();\n        const user = {};\n\n        refUsername.current.validate(errors, user, [\n            { func: validation.empty, msg: message.valEmptyField }\n        ])\n\n        refPassword.current.validate(errors, user, [\n            { func: validation.empty, msg: message.valEmptyField }\n        ])\n\n        if (errors.size > 0) {\n            console.error(errors)\n            toastValidationErrors(errors)\n            return\n        }\n\n        auth.signin(user)\n    };\n\n    if (isLogged) {\n        return <Redirect push to={from}/>\n    }\n\n    return <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline/>\n        <Grid\n            sx={{\n                marginTop: 8,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n            }}\n        >\n            <LoginIcon/>\n            <Typography component=\"h1\" variant=\"h5\">\n                Iniciar Sesión\n            </Typography>\n            <Grid container spacing={1.5} sx={{ mt: 1 }}>\n                <Input ref={refUsername}\n                       id={field.backUsername}\n                       label={field.username}\n                       value={loginForm.username}\n                       type=\"text\"\n                       fullWidth\n                       required/>\n                <Input ref={refPassword}\n                       id={field.backPassword}\n                       label={field.password}\n                       value={loginForm.password}\n                       type=\"password\"\n                       fullWidth\n                       required/>\n                <Grid item xs={12}>\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                        onClick={handleSubmit}\n                    >\n                        Iniciar Sesión\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    </Container>\n}","import MenuIcon from '@mui/icons-material/Menu'\nimport { IconButton, Typography } from '@mui/material'\nimport Toolbar from '@mui/material/Toolbar'\nimport * as React from 'react';\n\nexport const CustomToolbar = ({ drawerOpen, handleDrawerOpen }) => {\n    return <Toolbar>\n        <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{ mr: 2, ...(drawerOpen && { display: 'none' }) }}\n        >\n            <MenuIcon/>\n        </IconButton>\n        <Typography variant=\"h6\" noWrap component=\"div\" sx={{ flexGrow: 1 }}>\n            La Chacra\n        </Typography>\n    </Toolbar>\n}\n","import AddIcon from '@mui/icons-material/Add';\nimport AnalyticsIcon from '@mui/icons-material/Analytics';\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\nimport BalanceIcon from '@mui/icons-material/Balance';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport HistoryIcon from '@mui/icons-material/History';\nimport HomeIcon from '@mui/icons-material/Home';\nimport Inventory2Icon from '@mui/icons-material/Inventory2';\nimport LocalShippingIcon from '@mui/icons-material/LocalShipping';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\nimport PercentIcon from '@mui/icons-material/Percent';\nimport PersonIcon from '@mui/icons-material/Person';\nimport PointOfSaleIcon from '@mui/icons-material/PointOfSale';\nimport SellIcon from '@mui/icons-material/Sell';\nimport TimelineIcon from '@mui/icons-material/Timeline';\nimport { Divider, Drawer as DrawerMU, IconButton, List, ListItem, ListItemIcon, ListItemText } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport * as React from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as paths from \"../resources/paths\";\nimport { useAuth } from \"../services/use-auth\";\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n    backgroundColor: \"rgba(220, 48, 48, 1)\",\n\n    contrastText: \"#fff\"\n}));\n\nconst DrawerButton = ({ label, path, action, icon }) => {\n    return <ListItem button component={Link} to={path}>\n        <ListItemIcon>\n            {icon}\n        </ListItemIcon>\n        <ListItemText primary={label} onClick={() => action()}/>\n    </ListItem>\n}\n\nconst HomeSection = ({ closeDrawer }) => {\n    return <>\n        <Divider/>\n        <List>\n            <DrawerButton label=\"Inicio\" path={paths.home} icon={<HomeIcon/>} action={closeDrawer}/>\n        </List>\n    </>\n}\n\n//todo naming\nconst LoadUpSection = ({ closeDrawer, permisos }) => {\n    const enableCargarLotes = Array.isArray(permisos) && permisos.includes(paths.cargarLotes)\n    const enableCargarExpedicion = Array.isArray(permisos) && permisos.includes(paths.cargarExpedicion)\n    const enableEmitirRemitos = Array.isArray(permisos) && permisos.includes(paths.emitirRemito)\n\n    if (!(enableCargarLotes || enableCargarExpedicion || enableEmitirRemitos))\n        return <></>\n\n    return <>\n        <Divider/>\n        <List>\n            {enableCargarLotes\n                ? <DrawerButton label=\"Cargar Producción\" path={paths.cargarLotes} action={closeDrawer}\n                                icon={<AddIcon/>}/>\n                : undefined\n            }\n            {enableCargarExpedicion\n                ? <DrawerButton label=\"Cargar Expediciones\" path={paths.cargarExpedicion} action={closeDrawer}\n                                icon={<LocalShippingIcon/>}/>\n                : undefined\n            }\n            {enableEmitirRemitos\n                ? <DrawerButton label=\"Emitir Remito\" path={paths.emitirRemito} action={closeDrawer}\n                                icon={<PointOfSaleIcon/>}/>\n                : undefined\n            }\n        </List>\n    </>\n}\n\n//todo naming\nconst BusinessSection = ({ closeDrawer, permisos }) => {\n    const enableCargarQuesos = Array.isArray(permisos) && permisos.includes(paths.cargarQuesos)\n    const enableCargarPrecios = Array.isArray(permisos) && permisos.includes(paths.cargarPrecios)\n    const enableCargarClientes = Array.isArray(permisos) && permisos.includes(paths.clientes)\n\n    if (!(enableCargarQuesos || enableCargarPrecios || enableCargarClientes))\n        return <></>\n\n    return <>\n        <Divider/>\n        <List>\n            {enableCargarQuesos\n                ? <DrawerButton label=\"Productos\" path={paths.cargarQuesos} action={closeDrawer}\n                                icon={<MenuBookIcon/>}/>\n                : undefined\n            }\n            {enableCargarPrecios\n                ? <DrawerButton label=\"Precios\" path={paths.cargarPrecios} action={closeDrawer}\n                                icon={<AttachMoneyIcon/>}/>\n                : undefined\n            }\n            {enableCargarClientes\n                ? <DrawerButton label=\"Clientes\" path={paths.clientes} action={closeDrawer}\n                                icon={<PersonIcon/>}/>\n                : undefined\n            }\n        </List>\n    </>\n}\n\n//todo naming\nconst StatsSection = ({ closeDrawer, permisos }) => {\n    const enableVerProduccion = Array.isArray(permisos) && permisos.includes(paths.verProduccion)\n    const enableVerLitros = Array.isArray(permisos) && permisos.includes(paths.verLitros)\n    const enableStockProductos = Array.isArray(permisos) && permisos.includes(paths.stockProductos)\n    const enableRendimiento = Array.isArray(permisos) && permisos.includes(paths.rendimiento)\n    const enableVerVentas = Array.isArray(permisos) && permisos.includes(paths.verVentas)\n\n    if (!(enableVerProduccion || enableVerLitros || enableStockProductos || enableRendimiento || enableVerVentas))\n        return <></>\n\n    return <>\n        <Divider/>\n        <List>\n            {enableVerProduccion\n                ? <DrawerButton label=\"Producción\" path={paths.verProduccion} action={closeDrawer}\n                                icon={<TimelineIcon/>}/>\n                : undefined\n            }\n            {enableVerLitros\n                ? <DrawerButton label=\"Litros Elaborados\" path={paths.verLitros} action={closeDrawer}\n                                icon={<PercentIcon/>}/>\n                : undefined\n            }\n            {enableStockProductos\n                ? <DrawerButton label=\"Stock Productos\" path={paths.stockProductos} action={closeDrawer}\n                                icon={<DashboardIcon/>}/>\n                : undefined\n            }\n            {enableRendimiento\n                ? <DrawerButton label=\"Rendimiento\" path={paths.rendimiento} action={closeDrawer}\n                                icon={<AnalyticsIcon/>}/>\n                : undefined\n            }\n            {enableVerVentas\n                ? <DrawerButton label=\"Ventas\" path={paths.verVentas} action={closeDrawer}\n                                icon={<BalanceIcon/>}/>\n                : undefined\n            }\n        </List>\n    </>\n}\n\n//todo naming\nconst BackgroundSection = ({ closeDrawer, permisos }) => {\n    const enableStockEmbalaje = Array.isArray(permisos) && permisos.includes(paths.stockEmbalaje)\n    const enableMantenimiento = Array.isArray(permisos) && permisos.includes(paths.mantenimiento)\n    const enableTrazabilidad = Array.isArray(permisos) && permisos.includes(paths.verTrazabilidad)\n\n    if (!(enableStockEmbalaje || enableMantenimiento || enableTrazabilidad))\n        return <></>\n\n    return <>\n        <Divider/>\n        <List>\n            {enableStockEmbalaje\n                ? <DrawerButton label=\"Stock Embalaje\" path={paths.stockEmbalaje} action={closeDrawer}\n                                icon={<Inventory2Icon/>}/>\n                : undefined\n            }\n            {enableMantenimiento\n                ? <DrawerButton label=\"Mantenimiento\" path={paths.mantenimiento} action={closeDrawer}\n                                icon={<SellIcon/>}/>\n                : undefined\n            }\n            {enableTrazabilidad\n                ? <DrawerButton label=\"Trazabilidad\" path={paths.verTrazabilidad} action={closeDrawer}\n                                icon={<HistoryIcon/>}/>\n                : undefined\n            }\n        </List>\n    </>\n}\n\nconst LogoutSection = ({ logout }) => {\n    return <>\n        <Divider/>\n        <List>\n            <ListItem button>\n                <ListItemIcon>\n                    <LogoutIcon/>\n                </ListItemIcon>\n                <ListItemText primary=\"Cerrar sesión\" onClick={() => logout()}/>\n            </ListItem>\n        </List>\n    </>\n}\n\nexport const Drawer = ({ drawerWidth, open, handleDrawerClose, theme, permisos }) => {\n    const auth = useAuth();\n    const history = useHistory();\n\n    return <DrawerMU\n        sx={{\n            width: drawerWidth,\n            flexShrink: 0,\n            '& .MuiDrawer-paper': {\n                width: drawerWidth,\n                boxSizing: 'border-box',\n            },\n        }}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n    >\n        <DrawerHeader>\n            <IconButton onClick={handleDrawerClose} style={{ color: \"white\" }}>\n                {theme.direction === 'ltr' ? <ChevronLeftIcon/> : <ChevronRightIcon/>}\n            </IconButton>\n        </DrawerHeader>\n        <HomeSection closeDrawer={handleDrawerClose}/>\n        <LoadUpSection closeDrawer={handleDrawerClose} permisos={permisos}/>\n        <BusinessSection closeDrawer={handleDrawerClose} permisos={permisos}/>\n        <StatsSection closeDrawer={handleDrawerClose} permisos={permisos}/>\n        <BackgroundSection closeDrawer={handleDrawerClose} permisos={permisos}/>\n        <LogoutSection logout={() => {\n            auth.signout()\n            history.push(paths.login)\n        }}/>\n    </DrawerMU>\n}","import { Box } from '@mui/material';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport * as React from 'react';\n\nexport const Loading = () => {\n    return (<Box sx={{\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        mt: 3,\n    }}>\n        <CircularProgress size={\"50%\"}/>\n    </Box>);\n}","import { ButtonGroup, Grid, Typography } from '@mui/material';\nimport * as React from 'react';\n\nexport const PageTableButtonPane = ({ title, buttons, grid, children }) => {\n    return (\n        <Grid container\n              direction=\"row\"\n              paddingRight={2}\n              spacing={2}\n              justifyContent=\"flex-start\"\n              alignItems=\"flex-start\"\n              style={{\n                  minHeight: \"92%\",\n                  maxWidth: \"98%\",\n                  backgroundColor: \"white\",\n                  margin: \"1%\",\n                  borderRadius: \"8px\",\n                  boxShadow: 'rgba(0, 0, 0, 0.2) 0px 2px 1px -1px, rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 1px 3px 0px',\n                  boxSizing: \"border-box\",\n              }}>\n            <Grid item container direction=\"column\" xs={12}>\n                <Grid item container justifyContent=\"space-between\" xs={12} style={{ paddingBottom: \"1%\" }}>\n                    <Typography variant=\"h6\">{title}</Typography>\n                    <ButtonGroup variant=\"contained\">\n                        {buttons}\n                    </ButtonGroup>\n                </Grid>\n                {grid}\n            </Grid>\n            {children}\n        </Grid>\n    )\n}","import { Autocomplete, Box, Grid, TextField } from \"@mui/material\";\nimport * as React from 'react';\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\n\nexport const Select = forwardRef((\n    {\n        id,\n        label,\n        value,\n        required = false,\n        options = { id: null, label: null, value: null },\n        disabled = false\n    }, ref) => {\n\n    const [val, setVal] = useState(value);\n    const [err, serErr] = useState(false);\n\n    const setSelectError = () => serErr(true);\n    const setValAndUpdate = (value) => {\n        setVal(value)\n        serErr(false)\n    }\n\n    useEffect(() => {\n        if (value && value !== {})\n            setValAndUpdate(options.filter((o) => o.value === value).pop())\n        else\n            setValAndUpdate({ id: null, label: null, value: null });\n    }, [options, value]);\n\n    useImperativeHandle(ref, () => ({\n        value: () => val.value,\n        /* parameters;\n            - map de errores: se debe inicializar previamente\n            - object: valores a hacer submit\n            - array de funciones de validación y los mensajes asociados a la incorrecta validación\n         */\n        validate: (errors, body, functionsMsg) => {\n            let isValid = true\n            functionsMsg.some(({ func, msg }) => {\n                if (func(val)) {\n                    errors.set(id, msg)\n                    isValid = false\n                    setSelectError()\n                    return false\n                }\n            });\n            if (isValid && body != null && body instanceof Object)\n                body[id] = val.value\n        }\n    }));\n\n    return <Grid item xs={12}>\n        <Autocomplete\n            id={id}\n            name={id}\n            options={options}\n            autoHighlight\n            getOptionLabel={(option) => option.label || ''}\n            renderOption={(props, option) => {\n                return <Box component=\"li\"  {...props}>\n                    {option.label}\n                </Box>\n            }}\n            renderInput={(params) => (\n                <TextField\n                    error={err}\n                    required={required}\n                    {...params}\n                    label={label}/>\n            )}\n            value={val}\n            error={err}\n            onChange={(e, value) => {\n                setValAndUpdate(value)\n            }}\n            isOptionEqualToValue={(option, value) => {\n                return value.value ? option.value === value.value : option.value === value\n            }}\n            disabled={disabled}\n        />\n    </Grid>\n})","import {\n    Box,\n    Button,\n    Container,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    Typography\n} from \"@mui/material\";\nimport * as React from 'react';\nimport { createRef, useEffect, useMemo, useState } from 'react';\nimport { Input } from \"../../components/Input\";\nimport { Select } from '../../components/Select';\nimport * as field from \"../../resources/fields\";\nimport * as message from \"../../resources/messages\";\nimport * as validation from \"../../resources/validations\";\n\nconst clienteInicial = {\n    id: '',\n    razonSocial: '',\n    cuit: '',\n    domicilio: '',\n    codPostal: '',\n    localidad: '',\n    provincia: '',\n    pais: '',\n    transporte: '',\n    senasaUta: '',\n    email: '',\n    telefono: '',\n    fax: '',\n    celular: '',\n    idTipoCliente: ''\n}\n\nexport const DialogAltaCliente = ({ cliente, open, onClose, onSubmit, isEditing, tiposCliente }) => {\n\n    const [clienteForm, setClienteForm] = useState(clienteInicial);\n\n    const refSelectCliente = createRef()\n    const refRazonSocial = createRef()\n    const refCuit = createRef()\n    const refDomicilio = createRef()\n    const refCodPostal = createRef()\n    const refLocalidad = createRef()\n    const refProvincia = createRef()\n    const refPais = createRef()\n    const refTransporte = createRef()\n    const refSenasaUta = createRef()\n    const refEmail = createRef()\n    const refTelefono = createRef()\n    const refFax = createRef()\n    const refCelular = createRef()\n\n    useEffect(() => setClienteForm(cliente), [cliente]);\n\n    const handleSubmit = () => {\n        const errors = new Map();\n        const values = {};\n        values[\"id\"] = clienteForm.id\n\n        refRazonSocial.current.validate(errors, values, [\n            { func: validation.empty, msg: message.valEmptyField }\n        ])\n\n        refCuit.current.validate(errors, values, [\n            { func: validation.empty, msg: message.valEmptyField }\n        ])\n\n        refSelectCliente.current.validate(errors, values, [\n            { func: validation.emptySelect, msg: message.valEmptyField }\n        ])\n\n        if (errors.size > 0) {\n            console.error(errors)\n            field.toastValidationErrors(errors)\n            return\n        }\n\n        refDomicilio.current.setValue(values)\n        refCodPostal.current.setValue(values)\n        refLocalidad.current.setValue(values)\n        refProvincia.current.setValue(values)\n        refPais.current.setValue(values)\n        refTransporte.current.setValue(values)\n        refSenasaUta.current.setValue(values)\n        refEmail.current.setValue(values)\n        refTelefono.current.setValue(values)\n        refFax.current.setValue(values)\n        refCelular.current.setValue(values)\n\n        onSubmit(values)\n    }\n\n    // --- VARIABLES ---\n    const dialogTitle = useMemo(() => isEditing ? 'Actualizar Cliente' : 'Alta Cliente', [isEditing]);\n    const titleCliente = useMemo(() => cliente.id ? `Cliente Número ${cliente.id}` : 'Cliente', [cliente]);\n    const labelSubmit = useMemo(() => isEditing ? 'Actualizar' : 'Dar de Alta', [isEditing]);\n\n    return <Dialog open={open} onClose={onClose} scroll=\"body\">\n        <DialogTitle>{dialogTitle}</DialogTitle>\n        <DialogContent>\n            <Container maxWidth=\"sm\">\n                <Box\n                    sx={{\n                        marginTop: 8,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        mt: 3\n                    }}\n                >\n                    <Grid container spacing={2}>\n                        <Typography variant=\"h6\" paddingLeft={2}>\n                            {titleCliente}\n                        </Typography>\n                        <Input\n                            id={field.backRazonSocial}\n                            label={field.razonSocial}\n                            ref={refRazonSocial}\n                            value={clienteForm.razonSocial}\n                            required\n                            type=\"text\"/>\n                        <Input\n                            id={field.backCuit}\n                            label={field.cuit}\n                            ref={refCuit}\n                            value={clienteForm.cuit}\n                            required\n                            type=\"text\"/>\n                        <Select ref={refSelectCliente}\n                                value={clienteForm.idTipoCliente}\n                                id={field.backIdTipoCliente}\n                                label={field.idTipoCliente}\n                                options={tiposCliente}\n                                required/>\n                        <Typography variant=\"h6\" paddingLeft={2} mt={2}>\n                            Domicilio\n                        </Typography>\n                        <Input\n                            id={field.backDomicilio}\n                            label={field.domicilio}\n                            ref={refDomicilio}\n                            value={clienteForm.domicilio}\n                            type=\"text\"/>\n                        <Input\n                            id={field.backLocalidad}\n                            label={field.localidad}\n                            ref={refLocalidad}\n                            value={clienteForm.localidad}\n                            type=\"text\"\n                            sm={8}/>\n                        <Input\n                            id={field.backCodPostal}\n                            label={field.codPostal}\n                            ref={refCodPostal}\n                            value={clienteForm.codPostal}\n                            sm={4}/>\n                        <Input\n                            id={field.backProvincia}\n                            label={field.provincia}\n                            ref={refProvincia}\n                            value={clienteForm.provincia}\n                            type=\"text\"\n                            sm={6}/>\n                        <Input\n                            id={field.backPais}\n                            label={field.pais}\n                            ref={refPais}\n                            value={clienteForm.pais}\n                            type=\"text\"\n                            sm={6}/>\n                        <Typography variant=\"h6\" paddingLeft={2} mt={2}>\n                            Datos de contacto\n                        </Typography>\n\n                        <Input\n                            id={field.backEmail}\n                            label={field.email}\n                            type=\"email\"\n                            ref={refEmail}\n                            value={clienteForm.email}/>\n                        <Input\n                            id={field.backTelefono}\n                            label={field.telefono}\n                            type=\"tel\"\n                            ref={refTelefono}\n                            value={clienteForm.telefono}/>\n                        <Input\n                            id={field.backCelular}\n                            label={field.celular}\n                            type=\"tel\"\n                            ref={refCelular}\n                            value={clienteForm.celular}/>\n                        <Input\n                            id={field.backFax}\n                            label={field.fax}\n                            type=\"tel\"\n                            ref={refFax}\n                            value={clienteForm.fax}/>\n                        <Typography variant=\"h6\" paddingLeft={2} mt={2}>\n                            Transporte\n                        </Typography>\n\n                        <Input\n                            id={field.backTransporte}\n                            label={field.transporte}\n                            ref={refTransporte}\n                            value={clienteForm.transporte}\n                            type=\"text\"/>\n                        <Input\n                            id={field.backSenasaUta}\n                            label={field.senasaUta}\n                            ref={refSenasaUta}\n                            value={clienteForm.senasaUta}\n                            type=\"text\"/>\n                    </Grid>\n                </Box>\n            </Container>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={onClose}>Cancelar</Button>\n            <Button onClick={handleSubmit}>{labelSubmit}</Button>\n        </DialogActions>\n    </Dialog>\n}","import {\n    Box,\n    Button,\n    Container,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    TextField\n} from \"@mui/material\";\nimport * as React from 'react';\n\nexport const DialogBajaCliente = ({ open, onClose, onSubmit, cliente }) => {\n\n    return <Dialog open={open} onClose={onClose} scroll=\"body\">\n        <DialogTitle>Baja de Cliente</DialogTitle>\n        <DialogContent>\n            <Container maxWidth=\"sm\">\n                <Box\n                    sx={{\n                        marginTop: 8,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        mt: 3\n                    }}\n                >\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"numeroCliente\"\n                                name=\"numeroCliente\"\n                                label=\"Número de Cliente\"\n                                fullWidth\n                                type=\"text\"\n                                variant=\"outlined\"\n                                value={cliente.id}\n                                contentEditable={false}/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"razonSocial\"\n                                name=\"razonSocial\"\n                                label=\"Razón Social\"\n                                fullWidth\n                                type=\"text\"\n                                variant=\"outlined\"\n                                value={cliente.razonSocial}\n                                contentEditable={false}/>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Container>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={onClose}>Cancelar</Button>\n            <Button onClick={onSubmit} color=\"error\">Dar de Baja</Button>\n        </DialogActions>\n    </Dialog>\n}","import { DataGrid } from '@mui/x-data-grid';\nimport * as React from 'react';\nimport { useMemo } from 'react';\n\nexport const GridClientes = ({ setSelection, clientes }) => {\n    const columns = useMemo(() => [\n        {\n            field: 'id',\n            headerName: 'Nro Cliente',\n            flex: 1,\n            minWidth: 50\n        },\n        {\n            field: 'razonSocial',\n            headerName: 'Razón Social',\n            flex: 1,\n            minWidth: 50\n        },\n        {\n            field: 'cuit',\n            headerName: 'CUIT',\n            flex: 1,\n            minWidth: 50\n        }, {\n            field: 'domicilio',\n            headerName: 'Domicilio',\n            flex: 1,\n            minWidth: 50\n        }, {\n            field: 'localidad',\n            headerName: 'Localidad',\n            flex: 1,\n            minWidth: 50\n        }, {\n            field: 'codPostal',\n            headerName: 'CP',\n            flex: 1,\n            minWidth: 50\n        }, {\n            field: 'transporte',\n            headerName: 'Transporte',\n            flex: 1,\n            minWidth: 50\n        }, {\n            field: 'senasaUta',\n            headerName: 'Habilitación',\n            flex: 1,\n            minWidth: 50\n        },\n    ], []);\n\n    return <DataGrid\n        rows={clientes}\n        columns={columns}\n        autoHeight={true}\n        rowHeight={42}\n        pageSize={15}\n        rowsPerPageOptions={[15]}\n        onCellClick={(params) => setSelection(params.id)}\n    />\n}","import { Button } from '@mui/material';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { Loading } from '../../components/Loading';\nimport { PageTableButtonPane } from \"../../components/PageTableButtonPane\";\nimport {\n    deleteCliente,\n    getAllClientes,\n    getAllTipoClientes,\n    postCliente,\n    putCliente\n} from '../../services/RestServices';\nimport { DialogAltaCliente } from './DialogAltaCliente';\nimport { DialogBajaCliente } from './DialogBajaCliente';\nimport { GridClientes } from \"./GridClientes\";\n\nconst clienteInicial = {\n    id: '',\n    razonSocial: '',\n    cuit: '',\n    domicilio: '',\n    codPostal: '',\n    localidad: '',\n    provincia: '',\n    pais: '',\n    transporte: '',\n    senasaUta: '',\n    email: '',\n    telefono: '',\n    fax: '',\n    celular: '',\n    idTipoCliente: ''\n}\n\nexport const CargarClientes = () => {\n\n    const [cliente, setCliente] = useState(clienteInicial);\n    const [listaClientes, setListaClientes] = useState([]);\n    const [tiposClientes, setTiposClientes] = useState([]);\n\n    const [isLoadingClientes, setLoadingClientes] = useState(true);\n    const [isLoadingTipoClientes, setLoadingTipoClientes] = useState(true);\n\n    const [isEditing, setEditing] = useState(false);\n\n    const fetchClientes = () => {\n        getAllClientes()\n            .then(({ data }) => {\n                setListaClientes(data)\n            })\n            .catch(() => toast.error(\"No se pudo cargar clientes\"))\n            .finally(() => setLoadingClientes(false))\n    }\n\n    const fetchTipoClientes = () => {\n        getAllTipoClientes()\n            .then(({ data }) => {\n                setTiposClientes(data);\n            })\n            .catch(() => toast.error(\"No se pudo cargar tipos de cliente\"))\n            .finally(() => setLoadingTipoClientes(false));\n    }\n\n    useEffect(() => {\n        fetchClientes();\n        fetchTipoClientes();\n    }, [])\n\n    const setSelection = useCallback((id) => {\n        setCliente(listaClientes.filter(c => c.id === id).pop())\n    }, [listaClientes])\n\n    const onSubmit = useCallback((clienteForm) => {\n        setOpenDialogAlta(false);\n        setCliente(clienteInicial);\n\n        if (isEditing) {\n            setEditing(false);\n            putCliente(clienteForm).then(() => fetchClientes());\n        } else\n            postCliente(clienteForm).then(() => fetchClientes());\n    }, [isEditing])\n\n    const onDelete = useCallback(() => {\n        deleteCliente(cliente.id)\n            .then(() => {\n                fetchClientes();\n                setCliente(clienteInicial);\n                onCloseDialog();\n            })\n            .catch(() => null)\n    }, [cliente.id])\n\n    // --- DIALOGS ---\n    const [openDialogAlta, setOpenDialogAlta] = useState(false);\n    const [openDialogBaja, setOpenDialogBaja] = useState(false);\n\n    const onOpenAlta = () => {\n        setEditing(false);\n        setCliente(clienteInicial);\n        setOpenDialogAlta(true);\n    }\n\n    const onOpenBaja = () => {\n        if (!cliente.id)\n            toast.error(\"No se seleccionó ningún cliente\");\n        else\n            setOpenDialogBaja(true);\n    }\n\n    const onOpenActualizar = () => {\n        if (!cliente.id)\n            toast.error(\"No se seleccionó ningún cliente\");\n        else {\n            setEditing(true);\n            setOpenDialogAlta(true);\n        }\n    }\n\n    const onCloseDialog = () => {\n        setOpenDialogBaja(false);\n        setOpenDialogAlta(false);\n    }\n\n    const valoresTiposClientes = useMemo(() =>\n        tiposClientes.map((c) => {\n            return { id: c.id, value: c.id, label: c.tipo }\n        }), [tiposClientes])\n\n    if (isLoadingClientes || isLoadingTipoClientes)\n        return (<Loading/>)\n\n    return (\n        <PageTableButtonPane\n            title=\"Clientes\"\n            buttons={<>\n                <Button color=\"warning\" onClick={onOpenBaja}>Dar de baja</Button>\n                <Button color=\"info\" onClick={onOpenActualizar}>Actualizar</Button>\n                <Button onClick={onOpenAlta}>Dar de alta</Button>\n            </>}\n            grid={<GridClientes\n                clientes={listaClientes}\n                setSelection={setSelection}\n            />}\n        >\n            <DialogAltaCliente\n                cliente={cliente}\n                onClose={onCloseDialog}\n                onSubmit={onSubmit}\n                open={openDialogAlta}\n                isEditing={isEditing}\n                tiposCliente={valoresTiposClientes}/>\n            <DialogBajaCliente\n                cliente={cliente}\n                onClose={onCloseDialog}\n                open={openDialogBaja}\n                onSubmit={onDelete}/>\n        </PageTableButtonPane>\n    );\n}","import { Grid, Typography } from '@mui/material';\nimport * as React from 'react';\n\nexport const PageFormTable = ({ form, table, titleTable, children, titleForm, mdForm, lgForm }) => {\n    return (\n        <Grid container\n              direction=\"row\"\n              spacing={2}\n              paddingRight={2}\n              style={{\n                  minHeight: \"92%\",\n                  maxWidth: \"98%\",\n                  backgroundColor: \"white\",\n                  margin: \"1%\",\n                  borderRadius: \"8px\",\n                  boxShadow: 'rgba(0, 0, 0, 0.2) 0px 2px 1px -1px, rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 1px 3px 0px',\n                  boxSizing: \"border-box\",\n              }}>\n\n            {/* FORM */}\n            <Grid item xs={12} sm={12} md={mdForm ? mdForm : 4} lg={lgForm ? lgForm : 3}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h6\" padding={0.5}>\n                        {titleForm}\n                    </Typography>\n                </Grid>\n                {form}\n            </Grid>\n\n            {/* TABLE */}\n            <Grid item xs={12} sm={12} md={mdForm ? 12 - mdForm : 8} lg={lgForm ? 12 - lgForm : 9}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h6\" padding={0.5}>\n                        {titleTable}\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    {table}\n                </Grid>\n            </Grid>\n\n            {/* DIALOGS */}\n            {children}\n        </Grid>\n    )\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport * as React from 'react';\n\nexport const DialogEliminarExpedicion = ({ open, onClose, onSubmit }) => {\n    return <Dialog open={open} onClose={onClose} scroll=\"body\">\n        <DialogTitle>Borrar Expedición</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Esta acción es irreversible ¿Desea borrar la expedición?\n            </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={onClose}>Cancelar</Button>\n            <Button onClick={onSubmit}>Borrar Expedición</Button>\n        </DialogActions>\n    </Dialog>\n}\n","import DeleteIcon from '@mui/icons-material/Delete';\nimport QrCodeScannerIcon from '@mui/icons-material/QrCodeScanner';\nimport {\n    Box,\n    Button,\n    Container,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    Stack,\n    Typography\n} from '@mui/material';\nimport * as React from 'react';\nimport { createRef, useCallback, useState } from 'react';\nimport BarcodeReader from 'react-barcode-reader';\nimport toast from 'react-hot-toast';\nimport { Input } from '../../components/Input';\nimport { Select } from \"../../components/Select\";\nimport * as field from \"../../resources/fields\";\nimport * as message from \"../../resources/messages\";\nimport * as validation from \"../../resources/validations\";\n\nexport const ScanDialog = ({ open, onClose, onSubmit, clientes, cliente, fechaExpedicion }) => {\n\n    const [listaLecturas, setListaLecturas] = useState([]);\n    const [pesoExpedicion, setPesoExpedicion] = useState(0);\n\n    const refCantidad = createRef()\n    const refSelectCliente = createRef()\n    const refFechaExpedicion = createRef()\n\n    const handleScan = (scan) => {\n        let lote;\n        scan.charAt(12) === '0' ?\n            lote = scan.substring(0, 12) : lote = scan.substring(0, 13);\n        if (listaLecturas.length > 0 && lote !== listaLecturas.at(0).lote) {\n            toast.error('Se leyeron etiquetas de lotes distintos');\n            return\n        }\n        let result1 = scan.substring(14, 20);\n        let result2 = scan.substring(20, 23);\n        let result3 = `${result1}.${result2}`;\n        let peso = parseFloat(result3);\n        setListaLecturas([...listaLecturas,\n            {\n                id: listaLecturas.length,\n                lote: lote,\n                peso: peso\n            }])\n        setPesoExpedicion(Math.round((pesoExpedicion + peso) * 100) / 100);\n    }\n\n    const handleError = useCallback(() => {\n        alert('Error en la lectura')\n    }, []);\n\n    const handleDeleteRow = (lote) => {\n        setPesoExpedicion(Math.round((pesoExpedicion - lote.peso) * 100) / 100);\n        const newList = listaLecturas.filter(item => item.id !== lote.id);\n        setListaLecturas(newList);\n    }\n\n    const handleCargar = useCallback(() => {\n        const errors = new Map();\n        const values = {};\n\n        refSelectCliente.current.validate(errors, values, [\n            { func: validation.emptySelect, msg: message.valEmptyField }\n        ])\n\n        refCantidad.current.validate(errors, values, [\n            { func: validation.minorToOne, msg: message.valZeroValue }])\n\n        refFechaExpedicion.current.validate(errors, values, [\n            { func: validation.empty, msg: message.valEmptyFecha },\n            { func: validation.olderDate, msg: message.valOlderDate }\n        ])\n\n        if (listaLecturas.length === 0) {\n            toast.error('No hay etiquetas para cargar');\n            return;\n        }\n\n        if (errors.size > 0) {\n            console.error(errors)\n            field.toastValidationErrors(errors)\n            return\n        }\n\n        values[field.backIdLote] = listaLecturas.at(0).lote;\n        values[field.backPesoExpedicion] = pesoExpedicion;\n\n        onSubmit(values)\n        setListaLecturas([]);\n    }, [listaLecturas, onSubmit, pesoExpedicion, refCantidad, refFechaExpedicion, refSelectCliente]);\n\n    const handleCancelar = useCallback(() => {\n        setListaLecturas([]);\n        onClose();\n    }, [onClose])\n\n    return (\n        <>\n            <BarcodeReader\n                onScan={handleScan}\n                onError={handleError}/>\n            <Dialog open={open} onClose={onClose} scroll=\"body\">\n                <DialogTitle>\n                    <Stack direction=\"row\" spacing={2}>\n                        <QrCodeScannerIcon variant=\"outlined\" fontSize='large'/>\n                        <Typography variant=\"h6\">\n                            Escanear etiquetas\n                        </Typography>\n                    </Stack>\n                </DialogTitle>\n                <DialogContent>\n                    <Container maxWidth=\"sm\">\n                        <Box\n                            sx={{\n                                marginTop: 8,\n                                display: 'flex',\n                                flexDirection: 'column',\n                                alignItems: 'center',\n                                mt: 3\n                            }}\n                        >\n                            <Grid container spacing={2}>\n                                <Input ref={refFechaExpedicion}\n                                       id={field.backFechaExpedicion}\n                                       label={field.fechaExpedicion}\n                                       value={fechaExpedicion}\n                                       type=\"date\"\n                                       required/>\n                                <Select ref={refSelectCliente}\n                                        id={field.backIdCliente}\n                                        label={field.cliente}\n                                        value={cliente}\n                                        options={clientes}\n                                        required/>\n                                <Typography variant=\"h6\" paddingLeft={2} mt={2}>\n                                    Códigos escaneados\n                                </Typography>\n                                <Grid item xs={12}>\n                                    <Stack direction=\"column\">\n                                        <Stack direction=\"row\" justifyContent=\"space-between\">\n                                            <Typography variant=\"h6\">\n                                                Lote\n                                            </Typography>\n                                            <Typography variant=\"h6\">\n                                                Peso\n                                            </Typography>\n                                            <Typography>\n                                            </Typography>\n                                        </Stack>\n                                        {listaLecturas.map(lote => {\n                                            return (\n                                                <Stack direction=\"row\" justifyContent=\"space-between\">\n                                                    <Typography>\n                                                        {lote.lote}\n                                                    </Typography>\n                                                    <Typography>\n                                                        {lote.peso}\n                                                    </Typography>\n                                                    <Button onClick={() => handleDeleteRow(lote)}>\n                                                        <DeleteIcon/>\n                                                        quitar\n                                                    </Button>\n                                                </Stack>)\n                                        })}\n                                    </Stack>\n                                </Grid>\n                                <Input ref={refCantidad}\n                                       id={field.backCantidad}\n                                       label={field.cantidad}\n                                       sm={6}\n                                       required/>\n                                <Input\n                                    id={field.backPesoExpedicion}\n                                    label={field.pesoExpedicion}\n                                    value={pesoExpedicion}\n                                    sm={6}\n                                    contentEditable={false}/>\n                            </Grid>\n                        </Box>\n                    </Container>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCancelar}>Cancelar</Button>\n                    <Button onClick={handleCargar}>Cargar Expedición</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}","import { Button, ButtonGroup, Grid } from \"@mui/material\";\nimport * as React from \"react\";\nimport { createRef, useCallback, useEffect, useMemo, useState } from \"react\";\nimport BarcodeReader from 'react-barcode-reader';\nimport toast from \"react-hot-toast\";\nimport { Input } from \"../../components/Input\";\nimport { Select } from \"../../components/Select\";\nimport * as field from \"../../resources/fields\";\nimport * as message from \"../../resources/messages\";\nimport * as validation from \"../../resources/validations\";\nimport { ScanDialog } from \"./ScanDialog\";\n\nexport const FormExpedicion = ({ expedicion, isEditing, clientes, handleSubmit, handleCancelar, handleDelete }) => {\n\n    const [expedicionForm, setExpedicionForm] = useState(expedicion);\n    const [fechaExpedicion, setFechaExpedicion] = useState('');\n    const [openScanDialog, setOpenScanDialog] = useState(false);\n    const [firstScan, setFirstScan] = useState('');\n\n    const refIdLote = createRef()\n    const refSelectCliente = createRef()\n    const refFechaExpedicion = createRef()\n    const refCantidad = createRef()\n    const refPeso = createRef()\n\n    useEffect(() => {\n        setExpedicionForm(expedicion)\n        if (expedicion.fechaExpedicion !== '') setFechaExpedicion(expedicion.fechaExpedicion);\n    }, [expedicion]);\n\n    const handleCargar = useCallback(() => {\n        const errors = new Map();\n        const values = {};\n        values[\"id\"] = expedicionForm.id\n\n        refSelectCliente.current.validate(errors, values, [\n            { func: validation.emptySelect, msg: message.valEmptyField }\n        ])\n\n        refIdLote.current.validate(errors, values, [\n            { func: validation.minorToOne, msg: message.valZeroValue }])\n\n        refCantidad.current.validate(errors, values, [\n            { func: validation.minorToOne, msg: message.valZeroValue }])\n\n        refPeso.current.validate(errors, values, [\n            { func: validation.minorToOne, msg: message.valZeroValue }])\n\n        refFechaExpedicion.current.validate(errors, values, [\n            { func: validation.empty, msg: message.valEmptyFecha },\n            { func: validation.olderDate, msg: message.valOlderDate }\n        ])\n\n        if (errors.size > 0) {\n            console.error(errors)\n            field.toastValidationErrors(errors)\n            return\n        }\n\n        handleSubmit(values)\n    }, [expedicionForm.id, handleSubmit, refCantidad, refFechaExpedicion, refIdLote, refPeso, refSelectCliente]);\n\n    const submitScan = useCallback((values) => {\n        setOpenScanDialog(false);\n        handleSubmit(values);\n    }, [handleSubmit])\n\n    // --- Scan methods ---\n\n    const handleFirstScan = useCallback((firstScan) => {\n        setOpenScanDialog(true);\n        setFirstScan(firstScan);\n    }, [])\n\n    const handleScanError = useCallback(() => toast.error('Error en la lectura'), []);\n\n    const closeScanDialog = useCallback(() => setOpenScanDialog(false), []);\n    // --- Variables\n    const labelCargar = useMemo(() => isEditing ? 'Actualizar Expedición' : 'Cargar Expedición', [isEditing]);\n    const colorCargar = useMemo(() => isEditing ? 'warning' : 'primary', [isEditing]);\n\n    return (\n        <>\n            <Grid container spacing={1.5}>\n                <Input ref={refFechaExpedicion}\n                       id={field.backFechaExpedicion}\n                       label={field.fechaExpedicion}\n                       value={fechaExpedicion}\n                       type=\"date\"\n                       required/>\n                <Select ref={refSelectCliente}\n                        value={expedicionForm.idCliente}\n                        id={field.backIdCliente}\n                        label={field.cliente}\n                        options={clientes}\n                        required/>\n                <Input ref={refIdLote}\n                       id={field.backIdLote}\n                       label={field.numeroLote}\n                       value={expedicionForm.idLote}\n                       required/>\n                <Input ref={refCantidad}\n                       id={field.backCantidad}\n                       label={field.cantidad}\n                       value={expedicionForm.cantidad}\n                       sm={6}\n                       required/>\n                <Input ref={refPeso}\n                       id={field.backPesoExpedicion}\n                       label={field.pesoExpedicion}\n                       value={expedicionForm.peso}\n                       sm={6}\n                       required/>\n                <Grid item xs={12} alignSelf=\"right\" mb={0.5}>\n                    <ButtonGroup fullWidth variant=\"contained\">\n                        <Button onClick={handleCancelar} disabled={!isEditing} color=\"primary\">Cancelar</Button>\n                        <Button onClick={handleDelete} disabled={!isEditing} color=\"error\">Borrar Expedición</Button>\n                        <Button onClick={handleCargar} color={colorCargar}>{labelCargar}</Button>\n                    </ButtonGroup>\n                </Grid>\n            </Grid>\n            <ScanDialog\n                open={openScanDialog}\n                onClose={closeScanDialog}\n                onSubmit={submitScan}\n                clientes={clientes}\n                firstScan={firstScan}/>\n            {!openScanDialog ? <BarcodeReader\n                onScan={handleFirstScan}\n                onError={handleScanError}/> : <></>}\n        </>\n    )\n}","import { DataGrid } from '@mui/x-data-grid';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport * as field from \"../../resources/fields\";\n\nexport const GridExpedicion = ({ expediciones, setSelection }) => {\n\n    const columns = useMemo(() => {\n        return [\n            {\n                field: field.backFechaExpedicion,\n                headerName: field.fechaExpedicion,\n                type: 'date',\n                valueFormatter: (params) => {\n                    if (params.value === undefined)\n                        return '';\n                    const valueFormatted =\n                        params.value.at(8) + params.value.at(9) + '-' +\n                        params.value.at(5) + params.value.at(6) + '-' +\n                        params.value.at(0) + params.value.at(1) +\n                        params.value.at(2) + params.value.at(3);\n                    return `${valueFormatted}`;\n                },\n                flex: 0.75,\n                minWidth: 50,\n            },\n            {\n                field: field.backRazonSocial,\n                headerName: field.razonSocial,\n                type: 'text',\n                flex: 1,\n                minWidth: 50,\n            },\n            {\n                field: field.backIdLote,\n                headerName: 'Lote',\n                flex: 0.75,\n                minWidth: 50\n            },\n            {\n                field: field.backCantidad,\n                headerName: field.cantidad,\n                type: 'number',\n                flex: 0.5,\n                minWidth: 50,\n            },\n            {\n                field: field.backPesoExpedicion,\n                headerName: field.pesoExpedicion,\n                type: 'number',\n                flex: 0.5,\n                minWidth: 50,\n            },\n            {\n                field: field.backImporte,\n                headerName: field.importe,\n                type: 'number',\n                flex: 0.5,\n                minWidth: 50,\n            },\n        ]\n    }, []);\n\n    return <DataGrid\n        rows={expediciones}\n        columns={columns}\n        autoHeight={true}\n        rowHeight={42}\n        pageSize={15}\n        rowsPerPageOptions={[15]}\n        onCellClick={(params) => setSelection(params.id)}\n    />\n}","import * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport toast from \"react-hot-toast\";\nimport { Loading } from \"../../components/Loading\";\nimport { PageFormTable } from \"../../components/PageFormTable\";\nimport * as field from \"../../resources/fields\";\nimport { deleteExpedicion, getAllClientes, postExpedicion, putExpedicion } from '../../services/RestServices';\nimport { DialogEliminarExpedicion } from './DialogEliminarExpedicion'\nimport { FormExpedicion } from \"./FormExpedicion\";\nimport { GridExpedicion } from \"./GridExpedicion\";\n\nconst expedicionInicial = {\n    id: '',\n    idLote: '',\n    idCliente: '',\n    fechaExpedicion: '',\n    cantidad: '',\n    peso: '',\n    importe: ''\n}\n\nexport const CargarExpedicion = () => {\n\n    const [expedicion, setExpedicion] = useState(expedicionInicial);\n    const [listaClientes, setListaClientes] = useState([]);\n    const [listaExpediciones, setListaExpediciones] = useState([]);\n\n    const [isEditing, setEditing] = useState(false);\n    const [isLoadingClientes, setLoadingClientes] = useState(true);\n\n    const [openDialogEliminar, setOpenDialogEliminar] = useState(false);\n\n    useEffect(() => {\n        fetchClientes();\n    }, []);\n\n    const fetchClientes = () => {\n        getAllClientes()\n            .then(({ data }) => {\n                setListaClientes(data)\n            })\n            .catch(() => toast.error(\"No se pudo cargar clientes\"))\n            .finally(() => setLoadingClientes(false));\n    }\n\n    const handleSubmit = useCallback((expedicionForm) => {\n        setExpedicion(expedicionForm);\n        if (isEditing)\n            putExpedicion(expedicionForm)\n                .then(({ data }) => {\n                    setEditing(false);\n                    setExpedicion(expedicionInicial);\n                    const newList = listaExpediciones.filter((item) => item.id !== expedicion.id);\n                    setListaExpediciones([...newList, data]);\n                })\n                .catch(() => toast.error('No se pudo actualizar la expedicion'))\n                .finally()\n        else\n            postExpedicion(expedicionForm)\n                .then(({ data }) => {\n                    setExpedicion(expedicionInicial);\n                    setListaExpediciones([...listaExpediciones, data]);\n                })\n                .catch(() => toast.error('No se pudo cargar la expedicion'))\n                .finally()\n    }, [expedicion, isEditing, listaExpediciones])\n\n    const submitDelete = useCallback(() => {\n        deleteExpedicion(expedicion.id)\n            .then(() => {\n                setEditing(false);\n                setExpedicion(expedicionInicial);\n                const newList = listaExpediciones.filter((item) => item.id !== expedicion.id);\n                setListaExpediciones(newList);\n            })\n            .catch(() => null)\n            .finally(() => setOpenDialogEliminar(false))\n    }, [expedicion.id, listaExpediciones]);\n\n    const handleDelete = useCallback(() => setOpenDialogEliminar(true), [])\n\n    const handleSelect = useCallback((id) => {\n        setExpedicion(listaExpediciones.filter((o) => o.id === id).pop())\n        setEditing(true);\n    }, [listaExpediciones]);\n\n    const handleCancelar = useCallback(() => {\n        setEditing(false);\n        setExpedicion(expedicionInicial);\n    }, []);\n\n    const cancelDelete = useCallback(() => setOpenDialogEliminar(false), [])\n\n\n    // --- Variables ---\n    const clientesFormatted = useMemo(() => listaClientes.map((c) => {\n        return { id: c.id, value: c.id, label: c.razonSocial }\n    }), [listaClientes])\n\n    const expedicionesFormatted = useMemo(() => listaExpediciones.map((e) => {\n        return {\n            'id': e.id,\n            [field.backIdLote]: e.idLote,\n            [field.backRazonSocial]: listaClientes\n                .filter(c => c.id === e.idCliente).pop().razonSocial,\n            [field.backFechaExpedicion]: e.fechaExpedicion,\n            [field.backCantidad]: e.cantidad,\n            [field.backPesoExpedicion]: e.peso,\n            [field.backImporte]: e.importe\n\n        }\n    }), [listaClientes, listaExpediciones]);\n\n    if (isLoadingClientes)\n        return <Loading/>\n\n    return <PageFormTable\n        form={\n            <FormExpedicion\n                expedicion={expedicion}\n                isEditing={isEditing}\n                clientes={clientesFormatted}\n                handleSubmit={handleSubmit}\n                handleCancelar={handleCancelar}\n                handleDelete={handleDelete}/>\n        }\n        table={\n            <GridExpedicion\n                expediciones={expedicionesFormatted}\n                setSelection={handleSelect}/>\n        }\n        titleTable=\"Expediciones\"\n        titleForm=\"Ingreso de expediciones\">\n        <DialogEliminarExpedicion\n            open={openDialogEliminar}\n            onClose={cancelDelete}\n            onSubmit={submitDelete}/>\n    </PageFormTable>\n}","import { Box, Container } from '@material-ui/core'\nimport * as React from 'react';\nimport { HomeIcon } from \"../Images\";\n\nexport const HomePage = () => {\n    return <Container maxWidth=\"sm\">\n        <Box\n            sx={{\n                marginTop: 8,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                mt: 3\n            }}\n        >\n            {/* TODO: solucionar cuando se usa el mobile y se abre el drawer, el icono se queda chiquito */}\n            <HomeIcon/>\n        </Box>\n    </Container>\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport * as React from 'react';\n\nexport const DialogEliminarLote = ({ open, onClose, onSubmit, lote }) => {\n    return <Dialog open={open} onClose={onClose} scroll=\"body\">\n        <DialogTitle>Borrar Lote</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Esta acción es irreversible ¿Desea borrar el lote {lote.id}?\n            </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={onClose}>Cancelar</Button>\n            <Button onClick={onSubmit}>Borrar Lote</Button>\n        </DialogActions>\n    </Dialog>\n}","import { Button, ButtonGroup, Grid } from \"@mui/material\";\nimport * as React from 'react';\nimport { createRef, useEffect, useMemo, useState } from 'react';\nimport { Input } from \"../../components/Input\";\nimport { Select } from \"../../components/Select\";\nimport * as field from \"../../resources/fields\";\nimport { toastValidationErrors } from \"../../resources/fields\";\nimport * as message from \"../../resources/messages\";\nimport * as validation from \"../../resources/validations\";\n\nexport const FormLote = ({ quesos, lote, cancelEditing, deleteLote, isEditingLote, handleSubmit }) => {\n    const [loteForm, setLoteForm] = useState(lote)\n    const [fechaProduccion, setFechaProduccion] = useState('');\n\n    const refSelectQueso = createRef()\n    const refLitros = createRef()\n    const refNumTina = createRef()\n    const refCantHormas = createRef()\n    const refPeso = createRef()\n    const refFecha = createRef()\n    const refCantCajas = createRef()\n    const refLoteCultivo = createRef()\n    const refLoteColorante = createRef()\n    const refLoteCalcio = createRef()\n    const refLoteCuajo = createRef()\n\n    useEffect(() => {\n        setLoteForm(lote);\n        if (lote.fechaElaboracion !== '') setFechaProduccion(lote.fechaElaboracion);\n    }, [lote]);\n\n    const submitLote = () => {\n        const errors = new Map();\n        const values = {};\n        values[\"id\"] = loteForm.id\n\n        refSelectQueso.current.validate(errors, values, [\n            { func: validation.emptySelect, msg: message.valEmptyField }\n        ])\n\n        refNumTina.current.validate(errors, values, [\n            { func: validation.minorToOne, msg: message.valZeroValue },\n            { func: validation.biggerThanThousand, msg: message.valBiggerThanThousand }\n        ])\n\n        refPeso.current.validate(errors, values, [\n            { func: validation.minorToOne, msg: message.valZeroValue }\n        ])\n\n        refLitros.current.validate(errors, values, [\n            { func: validation.minorToOne, msg: message.valZeroValue }\n        ])\n\n        refCantHormas.current.validate(errors, values, [\n            { func: validation.minorToOne, msg: message.valZeroValue }\n        ])\n\n        refCantCajas.current.validate(errors, values, [\n            { func: validation.minorToOne, msg: message.valZeroValue }\n        ])\n\n        refFecha.current.validate(errors, values, [\n            { func: validation.empty, msg: message.valEmptyFecha },\n            { func: validation.olderDate, msg: message.valOlderDate }\n        ])\n\n        if (errors.size > 0) {\n            console.error(errors)\n            toastValidationErrors(errors)\n            return\n        }\n\n        refPeso.current.setValue(values)\n        refLoteCultivo.current.setValue(values)\n        refLoteColorante.current.setValue(values)\n        refLoteCalcio.current.setValue(values)\n        refLoteCuajo.current.setValue(values)\n\n        handleSubmit(values)\n    }\n\n    const labelCargar = useMemo(() => isEditingLote ? 'Actualizar' : 'Cargar Lote', [isEditingLote]);\n    const colorCargar = useMemo(() => isEditingLote ? 'warning' : 'primary', [isEditingLote]);\n\n    return            <Grid container spacing={1.5}>\n        <Input ref={refFecha}\n               id={field.backFechaElaboracion}\n               label={field.fechaElaboracion}\n               value={fechaProduccion}\n               type=\"date\"\n               required/>\n        <Select ref={refSelectQueso}\n                value={loteForm.codigoQueso}\n                id={field.backCodigoQueso}\n                label={field.queso}\n                options={quesos}\n                required/>\n        <Input ref={refNumTina}\n               id={field.backNumeroTina}\n               label={field.numeroTina}\n               value={loteForm.numeroTina}\n               sm={4}\n               required/>\n        <Input ref={refLitros}\n               id={field.backLitrosLeche}\n               label={field.litrosLeche}\n               value={loteForm.litrosLeche}\n               sm={8}\n               required/>\n        <Input ref={refCantHormas}\n               id={field.backCantHormas}\n               label={field.cantHormas}\n               value={loteForm.cantHormas}\n               required\n               sm={6}/>\n        <Input ref={refCantCajas}\n               id={field.backCantCajas}\n               label={field.cantCajas}\n               value={loteForm.cantCajas}\n               required\n               sm={6}/>\n        <Input ref={refPeso}\n               id={field.backPeso}\n               label={field.peso}\n               value={loteForm.peso}/>\n        <Input ref={refLoteCultivo}\n               id={field.backLoteCultivo}\n               label={field.loteCultivo}\n               value={loteForm.loteCultivo}\n               type=\"text\"/>\n        <Input ref={refLoteColorante}\n               id={field.backLoteColorante}\n               label={field.loteColorante}\n               value={loteForm.loteColorante}\n               type=\"text\"/>\n        <Input ref={refLoteCalcio}\n               id={field.backLoteCalcio}\n               label={field.loteCalcio}\n               value={loteForm.loteCalcio}\n               type=\"text\"/>\n        <Input ref={refLoteCuajo}\n               id={field.backLoteCuajo}\n               label={field.loteCuajo}\n               value={loteForm.loteCuajo}\n               type=\"text\"/>\n        <Grid item xs={12} alignSelf=\"right\" mb={0.5}>\n            <ButtonGroup fullWidth variant=\"contained\">\n                <Button onClick={cancelEditing} disabled={!isEditingLote} color=\"info\">Cancelar</Button>\n                <Button onClick={deleteLote} disabled={!isEditingLote} color=\"error\">Borrar Lote</Button>\n                <Button onClick={submitLote} color={colorCargar}>{labelCargar}</Button>\n            </ButtonGroup>\n        </Grid>\n    </Grid>\n}","import { DataGrid } from '@mui/x-data-grid';\nimport * as React from 'react';\nimport { useMemo } from 'react';\n\nexport const GridLotes = ({ produccion, quesos, setSelection }) => {\n\n    const columns = useMemo(() => {\n        return [\n            {\n                field: 'fechaElaboracion',\n                headerName: 'Fecha de producción',\n                type: 'date',\n                valueFormatter: (params) => {\n                    const valueFormatted =\n                        params.value.at(8) + params.value.at(9) + '-' +\n                        params.value.at(5) + params.value.at(6) + '-' +\n                        params.value.at(0) + params.value.at(1) +\n                        params.value.at(2) + params.value.at(3);\n                    return `${valueFormatted}`;\n                },\n                flex: 0.75,\n                minWidth: 50,\n            },\n            {\n                field: 'codigoQueso',\n                headerName: 'Queso',\n                flex: 0.75,\n                minWidth: 50,\n                valueFormatter: (params) => {\n                    return quesos\n                        .filter(q => {\n                            return q.codigo === params.value\n                        })\n                        .pop().tipoQueso\n                }\n            },\n            {\n                field: 'numeroTina',\n                headerName: 'Tina',\n                type: 'number',\n                flex: 0.5,\n                minWidth: 50,\n            },\n            {\n                field: 'litrosLeche',\n                headerName: 'Litros procesados',\n                type: 'number',\n                flex: 0.5,\n                minWidth: 50,\n            },\n            {\n                field: 'cantHormas',\n                headerName: 'Hormas',\n                type: 'number',\n                flex: 0.5,\n                minWidth: 50,\n            },\n\n        ]\n    }, [quesos]);\n\n    return <DataGrid\n        style={{ minHeight: \"600px\" }}\n        autoHeight={true}\n        rows={produccion}\n        columns={columns}\n        onCellDoubleClick={(params) => {\n            setSelection(params.id)\n        }}\n        rowHeight={42}\n        pageSize={15}\n        rowsPerPageOptions={[15]}\n    />\n}","import * as React from 'react';\nimport { useCallback, useEffect, useState } from 'react';\nimport toast from \"react-hot-toast\";\nimport { Loading } from '../../components/Loading';\nimport { PageFormTable } from \"../../components/PageFormTable\";\nimport { deleteLote, getAllQuesos, postLote, putLote } from \"../../services/RestServices\";\nimport { DialogEliminarLote } from \"./DialogEliminarLote\";\nimport { FormLote } from \"./FormLote\";\nimport { GridLotes } from \"./GridLotes\";\n\nconst loteInicial = {\n    id: '',\n    fechaElaboracion: '',\n    numeroTina: '',\n    litrosLeche: '',\n    cantHormas: '',\n    peso: '',\n    loteCultivo: '',\n    loteColorante: '',\n    loteCalcio: '',\n    loteCuajo: '',\n    codigoQueso: '',\n    cantCajas: ''\n}\n\nexport const CargarProduccion = () => {\n    const [lote, setLote] = useState(loteInicial);\n    const [listaLotes, setListaLotes] = useState([]);\n    const [listaQuesos, setListaQuesos] = useState([]);\n\n    const [isEditingLote, setEditingLote] = useState(false);\n    const [eliminarDialog, setEliminarDialog] = useState(false);\n    const [isLoading, setLoading] = useState(true);\n\n    const fetchQuesos = useCallback(() => {\n        getAllQuesos()\n            .then(data => {\n                setListaQuesos(data.data);\n            })\n            .catch(() => toast.error(\"No se pudo cargar quesos\"))\n            .finally(() => setLoading(false));\n    }, []);\n\n    useEffect(() => fetchQuesos(), [fetchQuesos]);\n\n    const updateStateLote = useCallback((attribute, value) => {\n        lote[attribute] = value\n        setLote(lote);\n    }, [lote]);\n\n    const handleSubmit = (loteSubmit) => {\n        setLote(loteSubmit);\n        if (isEditingLote) {\n            putLote(loteSubmit)\n                .then(({ data }) => {\n                    const newList = listaLotes.filter((item) => item.id !== lote.id);\n                    setListaLotes([...newList, data]);\n                    setLote(loteInicial);\n                })\n                .catch(() => null);\n            setEditingLote(false);\n        } else {\n            postLote(loteSubmit)\n                .then(({ data }) => {\n                    setLote(loteInicial);\n                    setListaLotes([...listaLotes, data]);\n                })\n                .catch(() => null);\n        }\n    }\n\n    const setSelection = (id) => {\n        setLote(listaLotes.filter((o) => o.id === id).pop())\n        setEditingLote(true);\n    }\n\n    const cancelEditing = useCallback(() => {\n        setEditingLote(false);\n        setLote(loteInicial);\n    }, []);\n\n    const eliminarLote = useCallback(() => setEliminarDialog(true), [])\n\n    const handleEliminar = useCallback(() => {\n        deleteLote(lote.id)\n            .then(() => {\n                const newList = listaLotes.filter((item) => item.id !== lote.id);\n                setListaLotes(newList);\n            })\n            .catch(() => null);\n\n        setEliminarDialog(false);\n        setLote(loteInicial);\n        setEditingLote(false);\n    }, [lote.id, listaLotes]);\n\n    const cancelEliminar = useCallback(() => setEliminarDialog(false), []);\n\n    const quesosAutocomplete = listaQuesos.map((q) => {\n        return {\n            id: q.id,\n            label: q.codigo + ' - ' + q.tipoQueso + ' - ' + q.nomenclatura,\n            value: q.codigo\n        }\n    });\n\n    if (isLoading)\n        return (<Loading/>)\n\n    return <PageFormTable\n        form={\n            <FormLote\n                quesos={quesosAutocomplete}\n                lote={lote}\n                updateStateLote={updateStateLote}\n                setLote={setLote}\n                isEditingLote={isEditingLote}\n                cancelEditing={cancelEditing}\n                deleteLote={eliminarLote}\n                handleSubmit={handleSubmit}/>\n        }\n        table={\n            <GridLotes\n                quesos={listaQuesos}\n                produccion={listaLotes}\n                setSelection={setSelection}/>\n        }\n        titleTable=\"Producción ingresada\"\n        titleForm=\"Ingreso de producción\"\n    >\n        <DialogEliminarLote\n            open={eliminarDialog}\n            lote={lote}\n            onClose={cancelEliminar}\n            onSubmit={handleEliminar}/>\n    </PageFormTable>\n}","import BuildIcon from '@mui/icons-material/Build';\nimport { CardActionArea, CardHeader } from '@mui/material';\nimport Avatar from '@mui/material/Avatar';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport * as React from 'react';\n\nexport const MantenimientoCard = ({ item }) => {\n    return <Card\n        sx={{\n            height: '100%',\n            // display: 'flex',\n            flexDirection: 'column'\n        }}\n    >\n        <CardActionArea onClick={() => alert('queso')}>\n            <CardHeader\n                avatar={\n                    <Avatar> <BuildIcon/></Avatar>\n                }\n                title={`${item.fecha} ${item.equipo}`}/>\n            <CardContent sx={{\n                flexGrow: 1, alignSelf: 'center',\n                justifyContent: 'center',\n                alignItems: 'center',\n                textAlign: 'center',\n            }}>\n                <Typography gutterBottom variant=\"h7\" component=\"h2\" color=\"textSecondary\" alignContent='center'>\n                    {item.mantenimiento}\n                </Typography>\n            </CardContent>\n        </CardActionArea>\n    </Card>\n}","import { Box, Container, Grid, Typography } from \"@material-ui/core\";\nimport { Button, ButtonGroup, TextField } from \"@mui/material\";\nimport * as React from 'react';\nimport { MantenimientoCard } from \"./MantenimientoCard\";\n\nexport const MantenimientoCardList = () => {\n\n    const mantenimientoList = [\n        {\n            equipo: 'Equipo 1',\n            fecha: '22-03-2021',\n            mantenimiento: 'Se coloco un nuevo pico en la manguera que sale hace la boca del aspersor porque el otro ya estaba muy gastado'\n        },\n        {\n            equipo: 'Equipo 2',\n            fecha: '23-06-2021',\n            mantenimiento: 'Se realizo la limpieza del interior de los tanques'\n        },\n        { equipo: 'Aparato 1', fecha: '10-05-2021', mantenimiento: 'mantenimiento preventivo' },\n        {\n            equipo: 'Computadora',\n            fecha: '08-12-2021',\n            mantenimiento: 'Se instalo nuevo software para mantener los equipos actualizados y seguros'\n        },\n    ];\n\n    return <>\n        <Grid container\n              style={{\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  padding: 10\n              }}\n              spacing={2}>\n            <Grid item xs={12} sm={2}>\n                <Typography variant='h6' style={{ paddingLeft: 2 }}>Historial</Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <TextField fullWidth/>\n            </Grid>\n            <Grid item xs={12} sm={4} mb={0.5}>\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button variant=\"contained\" fullWidth>Buscar</Button>\n                </ButtonGroup>\n            </Grid>\n        </Grid>\n        <Grid item xs={12} alignSelf={\"center\"}>\n\n            <Box sx={{ overflowY: 'auto', maxHeight: 800, padding: 2, }}>\n\n                <Container sx={{ py: 8, innerHeight: 800 }} style={{\n                    backgroundColor: \"#fafafa\",\n                }} maxWidth=\"xl\">\n                    {/* End hero unit */}\n                    <Grid container spacing={2}>\n                        {mantenimientoList.map((card) => (\n                            <Grid item key={card.id} xs={12}>\n                                <MantenimientoCard\n                                    item={card}/>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Container>\n            </Box>\n        </Grid>\n    </>\n}","import { Button, ButtonGroup, Grid, TextField } from \"@mui/material\";\nimport * as React from 'react';\nimport { PageFormTable } from '../../components/PageFormTable'\nimport { MantenimientoCardList } from \"./MantenimientoCardList\";\n\nexport const Mantenimiento = () => {\n    //TODO: usar un formulario como en el resto de paginas\n    return <PageFormTable\n        titleForm={\"Mantenimiento\"}\n        form={\n            <>\n                <Grid container spacing={1.5}>\n                    <Grid item xs={12}>\n                        <TextField fullWidth\n                                   variant=\"outlined\"\n                                   label=\"Fecha\"\n                                   type=\"date\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField fullWidth\n                                   variant=\"outlined\"\n                                   label=\"Equipo\"/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            multiline\n                            fullWidth\n                            variant=\"outlined\"\n                            label=\"Mantenimiento\"/>\n                    </Grid>\n                    <Grid item xs={12} mb={0.5}>\n                        <ButtonGroup fullWidth variant=\"contained\">\n                            <Button color=\"info\">Cancelar</Button>\n                            <Button color=\"error\">Borrar</Button>\n                            <Button>Cargar</Button>\n                        </ButtonGroup>\n                    </Grid>\n                </Grid>\n            </>\n        }\n\n        table={\n            <MantenimientoCardList/>\n        }\n    />\n}","import { Button, ButtonGroup, Grid } from \"@mui/material\";\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Input } from '../../components/Input';\nimport { Select } from '../../components/Select';\nimport * as field from '../../resources/fields';\nimport * as message from \"../../resources/messages\";\nimport * as validation from \"../../resources/validations\";\n\nconst precioInicial = {\n    id: '',\n    valor: '',\n    idTipoCliente: '',\n    idQueso: ''\n}\n\nexport const FormPrecios = ({ precio, quesos, clientes, handleSubmit, handleCancelar, isEditing }) => {\n\n    const [precioForm, setPrecioForm] = useState(precioInicial);\n\n    const refPrecio = useRef(null);\n    const refSelectCliente = useRef(null);\n    const refSelectQueso = useRef(null);\n\n    useEffect(() => {\n        setPrecioForm(precio)\n    }, [precio])\n\n    const handleCargar = useCallback(() => {\n        const errors = new Map();\n        const values = {};\n        values[\"id\"] = precioForm.id\n\n        refSelectQueso.current.validate(errors, values, [\n            { func: validation.emptySelect, msg: message.valEmptyField }\n        ])\n\n        refSelectCliente.current.validate(errors, values, [\n            { func: validation.emptySelect, msg: message.valEmptyField }\n        ])\n\n        refPrecio.current.validate(errors, values, [\n            { func: validation.minorToOne, msg: message.valZeroValue }])\n\n        if (errors.size > 0) {\n            console.error(errors)\n            field.toastValidationErrors(errors)\n            return\n        }\n\n        handleSubmit(values)\n    }, [handleSubmit, precioForm.id]);\n\n    // --- Variables\n    const labelCargar = useMemo(() => isEditing ? 'Actualizar Precio' : 'Cargar Precio', [isEditing]);\n\n    return <Grid container spacing={1.5}>\n        <Select ref={refSelectQueso}\n                value={precioForm.idQueso}\n                id={field.backIdQueso}\n                label={field.queso}\n                options={quesos}\n                disabled={isEditing}\n                required/>\n        <Select ref={refSelectCliente}\n                value={precioForm.idTipoCliente}\n                id={field.backIdTipoCliente}\n                label={field.idTipoCliente}\n                options={clientes}\n                disabled={isEditing}\n                required/>\n        <Input ref={refPrecio}\n               id={field.backPrecio}\n               label={field.precio}\n               value={precioForm.valor}\n               required/>\n        <Grid item xs={12} alignSelf=\"right\" mb={0.5}>\n            <ButtonGroup fullWidth variant=\"contained\">\n                <Button onClick={handleCancelar} disabled={!isEditing} color=\"info\">Cancelar</Button>\n                <Button onClick={handleCargar} color=\"primary\">{labelCargar}</Button>\n            </ButtonGroup>\n        </Grid>\n    </Grid>\n}","import { DataGrid } from '@mui/x-data-grid';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport * as fields from '../../resources/fields'\n\nexport const GridPrecios = ({ precios, setSelection }) => {\n\n    const columns = useMemo(() => {\n        return [\n            {\n                field: fields.backIdQueso,\n                headerName: 'Queso',\n                flex: 1,\n                minWidth: 50,\n            },\n            {\n                field: fields.backIdTipoCliente,\n                headerName: 'Cliente',\n                flex: 1,\n                minWidth: 50\n            },\n            {\n                field: fields.backPrecio,\n                headerName: 'Precio',\n                type: 'number',\n                flex: 1,\n                minWidth: 50,\n                valueFormatter: (params) => {\n                    return `$ ${params.value}`\n                }\n\n            }\n        ]\n    }, []);\n\n    return <DataGrid\n        autoHeight={true}\n        rows={precios}\n        columns={columns}\n        onCellDoubleClick={(params) => setSelection(params.id)}\n        rowHeight={42}\n        pageSize={15}\n        rowsPerPageOptions={[15]}\n    />\n}","import * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport toast from \"react-hot-toast\";\nimport { Loading } from \"../../components/Loading\"\nimport { PageFormTable } from \"../../components/PageFormTable\";\nimport * as fields from '../../resources/fields'\nimport { getAllPrecios, getAllQuesos, getAllTipoClientes, postPrecio, putPrecio } from \"../../services/RestServices\";\nimport { FormPrecios } from \"./FormPrecios\";\nimport { GridPrecios } from \"./GridPrecios\";\n\nconst precioInicial = {\n    id: '',\n    valor: '',\n    idTipoCliente: '',\n    idQueso: ''\n}\n\nexport const CargarPrecios = () => {\n\n    const [precio, setPrecio] = useState(precioInicial);\n    const [listaPrecios, setListaPrecios] = useState([]);\n    const [listaQuesos, setListaQuesos] = useState([]);\n    const [listaTipoClientes, setListaTipoClientes] = useState([]);\n    const [isEditing, setEditing] = useState(false);\n\n    const [isLoadingPrecios, setLoadingPrecios] = useState(true);\n    const [isLoadingQuesos, setLoadingQuesos] = useState(true);\n    const [isLoadingClientes, setLoadingClientes] = useState(true);\n\n    const fetchPrecios = () => {\n        getAllPrecios()\n            .then(({ data }) => setListaPrecios(data))\n            .catch(() => toast.error(\"No se pudo cargar precios\"))\n            .finally(() => setLoadingPrecios(false))\n    }\n\n    const fetchQuesos = () => {\n        getAllQuesos()\n            .then(({ data }) => setListaQuesos(data))\n            .catch(() => toast.error(\"No se pudo cargar quesos\"))\n            .finally(() => setLoadingQuesos(false))\n    }\n\n    const fetchTipoClientes = () => {\n        getAllTipoClientes()\n            .then(({ data }) => setListaTipoClientes(data))\n            .catch(() => toast.error(\"No se pudo cargar tipos de cliente\"))\n            .finally(() => setLoadingClientes(false))\n    }\n\n    useEffect(() => {\n        fetchPrecios();\n        fetchTipoClientes();\n        fetchQuesos();\n    }, []);\n\n    const handleSubmit = useCallback((precioForm) => {\n        setPrecio(precioForm);\n        if (precioForm.id === '') {\n            postPrecio(precioForm)\n                .then(() => fetchPrecios())\n                .catch(() => null)\n                .finally(() => setPrecio(precioInicial))\n        } else {\n            putPrecio(precioForm)\n                .then(() => fetchPrecios())\n                .catch(() => null)\n                .finally(() => {\n                    setEditing(false);\n                    setPrecio(precioInicial)\n                })\n        }\n    }, [])\n\n    const setSelection = useCallback((id) => {\n        setEditing(true);\n        setPrecio(listaPrecios.filter(p => p.id === id).pop());\n    }, [listaPrecios])\n\n    const handleCancelar = useCallback(() => {\n        setEditing(false)\n        setPrecio(precioInicial)\n    }, []);\n\n    // --- Variables\n    const quesosAutocomplete = useMemo(() =>\n        listaQuesos.map((q) => {\n            return {\n                id: q.id,\n                label: q.codigo + ' - ' + q.tipoQueso + ' - ' + q.nomenclatura,\n                value: q.id\n            }\n        }), [listaQuesos]);\n\n    const tiposClienteAutocomplete = useMemo(() =>\n        listaTipoClientes.map((c) => {\n            return { id: c.id, value: c.id, label: c.tipo }\n        }), [listaTipoClientes])\n\n    if (isLoadingPrecios || isLoadingClientes || isLoadingQuesos)\n        return <Loading/>\n\n    // This needs to be called after all lists are loaded\n    // or else lists are undefined\n    const preciosFormatted = listaPrecios.map(p => {\n        return {\n            [fields.backIdQueso]: listaQuesos\n                .filter(q => {\n                    return q.id === p.idQueso\n                })\n                .pop().tipoQueso,\n            [fields.backIdTipoCliente]: listaTipoClientes\n                .filter(t => {\n                    return t.id === p.idTipoCliente\n                })\n                .pop().tipo,\n            [fields.backPrecio]: p.valor,\n            id: p.id\n        }\n    })\n\n    return <PageFormTable\n        form={\n            <FormPrecios\n                clientes={tiposClienteAutocomplete}\n                quesos={quesosAutocomplete}\n                precio={precio}\n                isEditing={isEditing}\n                handleSubmit={handleSubmit}\n                handleCancelar={handleCancelar}/>\n        }\n        table={\n            <GridPrecios\n                precios={preciosFormatted}\n                setSelection={setSelection}/>\n        }\n        titleTable=\"Precios\"\n        titleForm=\"Ingreso de precios\"\n    />\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid } from '@mui/material';\nimport * as React from 'react';\nimport { createRef, useEffect, useMemo, useState } from 'react';\nimport { Input } from \"../../components/Input\";\nimport * as field from \"../../resources/fields\";\nimport * as message from \"../../resources/messages\";\nimport * as validation from \"../../resources/validations\";\n\nconst quesoInicial = {\n    id: '',\n    codigo: '',\n    tipoQueso: '',\n    nomenclatura: ''\n}\n\nexport const DialogCargarQueso = ({ isCargarQueso, isEditarQueso, onClose, onSubmit, queso }) => {\n\n    const [quesoForm, setQuesoForm] = useState(quesoInicial);\n\n    useEffect(() => setQuesoForm(queso), [queso, isCargarQueso]);\n\n    const refCodigo = createRef()\n    const refTipoQueso = createRef()\n    const refNomenclatura = createRef()\n    const refColor = createRef()\n\n    const labelCargar = useMemo(() => isEditarQueso ? 'Actualizar Producto' : 'Cargar Producto', [isEditarQueso]);\n\n    const onCargar = () => {\n        const errors = new Map();\n        const values = {};\n        values[\"id\"] = quesoForm.id\n\n        refTipoQueso.current.validate(errors, values, [\n            { func: validation.empty, msg: message.valEmptyField }\n        ])\n\n        refCodigo.current.validate(errors, values, [\n            { func: validation.empty, msg: message.valEmptyField }\n        ])\n\n        refNomenclatura.current.validate(errors, values, [\n            { func: validation.empty, msg: message.valEmptyField }\n        ])\n\n        refColor.current.setValue(values);\n\n        if (errors.size > 0) {\n            console.error(errors)\n            field.toastValidationErrors(errors)\n            return\n        }\n\n        onSubmit(values)\n    }\n\n    return      <Dialog open={isCargarQueso || isEditarQueso} onClose={onClose} scroll=\"body\">\n        <DialogTitle>Productos</DialogTitle>\n        <DialogContent>\n            <DialogContentText paddingBottom={2}>\n                Ingrese los datos del producto\n            </DialogContentText>\n            <Grid container spacing={2}>\n                <Input\n                    id={field.backTipoQueso}\n                    label={field.tipoQueso}\n                    ref={refTipoQueso}\n                    value={quesoForm.tipoQueso}\n                    type=\"text\"\n                    required/>\n                <Input\n                    id={field.backNomenclatura}\n                    label={field.nomenclatura}\n                    ref={refNomenclatura}\n                    value={quesoForm.nomenclatura}\n                    type=\"text\"\n                    required/>\n                <Input\n                    id={field.backCodigo}\n                    label={field.codigo}\n                    ref={refCodigo}\n                    value={quesoForm.codigo}\n                    required/>\n                <Input\n                    id={field.backColor}\n                    label={field.color}\n                    ref={refColor}\n                    value={quesoForm.color}\n                    type=\"color\"/>\n            </Grid>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={onClose}>Cancelar</Button>\n            <Button onClick={onCargar}>{labelCargar}</Button>\n        </DialogActions>\n    </Dialog>\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport * as React from 'react';\n\nexport const DialogEliminarQueso = ({ open, onClose, queso, onBorrar }) => {\n    return  <Dialog open={open} onClose={onClose} scroll=\"body\">\n        <DialogTitle>Borrar Producto</DialogTitle>\n        <DialogContent>\n            <DialogContentText paddingBottom={2}>\n                Esta acción es irreversible ¿Desea borrar el producto {queso.tipoQueso} del sistema?\n            </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={onClose}>Cancelar</Button>\n            <Button onClick={onBorrar}>Borrar Producto</Button>\n        </DialogActions>\n    </Dialog>\n}","import { Chip } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport * as React from 'react';\n\nconst columns = [\n    {\n        field: 'tipoQueso',\n        headerName: 'Tipo de queso',\n        flex: 1,\n        minWidth: 50\n    },\n    {\n        field: 'codigo',\n        headerName: 'Código',\n        flex: 1,\n        minWidth: 50\n    },\n    {\n        field: 'nomenclatura',\n        headerName: 'Nomenclatura',\n        flex: 1,\n        minWidth: 50\n    },\n    {\n        field: 'color',\n        headerName: 'Color',\n        flex: 1,\n        minWidth: 50,\n        renderCell: ({ value }) => {\n            return (<Chip\n                style={{ backgroundColor: value }}/>)\n        },\n    },\n]\n\nexport const GridQuesos = ({ listaQuesos, setSelection }) => {\n    return <DataGrid\n        style={{ minHeight: \"600px\" }}\n        autoHeight={true}\n        rows={listaQuesos}\n        rowHeight={42}\n        pageSize={15}\n        rowsPerPageOptions={[15]}\n        columns={columns}\n        onCellClick={(params) => setSelection(params.id)}\n    />\n}","import { Button } from '@mui/material';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { Loading } from '../../components/Loading';\nimport { PageTableButtonPane } from \"../../components/PageTableButtonPane\";\nimport * as message from \"../../resources/messages\";\nimport { deleteQueso, getAllQuesos, postQueso, putQueso } from \"../../services/RestServices\";\nimport { DialogCargarQueso } from './DialogCargarQueso';\nimport { DialogEliminarQueso } from './DialogEliminarQueso';\nimport { GridQuesos } from './GridQuesos';\n\nconst quesoInicial = {\n    id: '',\n    codigo: '',\n    tipoQueso: '',\n    nomenclatura: '',\n    color: ''\n}\n\nexport const CargarQuesos = () => {\n\n    const [queso, setQueso] = useState(quesoInicial);\n    const [listaQuesos, setListaQuesos] = useState([]);\n\n    const [isLoading, setLoading] = useState(true);\n\n    const [isCargarQueso, setIsCargarQueso] = useState(false);\n    const [isEditarQueso, setIsEditarQueso] = useState(false);\n    const [isOpenEliminarProducto, setOpenEliminarProducto] = useState(false);\n\n    useEffect(() => fetchQuesos(), []);\n\n    const fetchQuesos = () => {\n        getAllQuesos()\n            .then(quesos => {\n                const listaAux = quesos.data.map((q) => {\n                    return {\n                        id: q.id,\n                        codigo: q.codigo,\n                        nomenclatura: q.nomenclatura,\n                        tipoQueso: q.tipoQueso,\n                        color: q.color\n                    }\n                })\n                setListaQuesos(listaAux)\n                setLoading(false);\n            })\n            .catch(() => toast.error(\"No se pudo cargar productos\"))\n            .finally(() => setLoading(false));\n\n        setQueso(quesoInicial)\n    }\n\n    const onSubmit = (quesoSubmit) => {\n        if (quesoSubmit.id === '') {\n            postQueso(quesoSubmit)\n                .then(() => {\n                    fetchQuesos()\n                    setIsCargarQueso(false);\n                })\n                .catch(() => null);\n        } else {\n            putQueso(quesoSubmit)\n                .then(() => {\n                    fetchQuesos()\n                    setIsEditarQueso(false);\n                })\n                .catch(() => null);\n        }\n    }\n\n    const onDelete = () => {\n        deleteQueso(queso.id)\n            .then(() => {\n                fetchQuesos()\n            })\n            .catch(() => null);\n\n        closeEliminarDialog()\n    }\n\n    //--- EDIT QUESO METHODS ---\n    const openCargarDialog = () => setIsCargarQueso(true);\n\n    const openEditarDialog = () => {\n        if (queso.id === '') {\n            toast.dismiss()\n            toast.error(message.errorProductNotSelected)\n        } else\n            setIsEditarQueso(true)\n    }\n\n    const closeGestorProducto = () => {\n        setIsCargarQueso(false);\n        setIsEditarQueso(false);\n    }\n\n    const openEliminarDialog = () => {\n        if (queso.id === '') {\n            toast.dismiss()\n            toast.error(message.errorProductNotSelected)\n        } else\n            setOpenEliminarProducto(true);\n    }\n    const closeEliminarDialog = () => setOpenEliminarProducto(false);\n\n    const setSelection = (id) => {\n        setQueso(listaQuesos.filter(o => o.id === id).pop())\n    }\n\n    if (isLoading)\n        return (<Loading/>)\n\n    return <PageTableButtonPane\n        title=\"Productos\"\n        buttons={<>\n            <Button onClick={openEliminarDialog} color=\"warning\">Borrar Producto</Button>\n            <Button onClick={openEditarDialog} color=\"info\">Editar Producto</Button>\n            <Button onClick={openCargarDialog}>Cargar Producto</Button>\n        </>}\n        grid={\n            <GridQuesos\n                listaQuesos={listaQuesos}\n                setSelection={setSelection}/>\n        }\n    >\n        <DialogCargarQueso\n            isEditarQueso={isEditarQueso}\n            isCargarQueso={isCargarQueso}\n            queso={isCargarQueso ? quesoInicial : queso}\n            onClose={closeGestorProducto}\n            onSubmit={onSubmit}\n        />\n        <DialogEliminarQueso\n            open={isOpenEliminarProducto}\n            onClose={() => setOpenEliminarProducto(false)}\n            queso={queso}\n            onBorrar={onDelete}/>\n    </PageTableButtonPane>\n}","import { DataGrid } from '@mui/x-data-grid';\nimport * as React from 'react';\n\nconst columns = [\n    {\n        field: \"cantidad\",\n        headerName: \"Cantidad\",\n        type: 'number',\n        flex: 1,\n        minWidth: 100\n    }, {\n        field: \"tipoQueso\",\n        headerName: \"Producto\",\n        type: 'text',\n        flex: 1,\n        minWidth: 100\n    }, {\n        field: \"peso\",\n        headerName: \"Peso\",\n        type: 'number',\n        flex: 1,\n        minWidth: 100\n    }, {\n        field: \"precio\",\n        headerName: \"Precio Unitario\",\n        type: 'number',\n        flex: 1,\n        minWidth: 100\n    }, {\n        field: \"importe\",\n        headerName: \"Importe\",\n        type: 'number',\n        flex: 1,\n        minWidth: 100\n    },\n]\n\nexport const GridRemito = ({ data }) => {\n    return <DataGrid\n        style={{ minHeight: \"600px\" }}\n        rows={data}\n        columns={columns}\n        pageSize={20}\n        rowsPerPageOptions={[20]}\n        hideFooterPagination\n    />\n}","import FileOpenIcon from '@mui/icons-material/FileOpen';\nimport ReceiptIcon from '@mui/icons-material/Receipt';\nimport { Button, ButtonGroup, Grid, Typography } from \"@mui/material\";\nimport * as React from \"react\";\nimport { createRef, useCallback } from \"react\";\nimport { Input } from \"../../components/Input\";\nimport { Select } from \"../../components/Select\";\nimport * as field from \"../../resources/fields\";\nimport * as message from \"../../resources/messages\";\nimport * as validation from \"../../resources/validations\";\n\nexport const RemitoForm = ({ importe, clientes, onCargar, onEmitir, emitible }) => {\n\n    const refFechaRemito = createRef()\n    const refSelectCliente = createRef()\n\n    const handleCargar = useCallback(() => {\n        //TODO: codigo duplicado\n        const errors = new Map();\n        const values = {};\n\n        refSelectCliente.current.validate(errors, values, [\n            { func: validation.emptySelect, msg: message.valEmptyField }\n        ])\n\n        refFechaRemito.current.validate(errors, values, [\n            { func: validation.empty, msg: message.valEmptyFecha },\n            { func: validation.olderDate, msg: message.valOlderDate }\n        ])\n\n        if (errors.size > 0) {\n            console.error(errors)\n            field.toastValidationErrors(errors)\n            return\n        }\n\n        onCargar(values.idCliente, values.fecha)\n    }, [onCargar, refFechaRemito, refSelectCliente]);\n\n    const handleEmitir = useCallback(() => {\n        const errors = new Map();\n        const values = {};\n\n        refSelectCliente.current.validate(errors, values, [\n            { func: validation.emptySelect, msg: message.valEmptyField }\n        ])\n        refFechaRemito.current.validate(errors, values, [\n            { func: validation.empty, msg: message.valEmptyFecha },\n            { func: validation.olderDate, msg: message.valOlderDate }\n        ])\n\n        if (errors.size > 0) {\n            console.error(errors)\n            field.toastValidationErrors(errors)\n            return\n        }\n\n        onEmitir(values.idCliente, values.fecha)\n    }, [onEmitir, refFechaRemito, refSelectCliente]);\n\n    return <Grid container spacing={1.5}>\n        <Grid item xs={12}>\n            <Typography variant=\"h7\" color=\"GrayText\">\n                Datos del Remito\n            </Typography>\n        </Grid>\n        <Input ref={refFechaRemito}\n               id={field.backFechaRemito}\n               label={field.fechaRemito}\n               type=\"date\"\n               required/>\n        <Select\n            ref={refSelectCliente}\n            id={field.backIdCliente}\n            label={field.cliente}\n            options={clientes}\n            required/>\n        <Input\n            id={field.backImporteTotal}\n            label={field.importeTotal}\n            value={importe}/>\n        <Grid item xs={12} alignSelf=\"center\" mb={0.5}>\n            <ButtonGroup variant=\"contained\" fullWidth>\n                <Button color=\"info\" onClick={handleCargar} startIcon={<FileOpenIcon/>}>\n                    Cargar Datos\n                </Button>\n                <Button startIcon={<ReceiptIcon/>} onClick={handleEmitir} disabled={!emitible}>\n                    Emitir Remito\n                </Button>\n            </ButtonGroup>\n        </Grid>\n    </Grid>\n}","import * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport toast from \"react-hot-toast\";\nimport { Loading } from \"../../components/Loading\";\nimport { PageFormTable } from '../../components/PageFormTable';\nimport { getAllClientes, getRemito, postRemito } from '../../services/RestServices';\nimport { GridRemito } from './GridRemito';\nimport { RemitoForm } from \"./RemitoForm\";\n\nexport const EmitirRemito = () => {\n\n    const [importeTotal, setImporteTotal] = useState(0.0);\n    const [listaItems, setListaItems] = useState([]);\n    const [listaClientes, setListaClientes] = useState([]);\n    const [emitible, setEmitible] = useState(false);\n\n    const [isLoading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetchClientes();\n    }, []);\n\n    const fetchClientes = () => {\n        getAllClientes()\n            .then(({ data }) => {\n                setListaClientes(data)\n            })\n            .catch(() => toast.error(\"No se pudo cargar clientes\"))\n            .finally(() => setLoading(false));\n    }\n\n    const handleCargar = useCallback((cliente, fecha) => {\n        getRemito(cliente, fecha)\n            .then(({ data }) => {\n                setImporteTotal(data.importeTotal);\n                setListaItems(data.itemsRemito);\n                if (data.itemsRemito.length === 0) {\n                    toast.success('El cliente no posee expediciones para remito');\n                    setEmitible(false);\n                } else setEmitible(true);\n            })\n            .catch(() => toast.error('No se pudieron cargar los datos'))\n    }, []);\n\n    const handleEmitir = useCallback((cliente, fecha) => {\n        postRemito(cliente, fecha)\n            .then(({ data }) => {\n                window.open(`http://localhost:8000/api/v1/remitos/pdf/${data.id}`, '_blank').focus();\n            })\n            .catch(() => {\n                toast.error('No se pudo generar el remito')\n            })\n            .finally(() => {\n                setImporteTotal(0.0);\n                setListaItems([]);\n                setEmitible(false);\n            })\n    }, [])\n\n    //--- Variables ---\n    const clientesFormatted = useMemo(() => listaClientes.map((c) => {\n        return { id: c.id, value: c.id, label: c.razonSocial }\n    }), [listaClientes])\n\n    const itemsFormatted = useMemo(() =>\n            listaItems.map(i => {\n                return { ...i, id: i.tipoQueso }\n            })\n        , [listaItems]);\n\n    if (isLoading)\n        return <Loading/>\n\n    return <PageFormTable\n        titleForm=\"Emitir Remito\"\n        titleTable=\"Detalle\"\n        form={\n            <RemitoForm\n                onCargar={handleCargar}\n                onEmitir={handleEmitir}\n                clientes={clientesFormatted}\n                importe={importeTotal}\n                emitible={emitible}/>}\n        table={\n            <GridRemito\n                data={itemsFormatted}/>}>\n    </PageFormTable>\n}","import PercentIcon from '@mui/icons-material/Percent';\nimport { CardHeader, Grid } from '@mui/material';\nimport Avatar from '@mui/material/Avatar';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { red } from '@mui/material/colors';\nimport Typography from '@mui/material/Typography';\nimport * as React from 'react';\n\n//TODO: titulo unused\nexport const RendimientoCard = ({ titulo, valor, descripcion }) => {\n    return <Grid item xs={12} sm={6} md={4}>\n            <Card\n                sx={{\n                    height: '100%',\n                    // display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                }}>\n                <CardHeader\n                    avatar={\n                        <Avatar sx={{ bgcolor: red[500] }}>\n                            <PercentIcon/>\n                        </Avatar>\n                    }/>\n                <CardContent sx={{\n                    flexGrow: 1,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    textAlign: 'center',\n                }}>\n                    <Typography variant=\"h1\" component=\"h2\">\n                        {valor}\n                    </Typography>\n                    <Typography gutterBottom variant=\"h7\" color=\"textSecondary\" component=\"h2\">\n                        {descripcion}\n                    </Typography>\n                </CardContent>\n            </Card>\n        </Grid>\n}","import Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nexport function Title(props) {\n    return (\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n            {props.children}\n        </Typography>\n    );\n}\n\nTitle.propTypes = {\n    children: PropTypes.node,\n};","import { useTheme } from '@mui/material/styles';\nimport * as React from 'react';\nimport { Label, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { Title } from './Title';\n\nexport function Chart(\n    {\n        title,\n        data,\n        yLabel,\n        xDataKey,\n        dataKey,\n        dataKey1,\n        dataKey2,\n        legend = false,\n        dot = false,\n        domain/*:[bottom,top]*/\n    }) {\n    const theme = useTheme();\n\n    return (\n        <React.Fragment>\n            <Title>{title}</Title>\n            <ResponsiveContainer>\n                <LineChart\n                    data={data}\n                    margin={{\n                        top: 16,\n                        right: 16,\n                        bottom: 0,\n                        left: 24,\n                    }}\n                >\n                    <XAxis\n                        dataKey={xDataKey}\n                        stroke={theme.palette.text.secondary}\n                        style={theme.typography.body2}\n                    />\n                    <YAxis\n                        stroke={theme.palette.text.secondary}\n                        style={theme.typography.body2}\n                        domain={domain}>\n                        <Label\n                            angle={270}\n                            position=\"left\"\n                            style={{\n                                textAnchor: 'middle',\n                                fill: theme.palette.text.primary,\n                                ...theme.typography.body1,\n                            }}\n                        >\n                            {yLabel}\n                        </Label>\n                    </YAxis>\n                    <Tooltip/>\n                    {legend ? <Legend/> : <></>}\n                    <Line\n                        isAnimationActive={true}\n                        type=\"monotone\"\n                        dataKey={dataKey}\n                        stroke=\"#dc3030\"\n                        dot={dot}/>\n                    <Line\n                        isAnimationActive={true}\n                        type=\"monotone\"\n                        dataKey={dataKey1}\n                        stroke=\"#0288d1\"\n                        dot={dot}/>\n                    <Line\n                        isAnimationActive={true}\n                        type=\"monotone\"\n                        dataKey={dataKey2}\n                        stroke=\"#ed6c02\"\n                        dot={dot}/>\n                </LineChart>\n            </ResponsiveContainer>\n        </React.Fragment>\n    );\n}","import { Grid, Paper } from \"@mui/material\";\nimport * as React from 'react';\nimport { Chart } from '../../components/Chart';\n\nexport const RendimientoChart = (\n    {\n        title,\n        yLabel,\n        xLabel,\n        data,\n        xDataKey,\n        dataKey,\n        dataKey1,\n        dataKey2,\n        domain,\n        legend\n    }) => {\n    return <Grid item xs={12} md={6}>\n        <Paper\n            sx={{\n                p: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                height: 300,\n                width: '100%'\n            }}\n        >\n            <Chart\n                title={title}\n                yLabel={yLabel}\n                xLabel={xLabel}\n                data={data}\n                xDataKey={xDataKey}\n                dataKey={dataKey}\n                dataKey1={dataKey1}\n                dataKey2={dataKey2}\n                domain={domain}\n                legend={legend}\n            />\n        </Paper>\n    </Grid>\n}","import { CardActionArea, CardHeader } from '@mui/material';\nimport Avatar from '@mui/material/Avatar';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport * as React from 'react';\n\nexport const RendimientoQuesoCard = ({ queso, rendimiento }) => {\n    return <Card\n        sx={{\n            height: '100%',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center'\n        }}\n    >\n        <CardActionArea>\n            <CardHeader\n                avatar={\n                    <Avatar sx={{ bgcolor: queso.color }}>\n                        {queso.nomenclatura}\n                    </Avatar>\n                }/>\n            <CardContent sx={{\n                flexGrow: 1,\n                justifyContent: 'center',\n                alignItems: 'center',\n                textAlign: 'center',\n            }}>\n                <Typography gutterBottom variant=\"h3\" component=\"h2\">\n                    {rendimiento}\n                </Typography>\n                <Typography gutterBottom variant=\"h7\" color=\"textSecondary\" component=\"h2\">\n                    {queso.tipoQueso}\n                </Typography>\n            </CardContent>\n        </CardActionArea>\n    </Card>\n}","import SearchIcon from '@mui/icons-material/Search';\nimport { Button, Grid, Paper, Stack } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport * as React from 'react';\nimport { useCallback, useRef } from 'react';\nimport { Input } from \"../../components/Input\";\nimport { Select } from \"../../components/Select\";\nimport * as field from \"../../resources/fields\";\nimport * as message from \"../../resources/messages\";\nimport * as validation from \"../../resources/validations\";\n\nexport const RendimientoSearch = ({ fechaInicial, meses, onSearch }) => {\n\n    const refFecha = useRef(null);\n    const refMeses = useRef(null);\n\n    const handleSearch = useCallback(() => {\n        const errors = new Map();\n        const values = {};\n\n        refMeses.current.validate(errors, values, [\n            { func: validation.emptySelect, msg: message.valEmptyField }\n        ])\n\n        refFecha.current.validate(errors, values, [\n            { func: validation.empty, msg: message.valEmptyFecha },\n            { func: validation.olderDate, msg: message.valOlderDate }\n        ])\n\n        if (errors.size > 0) {\n            console.error(errors)\n            field.toastValidationErrors(errors)\n            return\n        }\n\n        onSearch(values.toDate, values.cantidadMeses)\n    }, [onSearch])\n\n    //--- Variables ---\n    const mesesOptions = [\n        { id: 1, value: 1, label: '1' },\n        { id: 2, value: 2, label: '2' },\n        { id: 3, value: 3, label: '3' },\n        { id: 6, value: 6, label: '6' },\n        { id: 12, value: 12, label: '12' },\n    ]\n\n    return <Grid item xs={12} sm={12} md={4} spacing={2}>\n        <Paper\n            sx={{\n                p: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                height: '100%',\n                width: '100%'\n            }}>\n            <Stack minHeight={300} sx={{ height: '100%' }} direction=\"column\" justifyContent=\"space-between\">\n                <Typography variant='h6'>Consultar producción</Typography>\n                <Grid container spacing={2}>\n                    <Input\n                        ref={refFecha}\n                        id={field.backFechaHasta}\n                        label={field.fechaHasta}\n                        value={fechaInicial}\n                        type=\"date\"\n                        required/>\n                    <Select\n                        ref={refMeses}\n                        value={meses}\n                        id={field.backCantidadMeses}\n                        label={field.cantidadMeses}\n                        options={mesesOptions}\n                        required/>\n                </Grid>\n                <Button\n                    startIcon={<SearchIcon/>}\n                    variant='contained'\n                    onClick={handleSearch}\n                    fullWidth>\n                    Consultar\n                </Button>\n            </Stack>\n        </Paper>\n    </Grid>\n}","import { Grid } from \"@mui/material\";\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { Loading } from '../../components/Loading';\nimport { getRendimientoByDia, getRendimientoByQueso } from '../../services/RestServices';\nimport { RendimientoCard } from \"./RendimientoCard\";\nimport { RendimientoChart } from \"./RendimientoChart\";\nimport { RendimientoQuesoCard } from \"./RendimientoQuesoCard\";\nimport { RendimientoSearch } from \"./RendimientoSearch\";\n\nexport const Rendimiento = () => {\n\n    const [listaRendimientos, setListaRendimientos] = useState([]);\n    const [rendimientosQuesos, setRendimientosQuesos] = useState([]);\n\n    const [isLoadingRendimientos, setLoadingRendimientos] = useState(true);\n    const [isLoadingRendimientoQueso, setLoadingRendimientoQueso] = useState(true)\n\n    const fetchRendimientos = useCallback((fechaHasta, meses) => {\n        //TODO: mover conversion de fechas a un archivo aparte como funcion\n        const currentDate = new Date(fechaHasta);\n        currentDate.setDate(currentDate.getDate() - Math.floor(30.5 * meses));\n        const year = currentDate.getFullYear();\n        const month = currentDate.getMonth();\n        var date = currentDate.getDate();\n        if (month === 1 && date === 28) date = 27;\n        const fechaDesde = `${year}-${padTo2Digits(month + 1)}-${padTo2Digits(date + 1)}`;\n        getRendimientoByDia(fechaDesde, fechaHasta)\n            .then(({ data }) => {\n                data.length > 16 ? setListaRendimientos(data) :\n                    toast.error('No se poseen suficientes datos');\n            })\n            .catch(() => toast.error('No se pudo cargar rendimientos'))\n            .finally(() => setLoadingRendimientos(false));\n        getRendimientoByQueso(fechaDesde, fechaHasta)\n            .then(({ data }) => {\n                setRendimientosQuesos(data);\n            })\n            .catch(() => toast.error('No se pudo cargar rendimientos de quesos'))\n            .finally(() => setLoadingRendimientoQueso(false));\n    }, [])\n\n    const padTo2Digits = (num) => {\n        return num.toString().padStart(2, '0');\n    }\n\n    const fechaInicial = useMemo(() => {\n        const currentDate = new Date();\n        const year = currentDate.getFullYear();\n        const month = currentDate.getMonth();\n        const date = currentDate.getDate();\n        return `${year}-${padTo2Digits(month + 1)}-${padTo2Digits(date,)}`;\n    }, [])\n\n    useEffect(() => {\n        fetchRendimientos(fechaInicial, 1);\n    }, [fechaInicial, fetchRendimientos])\n\n    const handleSearch = useCallback((fechaHasta, meses) => {\n        fetchRendimientos(fechaHasta, meses);\n    }, [fetchRendimientos])\n\n    // --- Variables ---\n    const rendimientoPromedio = useMemo(() => {\n        var sum = 0.0;\n        for (var i in listaRendimientos) {\n            sum = (Math.round((sum + listaRendimientos[i].rendimiento) * 100) / 100);\n        }\n        return (Math.round((sum / listaRendimientos.length) * 100) / 100);\n    }, [listaRendimientos])\n\n    const ultimoRendimientoPromedio = useMemo(() => {\n        let sum = 0.0;\n        const ultimaSemana = listaRendimientos.slice(-5);\n        for (const i in ultimaSemana) {\n            sum = (Math.round((sum + ultimaSemana[i].rendimiento) * 100) / 100);\n        }\n        return (Math.round((sum / ultimaSemana.length) * 100) / 100);\n    }, [listaRendimientos])\n\n    const listaByQuesoFormatted =\n        rendimientosQuesos.map((item) => {\n            return {\n                ...item,\n                rendimiento: (Math.round(item.rendimiento * 100) / 100)\n            }\n        })\n\n    const rendimientoMultilineFormatted = useMemo(() => {\n        const semana1 = listaRendimientos.slice(-16, -10);\n        const semana2 = listaRendimientos.slice(-11, -5)\n        const ultimaSemana = listaRendimientos.slice(-6);\n        return ultimaSemana.map((value, index) => {\n            return {\n                dia: index,\n                \"10 dias anteriores\": semana1.at(index).rendimiento,\n                \"5 dias anteriores\": semana2.at(index).rendimiento,\n                \"Últimos 5 dias\": value.rendimiento\n            }\n        })\n    }, [listaRendimientos]);\n\n    const rendimientoFormatted = useMemo(() => {\n        return listaRendimientos.map((value) => {\n            return {\n                ...value,\n                fecha: value.fecha.at(8) + value.fecha.at(9) + '-' +\n                    value.fecha.at(5) + value.fecha.at(6)\n            }\n        })\n    }, [listaRendimientos]);\n\n    const domain = useMemo(() => {\n        const dataArray = listaRendimientos.slice(-16);\n        let bottom = 11;\n        let top = 12;\n        for (let i in dataArray) {\n            if (bottom > dataArray[i].rendimiento) bottom = dataArray[i].rendimiento;\n            if (top < dataArray[i].rendimiento) top = dataArray[i].rendimiento;\n        }\n        bottom = Math.ceil(bottom)\n        top = Math.floor(top)\n        return [bottom, top];\n    }, [listaRendimientos])\n\n    return isLoadingRendimientoQueso ||\n    isLoadingRendimientos ? <Loading/> :\n        <Grid container\n              direction=\"row\"\n              spacing={2}\n              paddingRight={2}\n              style={{\n                  minHeight: \"92%\",\n                  maxWidth: \"98%\",\n                  margin: \"1%\",\n                  boxSizing: \"border-box\",\n              }}>\n            <Grid item container spacing={2}>\n                <RendimientoSearch\n                    fechaInicial={fechaInicial}\n                    meses={1}\n                    onSearch={handleSearch}/>\n                <RendimientoCard\n                    titulo=\"rendimiento\"\n                    valor={ultimoRendimientoPromedio}\n                    descripcion=\"Rendimiento promedio de la semana\"/>\n                <RendimientoCard\n                    titulo=\"rendimiento\"\n                    valor={rendimientoPromedio}\n                    descripcion=\"Rendimiento promedio del período\"/>\n            </Grid>\n            {/*Chart*/}\n            <Grid item container spacing={2}>\n                <RendimientoChart\n                    title=\"Rendimiento\"\n                    yLabel=\"Rendimiento\"\n                    xLabel=\"Dias\"\n                    data={rendimientoMultilineFormatted}\n                    xDataKey=\"dia\"\n                    dataKey=\"Ultimos 5 dias\"\n                    dataKey1=\"5 dias anteriores\"\n                    dataKey2=\"10 dias anteriores\"\n                    domain={domain}\n                    legend={true}/>\n                <RendimientoChart\n                    title=\"Rendimiento\"\n                    yLabel=\"Rendimiento\"\n                    xLabel=\"Fecha\"\n                    data={rendimientoFormatted}\n                    xDataKey=\"fecha\"\n                    dataKey=\"rendimiento\"\n                    domain={domain}/>\n            </Grid>\n            <Grid item container spacing={2}>\n                {listaByQuesoFormatted.map((rendimiento) => (\n                    <Grid item key={rendimiento.queso.id} xs={12} sm={6} md={4} lg={3} xl={2}>\n                        <RendimientoQuesoCard queso={rendimiento.queso}\n                                              rendimiento={rendimiento.rendimiento}/>\n                    </Grid>\n                ))}\n            </Grid>\n        </Grid>\n}","import Inventory2Icon from '@mui/icons-material/Inventory2';\nimport ShoppingBagIcon from '@mui/icons-material/ShoppingBag';\nimport { CardActionArea, CardHeader } from '@mui/material';\nimport Avatar from '@mui/material/Avatar';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport * as React from 'react';\n\nexport function StockEmbalajeCard({ item }) {\n    return <Card\n        sx={{\n            height: '100%',\n            flexDirection: 'column'\n        }}\n    >\n        <CardActionArea onClick={() => alert('queso')}>\n            <CardHeader\n                avatar={\n                    item.tipo === 'caja' ?\n                        <Avatar sx={{ bgcolor: \"#ed6c02\" }}>\n                            <Inventory2Icon/>\n                        </Avatar>\n                        :\n                        <Avatar sx={{ bgcolor: \"#0288d1\" }}>\n                            <ShoppingBagIcon/>\n                        </Avatar>\n                }\n                title={item.tipo}/>\n            <CardContent sx={{\n                flexGrow: 1, alignSelf: 'center',\n                justifyContent: 'center',\n                alignItems: 'center',\n                textAlign: 'center',\n            }}>\n                <Typography variant=\"h3\" component=\"h2\" alignContent='center'>\n                    {item.stock}\n                </Typography>\n                <Typography gutterBottom variant=\"h7\" component=\"h2\" color=\"textSecondary\" alignContent='center'>\n                    {item.productos}\n                </Typography>\n            </CardContent>\n        </CardActionArea>\n    </Card>\n}\n","import { Box, Container, Grid, Typography } from \"@material-ui/core\";\nimport { Button, ButtonGroup, TextField } from \"@mui/material\";\nimport * as React from 'react';\nimport { StockEmbalajeCard } from \"./StockEmbalajeCard\";\n\nexport const StockEmbalaje = () => {\n    const cards = [\n        { id: 1, tipo: 'bolsa', productos: 'Sardo', stock: 10 },\n        { id: 4, tipo: 'bolsa', productos: 'Barra', stock: 10 },\n        { id: 6, tipo: 'caja', productos: 'Sardo, Barra', stock: 10 },\n        { id: 5, tipo: 'bolsa', productos: 'Azul', stock: 10 },\n        { id: 7, tipo: 'caja', productos: 'Azul', stock: 10 },\n        { id: 3, tipo: 'bolsa', productos: 'Muzzarella', stock: 10 },\n        { id: 8, tipo: 'caja', productos: 'Muzzarella', stock: 10 },\n        { id: 2, tipo: 'bolsa', productos: 'Cremoso', stock: 10 },\n    ];\n\n    return <Container maxWidth=\"xl\">\n        <Grid container\n              direction=\"row\"\n              spacing={2}\n              paddingRight={2}\n              style={{\n                  minHeight: \"92%\",\n                  maxWidth: \"98%\",\n                  backgroundColor: \"white\",\n                  margin: \"1%\",\n                  borderRadius: \"8px\",\n                  boxShadow: 'rgba(0, 0, 0, 0.2) 0px 2px 1px -1px, rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 1px 3px 0px',\n                  boxSizing: \"border-box\",\n              }}>\n\n            <Grid container\n                  style={{\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      padding: 10\n                  }}\n                  spacing={2}>\n                <Grid item xs={12} sm={2}>\n                    <Typography variant='h6' style={{ paddingLeft: 2 }}>Embalaje</Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField fullWidth/>\n                </Grid>\n                <Grid item xs={12} sm={4} mb={0.5}>\n                    <ButtonGroup variant=\"contained\" fullWidth>\n                        <Button variant=\"contained\" color=\"info\" fullWidth>Buscar</Button>\n                        <Button variant=\"contained\" fullWidth>Nuevo Item</Button>\n                    </ButtonGroup>\n                </Grid>\n            </Grid>\n            <Grid item xs={12} alignSelf={\"center\"}>\n\n                <Box sx={{ overflowY: 'auto', maxHeight: 800, padding: 2, }}>\n\n                    <Container sx={{ py: 8 }} style={{\n                        backgroundColor: \"#fafafa\",\n                    }} maxWidth=\"xl\">\n                        {/* End hero unit */}\n                        <Grid container spacing={2}>\n                            {cards.map((card) => (\n                                <Grid item key={card.id} xs={12} sm={6} md={4} lg={3} xl={2}>\n                                    <StockEmbalajeCard\n                                        item={card}/>\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </Container>\n                </Box>\n            </Grid>\n        </Grid>\n    </Container>\n}","import {\n    Box,\n    Button,\n    Chip,\n    Container,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Stack,\n    Typography\n} from '@mui/material';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { getLotesByQuesoWithStock } from '../../services/RestServices';\n\n//TODO: creo que habria que mirar de hacer todas las llamdas de una sola vez\nexport const StockProductoDialog = ({ open, onClose, queso }) => {\n\n    const [listaLotes, setListaLotes] = useState([]);\n\n    const fetchLotes = () => {\n        getLotesByQuesoWithStock(queso.codigo)\n            .then(({ data }) => setListaLotes(data))\n            .catch(() => toast.error('No se pudo consultar los lotes del producto'))\n    }\n\n    useEffect(() => fetchLotes(), []);\n\n    return <>\n        <Dialog open={open} onClose={onClose} scroll=\"body\">\n            <DialogTitle>\n                <Chip\n                    avatar={queso.nomenclatura}\n                    label={queso.tipoQueso}\n                    style={{ backgroundColor: queso.color }}\n                />\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText variant='h4' textAlign=\"center\">\n                    Stock: {queso.stock}\n                </DialogContentText>\n                <Container maxWidth=\"sm\">\n                    <Box\n                        sx={{\n                            width: 250,\n                            marginTop: 8,\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            mt: 3\n                        }}\n                    >\n                        <Stack width={'100%'} direction=\"column\">\n                            <Stack direction=\"row\" justifyContent=\"space-between\">\n                                <Typography variant=\"h6\">Lote</Typography>\n                                <Typography variant=\"h6\">Stock</Typography>\n                            </Stack>\n                            {listaLotes.length === 0 ? <Typography>No hay lotes con stock</Typography> :\n                                listaLotes.map((lote) => {\n                                    return (\n                                        <Stack direction=\"row\" justifyContent=\"space-between\">\n                                            <Typography variant=\"h7\">{lote.id}</Typography>\n                                            <Typography variant=\"h7\">{lote.stockLote}</Typography>\n                                        </Stack>\n                                    )\n                                })}\n                        </Stack>\n                    </Box>\n                </Container>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose}>Salir</Button>\n            </DialogActions>\n        </Dialog>\n    </>\n}\n","import { CardActionArea, CardHeader } from '@mui/material';\nimport Avatar from '@mui/material/Avatar';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport * as React from 'react';\nimport { StockProductoDialog } from './StockProductoDialog';\n\nexport function StockCard({ queso }) {\n\n    const [isStockDialogOpen, setStockDialogOpen] = React.useState(false);\n\n    const handleCardAction = React.useCallback(() => {\n        setStockDialogOpen(true)\n    }, [])\n\n    const closeDialog = React.useCallback(() => {\n        setStockDialogOpen(false)\n    }, [])\n\n    return <>\n        <Card\n            sx={{\n                height: '100%', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'\n            }}\n        >\n            <CardActionArea onClick={handleCardAction}>\n                <CardHeader\n                    avatar={<Avatar sx={{ bgcolor: queso.color }}>\n                        {queso.nomenclatura}\n                    </Avatar>}\n                    title={''}/>\n                <CardContent sx={{\n                    flexGrow: 1, justifyContent: 'center', alignItems: 'center', textAlign: 'center',\n                }}>\n                    <Typography gutterBottom variant=\"h3\" component=\"h2\">\n                        {queso.stock}\n                    </Typography>\n                    <Typography gutterBottom variant=\"h7\" component=\"h2\" color=\"textSecondary\"\n                                alignContent='center'>\n                        {queso.tipoQueso}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n        <StockProductoDialog\n            queso={queso}\n            open={isStockDialogOpen}\n            onClose={closeDialog}\n        />\n    </>\n}\n","import { Box, Container, Grid, Typography } from \"@material-ui/core\";\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { Loading } from '../../components/Loading';\nimport { getAllQuesos } from \"../../services/RestServices\";\nimport { StockCard } from \"./StockCard\";\n\nexport const StockProductos = () => {\n\n    const [listaQuesos, setListaQuesos] = useState([]);\n\n    const [isLoading, setLoading] = useState(true);\n\n    useEffect(() => fetchQuesos(), []);\n\n    const fetchQuesos = () => {\n        getAllQuesos()\n            .then(({ data }) => {\n                setListaQuesos(data)\n                setLoading(false);\n            })\n            .catch(() => toast.error(\"No se pudo cargar productos\"))\n            .finally(() => setLoading(false));\n    }\n\n    if (isLoading) return <Loading/>\n\n    return <Container maxWidth=\"xl\">\n        <Grid container spacing={2} style={{\n            maxWidth: \"98%\",\n            backgroundColor: \"white\",\n            margin: \"1%\",\n            borderRadius: \"8px\",\n            boxShadow: 'rgba(0, 0, 0, 0.2) 0px 2px 1px -1px, rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 1px 3px 0px',\n            boxSizing: \"border-box\",\n        }}>\n            <Grid container\n                  style={{\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      padding: 10\n                  }}\n                  spacing={2}>\n                <Grid item xs={12}>\n                    <Typography variant='h6' style={{ paddingLeft: 2 }}>Stock Productos</Typography>\n                </Grid>\n            </Grid>\n            <Grid item xs={12} alignSelf={\"center\"}>\n                <Box sx={{ overflowY: 'auto', maxHeight: 800, padding: 2, }}>\n                    <Container sx={{ py: 8 }} style={{\n                        backgroundColor: \"#fafafa\",\n                    }} maxWidth=\"xl\">\n                        <Grid container spacing={2}>\n                            {listaQuesos.map((queso) => (\n                                <Grid item key={queso.id} xs={12} sm={6} md={4} lg={3} xl={2}>\n                                    <StockCard\n                                        queso={queso}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </Container>\n                </Box>\n            </Grid>\n        </Grid>\n    </Container>\n}","import { Grid, Paper } from \"@mui/material\";\nimport { Chart } from '../../components/Chart';\nimport * as React from 'react';\n\nexport const ChartVentas = ({ title, yLabel, xLabel, data, xDataKey, dataKey, dataKey1, dataKey2, domain, legend, md = 8 }) => {\n    return (\n        <Grid item xs={12} md={md}>\n            <Paper\n                sx={{\n                    p: 2,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: '100%',\n                    width: '100%'\n                }}>\n                <Chart\n                    title={title}\n                    yLabel={yLabel}\n                    xLabel={xLabel}\n                    data={data}\n                    xDataKey={xDataKey}\n                    dataKey={dataKey}\n                    dataKey1={dataKey1}\n                    dataKey2={dataKey2}\n                    domain={domain}\n                    legend={legend} />\n            </Paper>\n        </Grid>\n    );\n}","import { Grid, Paper } from \"@mui/material\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport * as React from 'react';\n\nexport const GridVentas = ({ data, quesos }) => {\n\n    const columnsQueso = quesos.map((queso) => {\n        return {\n            field: queso.tipoQueso,\n            headerName: queso.nomenclatura,\n            type: 'number',\n            flex: 0.7,\n            minWidth: 80\n        }\n    })\n\n    const columns = [{\n        field: \"fecha\",\n        headerName: \"Fecha\",\n        type: 'date',\n        flex: 0.7,\n    },\n    {\n        field: \"total\",\n        headerName: \"Total\",\n        type: 'number',\n        flex: 1,\n    },\n    ...columnsQueso\n    ];\n\n    return (\n        <Grid item xs={12}>\n            <Paper\n                sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: 600,\n                }}>\n                <DataGrid\n                    rows={data}\n                    columns={columns}\n                    pageSize={20}\n                    rowsPerPageOptions={[20]} />\n            </Paper>\n        </Grid>\n    );\n}","import { Button, Grid, Paper, Stack } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport { Input } from \"../../components/Input\";\nimport { Select } from \"../../components/Select\";\nimport * as field from \"../../resources/fields\";\nimport { useRef, useCallback } from 'react';\nimport SearchIcon from '@mui/icons-material/Search';\nimport * as validation from \"../../resources/validations\";\nimport * as message from \"../../resources/messages\";\nimport * as React from 'react';\n\nexport const SearchVentas = ({ fechaInicial, meses, onSearch }) => {\n\n    const refFecha = useRef(null);\n    const refMeses = useRef(null);\n\n    const handleSearch = useCallback(() => {\n        const errors = new Map();\n        const values = {};\n\n        refMeses.current.validate(errors, values, [\n            { func: validation.emptySelect, msg: message.valEmptyField }\n        ])\n\n        refFecha.current.validate(errors, values, [\n            { func: validation.empty, msg: message.valEmptyFecha },\n            { func: validation.olderDate, msg: message.valOlderDate }\n        ])\n\n        if (errors.size > 0) {\n            console.error(errors)\n            field.toastValidationErrors(errors)\n            return\n        }\n\n        onSearch(values.toDate, values.cantidadMeses)\n    }, [onSearch])\n\n    //--- Variables ---\n    const mesesOptions = [\n        { id: 1, value: 1, label: '1' },\n        { id: 2, value: 2, label: '2' },\n        { id: 3, value: 3, label: '3' },\n        { id: 6, value: 6, label: '6' },\n        { id: 12, value: 12, label: '12' },\n    ]\n\n    return (\n        <Grid item xs={12} sm={12} md={2} spacing={2}>\n            <Paper\n                sx={{\n                    p: 2,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: '100%',\n                    width: '100%'\n                }}            >\n                <Stack minHeight={300} sx={{ height: '100%' }} direction=\"column\" justifyContent=\"space-between\">\n                    <Typography variant='h6'>Consultar ventas</Typography>\n                    <Grid container spacing={2}>\n                        <Input\n                            ref={refFecha}\n                            id={field.backFechaHasta}\n                            label={field.fechaHasta}\n                            value={fechaInicial}\n                            type=\"date\"\n                            required />\n                        <Select\n                            ref={refMeses}\n                            value={meses}\n                            id={field.backCantidadMeses}\n                            label={field.cantidadMeses}\n                            options={mesesOptions}\n                            required />\n                    </Grid>\n                    <Button\n                        startIcon={<SearchIcon />}\n                        variant='contained'\n                        onClick={handleSearch}\n                        fullWidth>\n                        Consultar\n                    </Button>\n                </Stack>\n            </Paper>\n        </Grid>\n    );\n}","import { Autocomplete, Box, Grid, TextField, Typography } from \"@mui/material\";\nimport * as React from 'react';\n\nexport const SelectVentasByQueso = ({ data, quesos, onChange }) => {\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item>\n                <Typography variant='h6'>Ventas por queso</Typography>\n            </Grid>\n            <Grid item xs={12}>\n                <Autocomplete\n                    id=\"dataKey\"\n                    name=\"dataKey\"\n                    options={quesos}\n                    autoHighlight\n                    getOptionLabel={(option) => option.label || ''}\n                    renderOption={(props, option) => {\n                        return <Box component=\"li\"  {...props}>\n                            {option.label}\n                        </Box>\n                    }}\n                    renderInput={(params) => (\n                        <TextField\n                            error={false}\n                            required={false}\n                            {...params}\n                            label=\"Queso\" />\n                    )}\n                    value={data.dataKey}\n                    onChange={(e, value) => {\n                        onChange(\"dataKey\", value);\n                    }}\n                    isOptionEqualToValue={(option, value) => {\n                        return value.value ? option.value === value.value : option.value === value\n                    }}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <Autocomplete\n                    id=\"dataKey1\"\n                    name=\"dataKey1\"\n                    options={quesos}\n                    autoHighlight\n                    getOptionLabel={(option) => option.label || ''}\n                    renderOption={(props, option) => {\n                        return <Box component=\"li\"  {...props}>\n                            {option.label}\n                        </Box>\n                    }}\n                    renderInput={(params) => (\n                        <TextField\n                            error={false}\n                            required={false}\n                            {...params}\n                            label=\"Queso\" />\n                    )}\n                    value={data.dataKey1}\n                    onChange={(e, value) => {\n                        onChange(\"dataKey1\", value);\n                    }}\n                    isOptionEqualToValue={(option, value) => {\n                        return value.value ? option.value === value.value : option.value === value\n                    }}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <Autocomplete\n                    id=\"dataKey2\"\n                    name=\"dataKey2\"\n                    options={quesos}\n                    autoHighlight\n                    getOptionLabel={(option) => option.label || ''}\n                    renderOption={(props, option) => {\n                        return <Box component=\"li\"  {...props}>\n                            {option.label}\n                        </Box>\n                    }}\n                    renderInput={(params) => (\n                        <TextField\n                            error={false}\n                            required={false}\n                            {...params}\n                            label=\"Queso\" />\n                    )}\n                    value={data.dataKey2}\n                    onChange={(e, value) => {\n                        onChange(\"dataKey2\", value);\n                    }}\n                    isOptionEqualToValue={(option, value) => {\n                        return value.value ? option.value === value.value : option.value === value\n                    }}\n                />\n            </Grid>\n        </Grid >\n    );\n}","import { Grid, Paper } from \"@mui/material\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { ChartVentas } from \"./ChartVentas\";\nimport { SelectVentasByQueso } from \"./SelectVentasByQueso\";\nimport * as React from 'react';\n\nexport const VentasByQueso = ({ listaVentas, quesosSelect }) => {\n\n    const dataKeysInit = useMemo(() => {\n        return {\n            dataKey: quesosSelect.at(0),\n            dataKey1: \"\",\n            dataKey2: \"\"\n        }\n    }, [quesosSelect])\n\n    const [dataKeys, setDataKeys] = useState(dataKeysInit);\n\n    const handleChange = useCallback((field, value) => {\n        const val = value ? value : ''\n        const newKeys = { ...dataKeys, [field]: val };\n        setDataKeys(newKeys)\n    }, [dataKeys])\n\n    return (\n        <Grid item container spacing={2}>\n            <ChartVentas\n                title=\"Ventas por queso\"\n                data={listaVentas}\n                xDataKey=\"fecha\"\n                dataKey={dataKeys.dataKey ? dataKeys.dataKey.value : ''}\n                dataKey1={dataKeys.dataKey1 ? dataKeys.dataKey1.value : ''}\n                dataKey2={dataKeys.dataKey2 ? dataKeys.dataKey2.value : ''} />\n            <Grid item xs={12} md={4}>\n                <Paper\n                    sx={{\n                        p: 2,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        height: '100%',\n                        width: '100%',\n                        minHeight: 300\n                    }}>\n                    <SelectVentasByQueso\n                        data={dataKeys}\n                        quesos={quesosSelect}\n                        onChange={handleChange} />\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n}","import { Grid } from \"@mui/material\";\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { Loading } from \"../../components/Loading\";\nimport { getVentas, getAllQuesos } from \"../../services/RestServices\";\nimport { ChartVentas } from \"./ChartVentas\";\nimport { GridVentas } from \"./GridVentas\";\nimport { SearchVentas } from \"./SearchVentas\";\nimport { VentasByQueso } from \"./VentasByQueso\";\nimport * as React from 'react';\n\nexport const VerVentas = () => {\n\n    const [listaVentas, setListaVentas] = useState([]);\n    const [listaQuesos, setListaQuesos] = useState([]);\n\n    const [isLoadingVentas, setLoadingVentas] = useState(true);\n    const [isLoadingQuesos, setLoadingQuesos] = useState(true)\n\n    const fetchQuesos = () => {\n        getAllQuesos()\n            .then(quesos => {\n                const listaAux = quesos.data.map((q) => {\n                    return {\n                        id: q.id,\n                        codigo: q.codigo,\n                        nomenclatura: q.nomenclatura,\n                        tipoQueso: q.tipoQueso,\n                        color: q.color\n                    }\n                })\n                setListaQuesos(listaAux)\n            })\n            .catch(() => toast.error(\"No se pudo cargar quesos\"))\n            .finally(() => setLoadingQuesos(false));\n    }\n\n    const fetchVentas = useCallback((fechaHasta, meses) => {\n        //TODO: move to its own file\n        const currentDate = new Date(fechaHasta);\n        currentDate.setDate(currentDate.getDate() - Math.floor(30.5 * meses));\n        const year = currentDate.getFullYear();\n        const month = currentDate.getMonth();\n        let date = currentDate.getDate();\n        if (month === 1 && date === 28) date = 27;\n        const fechaDesde = `${year}-${padTo2Digits(month + 1)}-${padTo2Digits(date + 1)}`;\n        getVentas(fechaDesde, fechaHasta)\n            .then(({ data }) => {\n                setListaVentas(data)\n                if (data.length < 16) toast.error('No se poseen suficientes datos');\n            })\n            .catch(() => toast.error('No se pudo cargar ventas'))\n            .finally(() => setLoadingVentas(false));\n    }, [])\n\n    const padTo2Digits = (num) => {\n        return num.toString().padStart(2, '0');\n    }\n\n    const fechaInicial = useMemo(() => {\n        const currentDate = new Date();\n        const year = currentDate.getFullYear();\n        const month = currentDate.getMonth();\n        const date = currentDate.getDate();\n        return `${year}-${padTo2Digits(month + 1)}-${padTo2Digits(date,)}`;\n    }, [])\n\n    useEffect(() => {\n        fetchVentas(fechaInicial, 1);\n        fetchQuesos();\n    }, [fechaInicial, fetchVentas])\n\n    const handleSearch = useCallback((fechaHasta, meses) => {\n        fetchVentas(fechaHasta, meses);\n    }, [fetchVentas])\n\n    // --- Variables ---\n    const ventasFormatted = useMemo(() => {\n        if (isLoadingQuesos || isLoadingVentas) return [];\n        return listaVentas.map((dia, index) => {\n            const ventas = dia.ventas;\n            const ventasAsList = ventas.map((v) => {\n                const tipoQueso = listaQuesos.filter(q => q.codigo === v.codigoQueso).pop().tipoQueso;\n                return [tipoQueso, v.cantidad]\n            });\n            const ventasAsProps = Object.fromEntries(ventasAsList);\n            return {\n                id: index,\n                fecha: dia.fecha.at(8) + dia.fecha.at(9) + '-' +\n                    dia.fecha.at(5) + dia.fecha.at(6),\n                total: dia.total,\n                ...ventasAsProps\n            }\n        })\n    }, [isLoadingQuesos, isLoadingVentas, listaQuesos, listaVentas])\n\n    const quesosFormatted = useMemo(() =>\n        listaQuesos.map((q) => {\n            return {\n                id: q.id,\n                label: q.codigo + ' - ' + q.tipoQueso + ' - ' + q.nomenclatura,\n                value: q.tipoQueso\n            }\n        }), [listaQuesos]);\n\n    const ventasMultilineFormatted = useMemo(() => {\n        if (listaVentas.length < 16) return [];\n        const semana1 = listaVentas.slice(-16, -10);\n        const semana2 = listaVentas.slice(-11, -5)\n        const ultimaSemana = listaVentas.slice(-6);\n        return ultimaSemana.map((value, index) => {\n            return {\n                dia: index,\n                \"10 dias anteriores\": semana1.at(index).total,\n                \"5 dias anteriores\": semana2.at(index).total,\n                \"Últimos 5 dias\": value.total\n            }\n        })\n    }, [listaVentas]);\n\n    return (\n        isLoadingVentas || isLoadingQuesos ? <Loading /> :\n            <Grid container\n                direction=\"row\"\n                spacing={1.5}\n                paddingRight={2}\n                style={{\n                    minHeight: \"92%\",\n                    maxWidth: \"98%\",\n                    margin: \"1%\",\n                    boxSizing: \"border-box\",\n                }}>\n                <Grid item container spacing={2}>\n                    <SearchVentas\n                        fechaInicial={fechaInicial}\n                        meses={1}\n                        onSearch={handleSearch} />\n                    <ChartVentas\n                        md={5}\n                        title=\"Ventas totales\"\n                        data={ventasFormatted}\n                        xDataKey=\"fecha\"\n                        dataKey=\"total\" />\n                    <ChartVentas\n                        md={5}\n                        title=\"Ventas totales\"\n                        data={ventasMultilineFormatted}\n                        xDataKey=\"fecha\"\n                        dataKey=\"Últimos 5 dias\"\n                        dataKey1=\"5 dias anteriores\"\n                        dataKey2=\"10 dias anteriores\"\n                        legend={true} />\n                </Grid>\n                <Grid item container spacing={2}>\n                    <VentasByQueso\n                        listaVentas={ventasFormatted}\n                        quesosSelect={quesosFormatted} />\n                </Grid>\n                <GridVentas\n                    quesos={listaQuesos}\n                    data={ventasFormatted} />\n            </Grid>\n    );\n}","import { Grid, Paper } from \"@mui/material\";\nimport { Chart } from '../../components/Chart';\nimport * as React from 'react';\n\nexport const ChartLitros = ({ title, yLabel, xLabel, data, xDataKey, dataKey, dataKey1, dataKey2, domain, legend, md = 8, dot }) => {\n    return <Grid item xs={12} md={md}>\n        <Paper\n            sx={{\n                p: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                height: '100%',\n                width: '100%'\n            }}>\n            <Chart\n                title={title}\n                yLabel={yLabel}\n                xLabel={xLabel}\n                data={data}\n                xDataKey={xDataKey}\n                dataKey={dataKey}\n                dataKey1={dataKey1}\n                dataKey2={dataKey2}\n                domain={domain}\n                legend={legend}\n                dot={dot} />\n        </Paper>\n    </Grid>\n}","import { Grid, Paper } from \"@mui/material\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport * as React from 'react';\n\nexport const GridLitros = ({ data, quesos }) => {\n\n    const columnsQueso = quesos.map((queso) => {\n        return {\n            field: queso.tipoQueso,\n            headerName: queso.nomenclatura,\n            type: 'number',\n            flex: 0.7,\n            minWidth: 80\n        }\n    })\n\n    const columns = [{\n        field: \"fecha\",\n        headerName: \"Fecha\",\n        type: 'date',\n        flex: 0.7,\n    },\n    {\n        field: \"total\",\n        headerName: \"Total\",\n        type: 'number',\n        flex: 1,\n    },\n    ...columnsQueso\n    ];\n\n    return (\n        <Grid item xs={12}>\n            <Paper\n                sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: 600,\n                }}>\n                <DataGrid\n                    rows={data}\n                    columns={columns}\n                    pageSize={20}\n                    rowsPerPageOptions={[20]} />\n            </Paper>\n        </Grid>\n    );\n}","import { Autocomplete, Box, Grid, TextField, Typography } from \"@mui/material\";\nimport * as React from 'react';\n\nexport const SelectLitrosByQueso = ({ data, quesos, onChange }) => {\n    return (\n        <Grid container spacing={2}>\n            <Grid item>\n                <Typography variant='h6'>Litros por queso</Typography>\n            </Grid>\n            <Grid item xs={12}>\n                <Autocomplete\n                    id=\"dataKey\"\n                    name=\"dataKey\"\n                    options={quesos}\n                    autoHighlight\n                    getOptionLabel={(option) => option.label || ''}\n                    renderOption={(props, option) => {\n                        return <Box component=\"li\"  {...props}>\n                            {option.label}\n                        </Box>\n                    }}\n                    renderInput={(params) => (\n                        <TextField\n                            error={false}\n                            required={false}\n                            {...params}\n                            label=\"Queso\" />\n                    )}\n                    value={data.dataKey}\n                    onChange={(e, value) => {\n                        onChange(\"dataKey\", value);\n                    }}\n                    isOptionEqualToValue={(option, value) => {\n                        return value.value ? option.value === value.value : option.value === value\n                    }}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <Autocomplete\n                    id=\"dataKey1\"\n                    name=\"dataKey1\"\n                    options={quesos}\n                    autoHighlight\n                    getOptionLabel={(option) => option.label || ''}\n                    renderOption={(props, option) => {\n                        return <Box component=\"li\"  {...props}>\n                            {option.label}\n                        </Box>\n                    }}\n                    renderInput={(params) => (\n                        <TextField\n                            error={false}\n                            required={false}\n                            {...params}\n                            label=\"Queso\" />\n                    )}\n                    value={data.dataKey1}\n                    onChange={(e, value) => {\n                        onChange(\"dataKey1\", value);\n                    }}\n                    isOptionEqualToValue={(option, value) => {\n                        return value.value ? option.value === value.value : option.value === value\n                    }}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <Autocomplete\n                    id=\"dataKey2\"\n                    name=\"dataKey2\"\n                    options={quesos}\n                    autoHighlight\n                    getOptionLabel={(option) => option.label || ''}\n                    renderOption={(props, option) => {\n                        return <Box component=\"li\"  {...props}>\n                            {option.label}\n                        </Box>\n                    }}\n                    renderInput={(params) => (\n                        <TextField\n                            error={false}\n                            required={false}\n                            {...params}\n                            label=\"Queso\" />\n                    )}\n                    value={data.dataKey2}\n                    onChange={(e, value) => {\n                        onChange(\"dataKey2\", value);\n                    }}\n                    isOptionEqualToValue={(option, value) => {\n                        return value.value ? option.value === value.value : option.value === value\n                    }}\n                />\n            </Grid>\n        </Grid >\n    );\n}","import { Grid, Paper } from \"@mui/material\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { ChartLitros } from \"./ChartLitros\";\nimport { SelectLitrosByQueso } from \"./SelectLitrosByQueso\";\nimport * as React from 'react';\n\nexport const LitrosByQueso = ({ listaLitros, quesosSelect }) => {\n\n    const dataKeysInit = useMemo(() => {\n        return {\n            dataKey: quesosSelect.at(0),\n            dataKey1: \"\",\n            dataKey2: \"\"\n        }\n    }, [quesosSelect])\n\n    const [dataKeys, setDataKeys] = useState(dataKeysInit);\n\n    const handleChange = useCallback((field, value) => {\n        const val = value ? value : ''\n        const newKeys = { ...dataKeys, [field]: val };\n        setDataKeys(newKeys)\n    }, [dataKeys])\n\n    return (\n        <Grid item container spacing={2}>\n            <ChartLitros\n                title=\"Litros por queso\"\n                data={listaLitros}\n                xDataKey=\"fecha\"\n                dataKey={dataKeys.dataKey ? dataKeys.dataKey.value : ''}\n                dataKey1={dataKeys.dataKey1 ? dataKeys.dataKey1.value : ''}\n                dataKey2={dataKeys.dataKey2 ? dataKeys.dataKey2.value : ''}\n                dot={true}/>\n            <Grid item xs={12} md={4}>\n                <Paper\n                    sx={{\n                        p: 2,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        height: '100%',\n                        width: '100%',\n                        minHeight: 300\n                    }}>\n                    <SelectLitrosByQueso\n                        data={dataKeys}\n                        quesos={quesosSelect}\n                        onChange={handleChange}/>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n}","import { Button, Grid, Paper, Stack } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport { Input } from \"../../components/Input\";\nimport { Select } from \"../../components/Select\";\nimport * as field from \"../../resources/fields\";\nimport { useRef, useCallback } from 'react';\nimport SearchIcon from '@mui/icons-material/Search';\nimport * as validation from \"../../resources/validations\";\nimport * as message from \"../../resources/messages\";\nimport * as React from 'react';\n\nexport const SearchLitros = ({ fechaInicial, meses, onSearch }) => {\n\n    const refFecha = useRef(null);\n    const refMeses = useRef(null);\n\n    const handleSearch = useCallback(() => {\n        const errors = new Map();\n        const values = {};\n\n        refMeses.current.validate(errors, values, [\n            { func: validation.emptySelect, msg: message.valEmptyField }\n        ])\n\n        refFecha.current.validate(errors, values, [\n            { func: validation.empty, msg: message.valEmptyFecha },\n            { func: validation.olderDate, msg: message.valOlderDate }\n        ])\n\n        if (errors.size > 0) {\n            console.error(errors)\n            field.toastValidationErrors(errors)\n            return\n        }\n\n        onSearch(values.toDate, values.cantidadMeses)\n    }, [onSearch])\n\n    //--- Variables ---\n    const mesesOptions = [\n        { id: 1, value: 1, label: '1' },\n        { id: 2, value: 2, label: '2' },\n        { id: 3, value: 3, label: '3' },\n        { id: 6, value: 6, label: '6' },\n        { id: 12, value: 12, label: '12' },\n    ]\n\n    return (\n        <Grid item xs={12} sm={12} md={2} spacing={2}>\n            <Paper\n                sx={{\n                    p: 2,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: '100%',\n                    width: '100%'\n                }}            >\n                <Stack minHeight={300} sx={{ height: '100%' }} direction=\"column\" justifyContent=\"space-between\">\n                    <Typography variant='h6'>Consultar litros</Typography>\n                    <Grid container spacing={2}>\n                        <Input\n                            ref={refFecha}\n                            id={field.backFechaHasta}\n                            label={field.fechaHasta}\n                            value={fechaInicial}\n                            type=\"date\"\n                            required />\n                        <Select\n                            ref={refMeses}\n                            value={meses}\n                            id={field.backCantidadMeses}\n                            label={field.cantidadMeses}\n                            options={mesesOptions}\n                            required />\n                    </Grid>\n                    <Button\n                        startIcon={<SearchIcon />}\n                        variant='contained'\n                        onClick={handleSearch}\n                        fullWidth>\n                        Consultar\n                    </Button>\n                </Stack>\n            </Paper>\n        </Grid>\n    );\n}","import { Grid } from \"@mui/material\";\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { Loading } from \"../../components/Loading\";\nimport { getAllQuesos, getLitros } from \"../../services/RestServices\";\nimport { ChartLitros } from \"./ChartLitros\";\nimport { GridLitros } from \"./GridLitros\";\nimport { LitrosByQueso } from \"./LitrosByQueso\";\nimport { SearchLitros } from \"./SearchLitros\";\nimport * as React from 'react';\n\nexport const VerLitrosElaborados = () => {\n\n    const [listaLitros, setListaLitros] = useState([]);\n    const [listaQuesos, setListaQuesos] = useState([]);\n\n    const [isLoadingLitros, setLoadingLitros] = useState(true);\n    const [isLoadingQuesos, setLoadingQuesos] = useState(true)\n\n    const fetchQuesos = () => {\n        getAllQuesos()\n            .then(quesos => {\n                const listaAux = quesos.data.map((q) => {\n                    return {\n                        id: q.id,\n                        codigo: q.codigo,\n                        nomenclatura: q.nomenclatura,\n                        tipoQueso: q.tipoQueso,\n                        color: q.color\n                    }\n                })\n                setListaQuesos(listaAux)\n            })\n            .catch(() => toast.error(\"No se pudo cargar quesos\"))\n            .finally(() => setLoadingQuesos(false));\n    }\n\n    const fetchLitros = useCallback((fechaHasta, meses) => {\n        //TODO: move to its own file\n        const currentDate = new Date(fechaHasta);\n        currentDate.setDate(currentDate.getDate() - Math.floor(30.5 * meses));\n        const year = currentDate.getFullYear();\n        const month = currentDate.getMonth();\n        let date = currentDate.getDate();\n        if (month === 1 && date === 28) date = 27;\n        const fechaDesde = `${year}-${padTo2Digits(month + 1)}-${padTo2Digits(date + 1)}`;\n        getLitros(fechaDesde, fechaHasta)\n            .then(({ data }) => {\n                setListaLitros(data)\n                if (data.length < 16) toast.error('No se poseen suficientes datos');\n            })\n            .catch(() => toast.error('No se pudo cargar litros'))\n            .finally(() => setLoadingLitros(false));\n    }, [])\n\n    const padTo2Digits = (num) => {\n        return num.toString().padStart(2, '0');\n    }\n\n    const fechaInicial = useMemo(() => {\n        const currentDate = new Date();\n        const year = currentDate.getFullYear();\n        const month = currentDate.getMonth();\n        const date = currentDate.getDate();\n        return `${year}-${padTo2Digits(month + 1)}-${padTo2Digits(date,)}`;\n    }, [])\n\n    useEffect(() => {\n        fetchLitros(fechaInicial, 1);\n        fetchQuesos();\n    }, [fechaInicial, fetchLitros])\n\n    const handleSearch = useCallback((fechaHasta, meses) => {\n        fetchLitros(fechaHasta, meses);\n    }, [fetchLitros])\n\n    // --- Variables ---\n    const litrosFormatted = useMemo(() => {\n        if (isLoadingQuesos || isLoadingLitros) return [];\n        return listaLitros.map((dia, index) => {\n            const litros = dia.litrosElaborados;\n            const litrosAsList = litros.map((v) => {\n                const tipoQueso = listaQuesos.filter(q => q.codigo === v.codigoQueso).pop().tipoQueso;\n                return [tipoQueso, v.cantidad]\n            });\n            const litrosAsProps = Object.fromEntries(litrosAsList);\n            return {\n                id: index,\n                fecha: dia.fecha.at(8) + dia.fecha.at(9) + '/' +\n                    dia.fecha.at(5) + dia.fecha.at(6),\n                total: dia.total,\n                ...litrosAsProps\n            }\n        })\n    }, [isLoadingQuesos, isLoadingLitros, listaQuesos, listaLitros])\n\n    const quesosFormatted = useMemo(() =>\n        listaQuesos.map((q) => {\n            return {\n                id: q.id,\n                label: q.codigo + ' - ' + q.tipoQueso + ' - ' + q.nomenclatura,\n                value: q.tipoQueso\n            }\n        }), [listaQuesos]);\n\n    const litrosMultilineFormatted = useMemo(() => {\n        if (listaLitros.length < 16) return [];\n        const semana1 = listaLitros.slice(-16, -10);\n        const semana2 = listaLitros.slice(-11, -5)\n        const ultimaSemana = listaLitros.slice(-6);\n        return ultimaSemana.map((value, index) => {\n            return {\n                dia: index,\n                \"10 dias anteriores\": semana1.at(index).total,\n                \"5 dias anteriores\": semana2.at(index).total,\n                \"Ultimos 5 dias\": value.total\n            }\n        })\n    }, [listaLitros]);\n\n    return (\n        isLoadingLitros || isLoadingQuesos ? <Loading /> :\n            <Grid container\n                direction=\"row\"\n                spacing={1.5}\n                paddingRight={2}\n                style={{\n                    minHeight: \"92%\",\n                    maxWidth: \"98%\",\n                    margin: \"1%\",\n                    boxSizing: \"border-box\",\n                }}>\n                <Grid item container spacing={2}>\n                    <SearchLitros\n                        fechaInicial={fechaInicial}\n                        meses={1}\n                        onSearch={handleSearch} />\n                    <ChartLitros\n                        md={5}\n                        title=\"Litros totales\"\n                        data={litrosFormatted}\n                        xDataKey=\"fecha\"\n                        dataKey=\"total\" />\n                    <ChartLitros\n                        md={5}\n                        title=\"Litros totales\"\n                        data={litrosMultilineFormatted}\n                        xDataKey=\"fecha\"\n                        dataKey=\"Ultimos 5 dias\"\n                        dataKey1=\"5 dias anteriores\"\n                        dataKey2=\"10 dias anteriores\"\n                        legend={true} />\n                </Grid>\n                <Grid item container spacing={2}>\n                    <LitrosByQueso\n                        listaLitros={litrosFormatted}\n                        quesosSelect={quesosFormatted} />\n                </Grid>\n                <GridLitros\n                    quesos={listaQuesos}\n                    data={litrosFormatted} />\n            </Grid>\n    );\n}","import {\n    Button,\n    Container,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    Stack,\n    Switch,\n    Typography\n} from \"@mui/material\";\nimport * as React from 'react';\nimport { createRef, useEffect, useState } from 'react';\nimport { Input } from \"../../components/Input\";\nimport * as field from \"../../resources/fields\";\nimport { toastValidationErrors } from \"../../resources/fields\";\nimport * as message from \"../../resources/messages\";\nimport * as validation from \"../../resources/validations\";\n\nexport const EditLoteDialog = ({ lote, open, onClose, onSubmit, onDelete }) => {\n\n    const [loteForm, setLoteForm] = useState(lote)\n\n    const [deleteEnabled, setDeleteEnabled] = useState(false)\n\n    const refLitros = createRef()\n    const refCantHormas = createRef()\n    const refPeso = createRef()\n    const refCantCajas = createRef()\n    const refLoteCultivo = createRef()\n    const refLoteColorante = createRef()\n    const refLoteCalcio = createRef()\n    const refLoteCuajo = createRef()\n\n    useEffect(() => {\n        setLoteForm(lote);\n    }, [lote]);\n\n    const handleChangeSwitch = (evt) => {\n        setDeleteEnabled(evt.target.checked);\n    }\n\n    const submitLote = () => {\n        const errors = new Map();\n        const values = {};\n        values[\"id\"] = loteForm.id\n\n        refLitros.current.validate(errors, values, [{ func: validation.minorToOne, msg: message.valZeroValue }])\n\n        refCantHormas.current.validate(errors, values, [{ func: validation.minorToOne, msg: message.valZeroValue }])\n\n        refCantCajas.current.validate(errors, values, [{ func: validation.minorToOne, msg: message.valZeroValue }])\n\n        if (errors.size > 0) {\n            console.error(errors)\n            toastValidationErrors(errors)\n            return\n        }\n\n        refPeso.current.setValue(values)\n        refLoteCultivo.current.setValue(values)\n        refLoteColorante.current.setValue(values)\n        refLoteCalcio.current.setValue(values)\n        refLoteCuajo.current.setValue(values)\n\n        const loteSubmit = {\n            ...lote,\n            [field.backLitrosLeche]: values.litrosLeche,\n            [field.backCantHormas]: values.cantHormas,\n            [field.backCantCajas]: values.cantCajas,\n            [field.backPeso]: values.peso,\n            [field.backLoteCuajo]: values.loteCuajo,\n            [field.backLoteColorante]: values.loteColorante,\n            [field.backLoteCalcio]: values.loteCalcio,\n            [field.backLoteCultivo]: values.loteCultivo,\n        }\n\n        onSubmit(loteSubmit)\n    }\n\n    return <Dialog\n        open={open}\n        onClose={onClose}\n        scroll=\"body\"\n    >\n        <DialogTitle>Editar Producción</DialogTitle>\n        <DialogContent\n            style={{ backgroundColor: deleteEnabled ? \"#F0BEBE\" : '' }}>\n            <Container maxWidth=\"sm\">\n                <Grid container spacing={2}>\n                    <Grid item xs={8}>\n                        <Typography variant=\"h6\" paddingLeft={2}>\n                            Lote: {lote.id}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Stack direction=\"row\" justifyContent=\"right\">\n                            Habilitar Borrado\n                            <Switch\n                                checked={deleteEnabled}\n                                onChange={handleChangeSwitch}/>\n                        </Stack>\n                    </Grid>\n                    <Grid item container spacing={1.5} xs={12} sm={6}>\n\n                        <Input ref={refLitros}\n                               id={field.backLitrosLeche}\n                               label={field.litrosLeche}\n                               value={loteForm.litrosLeche}\n                               required/>\n                        <Input ref={refCantHormas}\n                               id={field.backCantHormas}\n                               label={field.cantHormas}\n                               value={loteForm.cantHormas}\n                               required/>\n                        <Input ref={refCantCajas}\n                               id={field.backCantCajas}\n                               label={field.cantCajas}\n                               value={loteForm.cantCajas}\n                               required/>\n                        <Input ref={refPeso}\n                               id={field.backPeso}\n                               label={field.peso}\n                               value={loteForm.peso}/>\n                    </Grid>\n                    <Grid item container spacing={1.5} xs={12} sm={6}>\n                        <Input ref={refLoteCultivo}\n                               id={field.backLoteCultivo}\n                               label={field.loteCultivo}\n                               value={loteForm.loteCultivo}\n                               type=\"text\"/>\n                        <Input ref={refLoteColorante}\n                               id={field.backLoteColorante}\n                               label={field.loteColorante}\n                               value={loteForm.loteColorante}\n                               type=\"text\"/>\n                        <Input ref={refLoteCalcio}\n                               id={field.backLoteCalcio}\n                               label={field.loteCalcio}\n                               value={loteForm.loteCalcio}\n                               type=\"text\"/>\n                        <Input ref={refLoteCuajo}\n                               id={field.backLoteCuajo}\n                               label={field.loteCuajo}\n                               value={loteForm.loteCuajo}\n                               type=\"text\"/>\n                    </Grid>\n                </Grid>\n            </Container>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={onDelete} disabled={!deleteEnabled}>Borrar Lote</Button>\n            <Button onClick={onClose}>Cancelar</Button>\n            <Button onClick={submitLote}>Actualizar Lote</Button>\n        </DialogActions>\n    </Dialog>\n}","import { Button, ButtonGroup, Grid, Typography } from \"@mui/material\";\nimport * as React from 'react';\nimport { useRef } from 'react';\nimport toast from 'react-hot-toast';\nimport validator from 'validator';\nimport { Input } from \"../../components/Input\";\nimport * as field from \"../../resources/fields\";\nimport { toastValidationErrors } from \"../../resources/fields\";\nimport * as message from \"../../resources/messages\";\nimport * as validation from \"../../resources/validations\";\n\nexport const FormProduccion = ({ onBuscar, initialDate }) => {\n\n    const refFechaDesde = useRef(null);\n    const refFechaHasta = useRef(null);\n\n    const handleBuscar = () => {\n        const errors = new Map();\n        const values = {};\n\n        refFechaDesde.current.validate(errors, values, [\n            { func: validation.empty, msg: message.valEmptyFecha }\n        ])\n        refFechaHasta.current.validate(errors, values, [\n            { func: validation.empty, msg: message.valEmptyFecha }\n        ])\n\n        if (errors.size > 0) {\n            console.error(errors)\n            toastValidationErrors(errors)\n            return\n        }\n\n        if (validator.isBefore(values.fechaHasta, values.fechaDesde))\n            toast.error('El rango de fechas no es válido');\n        else {\n            onBuscar(values.fechaDesde, values.fechaHasta);\n        }\n    }\n\n    return <Grid container spacing={1.5}>\n        <Grid item xs={12}>\n            <Typography variant=\"h7\" color=\"GrayText\">\n                Rango de fechas\n            </Typography>\n        </Grid>\n        <Input ref={refFechaDesde}\n               id={'fechaDesde'}\n               label={field.fechaDesde}\n               value={initialDate}\n               type=\"date\"\n               required/>\n        <Input ref={refFechaHasta}\n               id={'fechaHasta'}\n               label={field.fechaHasta}\n               value={initialDate}\n               type=\"date\"\n               required/>\n\n        <Grid item xs={12} alignSelf=\"right\" mb={0.5}>\n            <ButtonGroup fullWidth variant=\"contained\">\n                <Button color=\"primary\" onClick={handleBuscar}>Buscar</Button>\n            </ButtonGroup>\n        </Grid>\n    </Grid>\n}","import { Chip, Typography } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport * as field from \"../../resources/fields\";\n\nexport const GridProduccion = ({ data, setSelection }) => {\n\n    const columns = useMemo(() => {\n        return [\n            {\n                field: field.backID,\n                headerName: 'Lote',\n                flex: 0.75,\n                minWidth: 50\n            },\n            {\n                field: field.backFechaElaboracion,\n                headerName: 'Fecha',\n                type: 'date',\n                valueFormatter: (params) => {\n                    const valueFormatted =\n                        params.value.at(8) + params.value.at(9) + '-' +\n                        params.value.at(5) + params.value.at(6) + '-' +\n                        params.value.at(0) + params.value.at(1) +\n                        params.value.at(2) + params.value.at(3);\n                    return `${valueFormatted}`;\n                },\n                flex: 0.75,\n                minWidth: 50\n            },\n            {\n                field: field.backCodigoQueso,\n                headerName: 'Queso',\n                flex: 0.75,\n                minWidth: 50,\n                renderCell: ({ value }) => {\n                    return <Chip\n                        label={value.tipoQueso}\n                        style={{ backgroundColor: value.color }}/>\n                }\n            },\n            {\n                field: field.backNumeroTina,\n                headerName: 'Tina',\n                flex: 0.25,\n                minWidth: 50\n            },\n            {\n                field: field.backLitrosLeche,\n                headerName: 'Litros',\n                type: 'number',\n                flex: 0.5,\n                minWidth: 50\n            },\n            {\n                field: field.backCantHormas,\n                headerName: 'Hormas',\n                type: 'number',\n                flex: 0.5,\n                minWidth: 50\n            },\n            {\n                field: field.backStockLote,\n                headerName: 'Saldo',\n                type: 'number',\n                flex: 0.5,\n                minWidth: 50,\n                renderCell: ({ value }) => {\n                    return (\n                        <Chip\n                            label={value.stockLote}\n                            color={value.color}/>\n                    );\n                },\n                sortComparator: (v1, v2) => {\n                    return v1.stockLote - v2.stockLote\n                },\n\n            },\n            {\n                field: field.backPeso,\n                headerName: 'Peso',\n                type: 'number',\n                flex: 0.5,\n                minWidth: 50\n            },\n            {\n                field: field.backRendimientoLote,\n                headerName: 'Rendimiento',\n                type: 'number',\n                flex: 0.5,\n                minWidth: 50\n            },\n        ]\n    }, []);\n\n    return  <>\n        <DataGrid\n            style={{ minHeight: \"600px\" }}\n            autoHeight={true}\n            rows={data}\n            columns={columns}\n            rowHeight={42}\n            pageSize={15}\n            rowsPerPageOptions={[15]}\n            onCellDoubleClick={(params) => setSelection(params.id)}/>\n        <Typography variant=\"h7\" color=\"GrayText\">\n            Doble click sobre una fila de la tabla para editar el lote de producción\n        </Typography>\n    </>\n}","import * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport toast from \"react-hot-toast\";\nimport { Loading } from '../../components/Loading';\nimport { PageFormTable } from \"../../components/PageFormTable\";\nimport * as field from \"../../resources/fields\";\nimport { deleteLote, getAllQuesos, getLotesBetweenDates, putLote } from \"../../services/RestServices\";\nimport { DialogEliminarLote } from \"../Lotes/DialogEliminarLote\";\nimport { EditLoteDialog } from './EditLoteDialog';\nimport { FormProduccion } from \"./FormProduccion\";\nimport { GridProduccion } from \"./GridProduccion\";\n\nexport const VerProduccion = () => {\n\n    const [listaLotes, setListaLotes] = useState([]);\n    const [listaQuesos, setListaQuesos] = useState([]);\n    const [lote, setLote] = useState({});\n\n    const [isEditing, setEditing] = useState(false);\n    const [isLoading, setLoading] = useState(true);\n    const [eliminarDialog, setEliminarDialog] = useState(false);\n\n    const fetchLotes = (fechaDesde, fechaHasta) => {\n        getLotesBetweenDates(fechaDesde, fechaHasta)\n            .then(({ data }) => setListaLotes(data))\n            .catch(() => toast.error('No se pudieron cargar los lotes'))\n    }\n\n    const fetchQuesos = useCallback(() => {\n        getAllQuesos()\n            .then(data => {\n                setListaQuesos(data.data);\n            })\n            .catch(() => toast.error(\"No se pudo cargar quesos\"))\n            .finally(() => setLoading(false));\n    }, []);\n\n    useEffect(() => fetchQuesos(), [fetchQuesos])\n\n    // --- Functions ---\n\n    const handleBuscar = useCallback((fechaDesde, fechaHasta) => {\n        fetchLotes(fechaDesde, fechaHasta);\n    }, []);\n\n    const setSelection = useCallback((id) => {\n        setLote(listaLotes.filter(l => l.id === id).pop());\n        setEditing(true);\n    }, [listaLotes])\n\n    const closeDialog = useCallback(() => setEditing(false), []);\n\n    const handleSubmit = useCallback((loteSubmit) => {\n        putLote(loteSubmit)\n            .then(({ data }) => {\n                const newList = listaLotes.filter((item) => item.id !== lote.id);\n                setListaLotes([...newList, data]);\n            })\n            .catch(() => null);\n        setEditing(false);\n    }, [listaLotes, lote.id]);\n\n    const eliminarLote = useCallback(() => {\n        setEditing(false);\n        setEliminarDialog(true)\n    }, [])\n\n    const handleEliminar = useCallback(() => {\n        deleteLote(lote.id)\n            .then(() => {\n                const newList = listaLotes.filter((item) => item.id !== lote.id);\n                setListaLotes(newList);\n            })\n            .catch(() => null);\n\n        setEliminarDialog(false);\n        setEditing(false);\n    }, [lote.id, listaLotes]);\n\n    const cancelEliminar = useCallback(() => setEliminarDialog(false), []);\n    // --- Variables ---\n\n    const today = useMemo(() => {\n        const currentDate = new Date();\n        return `${currentDate.getFullYear()}-${currentDate.getMonth() + 1}-${currentDate.getDate()}`\n    }, []);\n\n    const listaLotesFormatted = listaLotes.map((lote) => {\n        let colorStock = lote.cantHormas === lote.stockLote ? 'info' : 'default';\n        if (lote.cantHormas > lote.stockLote) colorStock = 'success';\n        if (0 > lote.stockLote) colorStock = 'error';\n        if (0 === lote.stockLote) colorStock = 'default';\n        if (0 === lote.stockLote) colorStock = 'default';\n        return {\n            ...lote, [field.backStockLote]: {\n                stockLote: lote.stockLote, color: colorStock\n            }, [field.backCodigoQueso]: listaQuesos\n                .filter(q => {\n                    return q.codigo === lote.codigoQueso\n                })\n                .pop()\n\n        }\n    });\n\n    if (isLoading) return (<Loading/>)\n\n    return <PageFormTable\n        mdForm={2}\n        lgForm={2}\n        titleForm={\"Producción\"}\n        form={<FormProduccion\n            onBuscar={handleBuscar}\n            initialDate={today}/>}\n        sizeForm={3}\n        table={<GridProduccion\n            quesos={listaQuesos}\n            data={listaLotesFormatted}\n            setSelection={setSelection}/>}>\n        <EditLoteDialog\n            lote={lote}\n            open={isEditing}\n            onClose={closeDialog}\n            onSubmit={handleSubmit}\n            onDelete={eliminarLote}/>\n        <DialogEliminarLote\n            open={eliminarDialog}\n            lote={lote}\n            onClose={cancelEliminar}\n            onSubmit={handleEliminar}/>\n    </PageFormTable>\n}","import { Button, Grid, Typography } from \"@mui/material\";\nimport * as React from 'react';\nimport { createRef, useCallback } from 'react';\nimport { Input } from \"../../components/Input\";\nimport * as field from \"../../resources/fields\";\nimport { toastValidationErrors } from \"../../resources/fields\";\nimport * as message from \"../../resources/messages\";\nimport * as validation from \"../../resources/validations\";\n\nexport const FormTrazabilidad = ({ lote, onBuscar }) => {\n\n    const refIdLote = createRef()\n\n    const handleBuscar = useCallback(() => {\n        const errors = new Map();\n        const values = {};\n\n        refIdLote.current.validate(errors, values, [\n            { func: validation.empty, msg: message.valEmptyField }\n        ])\n\n        if (errors.size > 0) {\n            console.error(errors)\n            toastValidationErrors(errors)\n            return\n        }\n\n        onBuscar(values.id)\n    }, [onBuscar, refIdLote])\n\n    return <Grid container spacing={1.5}>\n        <Grid item xs={12}>\n            <Typography variant=\"h7\" color=\"GrayText\">\n                Buscar Lote\n            </Typography>\n        </Grid>\n        <Grid container\n              style={{\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  padding: 10\n              }}\n              spacing={2}>\n\n            <Grid item xs={9}>\n                <Input ref={refIdLote}\n                       id={field.backID}\n                       label={\"Número de lote\"}\n                       type=\"text\"\n                       required/>\n            </Grid>\n            <Grid item xs={3} alignSelf=\"flex-center\">\n                <Button\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={handleBuscar}\n                    color=\"primary\">Buscar</Button>\n            </Grid>\n        </Grid>\n        <Grid item xs={12}>\n            <Typography variant=\"h7\" color=\"GrayText\">\n                Información del Lote\n            </Typography>\n        </Grid>\n        <Input\n            id={field.backFechaElaboracion}\n            label={field.fechaElaboracion}\n            value={lote.fechaElaboracion}\n            type=\"date\"\n            sm={6}/>\n        <Input\n            id={field.backCodigoQueso}\n            label={field.queso}\n            value={lote.codigoQueso}\n            sm={6}/>\n        <Input\n            id={field.backNumeroTina}\n            label={field.numeroTina}\n            value={lote.numeroTina}\n            sm={6}/>\n        <Input\n            id={field.backLitrosLeche}\n            label={field.litrosLeche}\n            value={lote.litrosLeche}\n            sm={6}/>\n        <Input\n            id={field.backCantHormas}\n            label={field.cantHormas}\n            value={lote.cantHormas}\n            sm={6}/>\n        <Input\n            id={field.backPeso}\n            label={field.peso}\n            value={lote.peso}\n            sm={6}/>\n        <Input\n            id={field.backLoteCultivo}\n            label={field.loteCultivo}\n            value={lote.loteCultivo}\n            type=\"text\"\n            sm={6}/>\n        <Input\n            id={field.backLoteColorante}\n            label={field.loteColorante}\n            value={lote.loteColorante}\n            type=\"text\"\n            sm={6}/>\n        <Input\n            id={field.backLoteCalcio}\n            label={field.loteCalcio}\n            value={lote.loteCalcio}\n            type=\"text\"\n            sm={6}/>\n        <Input\n            id={field.backLoteCuajo}\n            label={field.loteCuajo}\n            value={lote.loteCuajo}\n            type=\"text\"\n            sm={6}/>\n    </Grid>\n}","import { DataGrid } from '@mui/x-data-grid';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport * as field from \"../../resources/fields\";\n\nexport const GridTrazabilidad = ({ data }) => {\n\n    const columns = useMemo(() => {\n        return [{\n            field: field.backFechaExpedicion,\n            headerName: 'Fecha de expedición',\n            type: 'date',\n            valueFormatter: (params) => {\n                const valueFormatted =\n                    params.value.at(8) + params.value.at(9) + '-' +\n                    params.value.at(5) + params.value.at(6) + '-' +\n                    params.value.at(0) + params.value.at(1) +\n                    params.value.at(2) + params.value.at(3);\n                return `${valueFormatted}`;\n            },\n            flex: 0.75,\n            minWidth: 50,\n        },\n            {\n                field: field.backRazonSocial,\n                headerName: 'Cliente',\n                flex: 0.75,\n                minWidth: 50,\n            },\n            {\n                field: field.backCantidad,\n                headerName: 'Cantidad',\n                type: 'number',\n                flex: 0.5,\n                minWidth: 50,\n            },]\n    }, []);\n\n    return  <DataGrid\n        style={{ minHeight: \"600px\" }}\n        autoHeight={true}\n        rows={data}\n        columns={columns}\n        rowHeight={42}\n        pageSize={15}\n        rowsPerPageOptions={[15]}\n    />\n}","import * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport toast from \"react-hot-toast\";\nimport { PageFormTable } from \"../../components/PageFormTable\";\nimport * as field from \"../../resources/fields\";\nimport { getAllClientes, getExpedicionesByLote, getLote } from \"../../services/RestServices\";\nimport { FormTrazabilidad } from \"./FormTrazabilidad\";\nimport { GridTrazabilidad } from \"./GridTrazabilidad\";\n\nconst loteInicial = {\n    id: '',\n    fechaElaboracion: '',\n    numeroTina: '',\n    litrosLeche: '',\n    cantHormas: '',\n    peso: '',\n    loteCultivo: '',\n    loteColorante: '',\n    loteCalcio: '',\n    loteCuajo: '',\n    codigoQueso: ''\n}\n\nexport const VerTrazabilidad = () => {\n\n    const [lote, setLote] = useState(loteInicial);\n    const [listaExpediciones, setListaExpediciones] = useState([])\n    const [listaClientes, setListaClientes] = useState([])\n\n    useEffect(() => fetchClientes(), []);\n\n    const fetchClientes = () => {\n        getAllClientes()\n            .then(({ data }) => {\n                setListaClientes(data)\n            })\n            .catch(() => toast.error(\"No se pudo cargar clientes\"))\n    }\n\n    const handleBuscar = useCallback((idLote) => {\n        getLote(idLote)\n            .then(({ data }) => setLote(data))\n            .catch(() => toast.error('No se pudo cargar el lote'))\n\n        getExpedicionesByLote(idLote)\n            .then(({ data }) => setListaExpediciones(data))\n            .catch(() => toast.error('No se pudieron cargar las expediciones'))\n    }, [])\n\n    const expedicionesFormatted = useMemo(() => listaExpediciones.map(expedicion => {\n        return {\n            id: expedicion.id,\n            [field.backFechaExpedicion]: expedicion.fechaExpedicion,\n            [field.backRazonSocial]: listaClientes.filter(c => c.id === expedicion.idCliente).pop().razonSocial,\n            [field.backCantidad]: expedicion.cantidad\n        }\n    }), [listaClientes, listaExpediciones]);\n\n    return <PageFormTable\n        titleForm={\"Trazabilidad\"}\n        form={<FormTrazabilidad\n            lote={lote}\n            onBuscar={handleBuscar}/>}\n        mdForm={6}\n        lgForm={5}\n        titleTable={\"Expediciones\"}\n        table={<GridTrazabilidad data={expedicionesFormatted}/>}\n    />\n}","import * as React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { CargarClientes } from \"../pages/Clientes/Clientes\";\nimport { CargarExpedicion } from \"../pages/Expedicion/CargarExpedicion\";\nimport { HomePage } from \"../pages/HomePage\";\nimport { CargarProduccion } from \"../pages/Lotes/CargarLote\";\nimport { Mantenimiento } from \"../pages/Mantenimiento/Mantenimiento\";\nimport { CargarPrecios } from \"../pages/Precios/CargarPrecios\";\nimport { CargarQuesos } from \"../pages/Quesos/CargarQuesos\";\nimport { EmitirRemito } from \"../pages/Remito/EmitirRemito\";\nimport { Rendimiento } from \"../pages/Rendimiento/Rendimiento\";\nimport { StockEmbalaje } from \"../pages/StockEmbalaje/StockEmbalaje\";\nimport { StockProductos } from \"../pages/StockProductos/StockProductos\";\nimport { VerVentas } from \"../pages/Ventas/VerVentas\";\nimport { VerLitrosElaborados } from \"../pages/VerLitrosProducidos/VerLitrosElaborados\";\nimport { VerProduccion } from \"../pages/VerProduccion/VerProduccion\";\nimport { VerTrazabilidad } from \"../pages/VerTrazabilidad/VerTrazabilidad\";\nimport * as paths from \"../resources/paths\";\n\nconst ToNotFoundPage = () => {\n    React.useEffect(() => {\n        window.location.pathname = paths.notFound\n    }, [])\n    return <></>\n}\n\nconst Ruta = ({ permisos, path, component }) => {\n    return Array.isArray(permisos) && permisos.includes(path)\n        ? <Route exact path={path} component={component}/>\n        : <></>\n}\n\nexport const Routes = ({ permisos }) => {\n    return <Switch>\n        <Ruta permisos={permisos} path={paths.clientes} component={CargarClientes}/>\n        <Ruta permisos={permisos} path={paths.cargarLotes} component={CargarProduccion}/>\n        <Ruta permisos={permisos} path={paths.cargarExpedicion} component={CargarExpedicion}/>\n        <Ruta permisos={permisos} path={paths.cargarQuesos} component={CargarQuesos}/>\n        <Ruta permisos={permisos} path={paths.cargarPrecios} component={CargarPrecios}/>\n        <Ruta permisos={permisos} path={paths.verLitros} component={VerLitrosElaborados}/>\n        <Ruta permisos={permisos} path={paths.verProduccion} component={VerProduccion}/>\n        <Ruta permisos={permisos} path={paths.verVentas} component={VerVentas}/>\n        <Ruta permisos={permisos} path={paths.verTrazabilidad} component={VerTrazabilidad}/>\n        <Ruta permisos={permisos} path={paths.emitirRemito} component={EmitirRemito}/>\n        <Ruta permisos={permisos} path={paths.stockProductos} component={StockProductos}/>\n        <Ruta permisos={permisos} path={paths.stockEmbalaje} component={StockEmbalaje}/>\n        <Ruta permisos={permisos} path={paths.mantenimiento} component={Mantenimiento}/>\n        <Ruta permisos={permisos} path={paths.rendimiento} component={Rendimiento}/>\n        <Route exact path={paths.home} component={HomePage}/>\n        <Route path={paths.home} component={ToNotFoundPage}/>\n    </Switch>\n}","import { Box, CssBaseline } from \"@mui/material\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport { styled } from \"@mui/material/styles\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { CustomToolbar } from \"../components/CustomToolbar\";\nimport { Drawer } from \"../components/Drawer\";\nimport { Routes } from \"../components/Routes\";\nimport { useAuth } from \"../services/use-auth\";\n\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n    transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: `${drawerWidth}px`,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    }),\n}));\n\nconst MainContainer = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: `-${drawerWidth}px`,\n        ...(open && {\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            marginLeft: 0,\n        }),\n    }),\n);\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n}));\n\nexport const MainPage = ({ theme }) => {\n    const auth = useAuth();\n\n    const [drawerOpen, setDrawerOpen] = useState(false);\n\n    const handleDrawerOpen = () => setDrawerOpen(true)\n    const handleDrawerClose = () => setDrawerOpen(false)\n\n    return <Box display=\"flex\" height=\"98vh\">\n        <CssBaseline/>\n        <AppBar position=\"fixed\" open={drawerOpen}>\n            <CustomToolbar handleDrawerOpen={handleDrawerOpen} drawerOpen={drawerOpen}/>\n        </AppBar>\n        <Drawer\n            drawerWidth={drawerWidth}\n            open={drawerOpen}\n            handleDrawerClose={handleDrawerClose}\n            theme={theme}\n            permisos={auth.authorizations}\n        />\n        <MainContainer open={drawerOpen}>\n            <DrawerHeader/>\n            <Routes permisos={auth.authorizations}/>\n        </MainContainer>\n    </Box>\n}","import * as React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport * as paths from \"../resources/paths\";\nimport { useAuth } from \"../services/use-auth\";\n\nexport const PrivateRoute = ({ children, ...rest }) => {\n    const auth = useAuth();\n\n    return <Route\n        {...rest}\n        render={({ location }) =>\n            auth.isLogged ? (\n                children\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: paths.login,\n                        state: { from: location }\n                    }}\n                />\n            )\n        }\n    />\n}","import { createTheme } from \"@mui/material/styles\";\n\nconst theme = {\n    palette: {\n        common: {\n            black: \"#000\",\n            white: \"#fff\"\n        },\n        background: {\n            paper: \"#fff\",\n            default: \"#fafafa\"\n        },\n        primary: {\n            light: \"rgba(247, 85, 82, 1)\",\n            main: \"rgba(220, 48, 48, 1)\",\n            dark: \"rgba(192, 28, 29, 1)\",\n            contrastText: \"#fff\"\n        },\n        secondary: {\n            light: \"rgba(176, 240, 237, 1)\",\n            main: \"rgba(48, 220, 220, 1)\",\n            dark: \"rgba(0, 186, 193, 1)\",\n            contrastText: \"#fff\"\n        },\n        error: {\n            light: \"#e57373\",\n            main: \"#f44336\",\n            dark: \"#d32f2f\",\n            contrastText: \"#fff\"\n        },\n        text: {\n            primary: \"rgba(0, 0, 0, 0.87)\",\n            secondary: \"rgba(0, 0, 0, 0.54)\",\n            disabled: \"rgba(0, 0, 0, 0.38)\",\n            hint: \"rgba(0, 0, 0, 0.38)\"\n        }\n    }\n}\n\nexport const Theme = () => createTheme(theme);","\"use strict\";\n\nimport { ThemeProvider } from '@emotion/react';\nimport * as React from 'react';\nimport * as ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport { Toast } from \"./components/Toast\";\nimport { ForbiddenPage } from \"./pages/Error/ForbiddenPage\";\nimport { NotFoundPage } from \"./pages/Error/NotFoundPage\";\nimport { LoginPage } from \"./pages/LoginPage\";\nimport { MainPage } from \"./pages/MainPage\";\nimport { PrivateRoute } from \"./pages/PrivateRoute\";\nimport * as paths from \"./resources/paths\";\nimport { Theme } from \"./resources/theme\";\nimport { ProvideAuth } from \"./services/use-auth\";\n\nexport const App = () => {\n    return (\n        <>\n            <ProvideAuth>\n                <ThemeProvider theme={Theme}>\n                    <Router>\n                        <Switch>\n                            <Route exact path={paths.login} component={LoginPage}/>\n                            <Route exact path={paths.forbidden} component={ForbiddenPage}/>\n                            <Route exact path={paths.notFound} component={NotFoundPage}/>\n                            <PrivateRoute path={paths.home}>\n                                <MainPage theme={Theme}/>\n                            </PrivateRoute>\n                            <Redirect from=\"*\" to={paths.home}/>\n                        </Switch>\n                    </Router>\n                </ThemeProvider>\n            </ProvideAuth>\n            <Toast/>\n        </>\n    );\n}\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('react')\n)\n"],"sourceRoot":""}